<?php 
require_once('../Connections/Assessment.php'); 
require_once( "../WA_SecurityAssist/Helper_PHP.php" );
include_once ("../includes/general_custom_functions.php");

mysql_select_db($database_Assessment, $Assessment);

// restrict access if not logged in
if (!WA_Auth_RulePasses("Logged in as coder")){
	WA_Auth_RestrictAccess("../security/logIn.php");
}
// if user hasn't chosen an instrument_id, force them to do so
if (!isset($_SESSION['instrument_id'])) {
	WA_Auth_RestrictAccess("../select_instrument.php");
}

$instrument_id = $_SESSION['instrument_id'];
$instrument_id_name = str_replace("_", " ", $_SESSION['instrument_id']);
$instrument_id_base = str_replace("_JOURNAL", "", $_SESSION['instrument_id']);






// Figure out which coder you are, and which coding table you should be writing to
$coder = 0;
if (isset($_GET['coder'])) { $coder = SQLstr($_GET['coder'], "int"); }
if (isset($_GET['scorer_no'])) { $coder = 1; }

$table = "la_codes_".$coder;
$table = str_replace("_1", "", $table);

$sql_lacodeskey = "";
if (isset($_GET['lacodeskey'])) { 
	$sql_lacodeskey = sprintf(" AND lacodeskey = %s ", SQLstr($_GET['lacodeskey'])); 
}  





//	             //////////////////////////////////////////////////////////////
//  UPDATE QUERY  
//	             //////////////////////////////////////////////////////////////


$editFormAction = $_SERVER['PHP_SELF'];
if (isset($_SERVER['QUERY_STRING'])) {
  $editFormAction .= "?" . htmlentities($_SERVER['QUERY_STRING']);
}

if ((isset($_POST["MM_update"])) && ($_POST["MM_update"] == "form1")) {
	
	
	
	//	Remove newlines from the comments and suggestions fields, replace them with   ***   .
	$codercomment = $_POST['codercomment'];
	$code_recommend = $_POST['code_recommend'];
	
	$stringValidCodeNumbers = $_POST['stringValidCodeNumbers'];
	
	// Start the SQL update statement
	$updateSQL = sprintf("UPDATE {$table} SET codercomment=%s, ",
					SQLstr($codercomment, "text"));	
	
	/**** This is a dynamically written SQL update statement that includes only mention of the code numbers for which code values are being posted. For each number in the possible code range, it tests to see if there's a POST value for that number, and if so, it updates from it. 
	Checkboxes in forms are finnicky: if unchecked, they drop out of the $_POST array altogether. So to validly determine the checkbox's value, you have to check whether a $_POST variable is set for that code.
	*/
	
	$i = 231;
	while ($i < 325) { // for each possible code number in this range...
		if (strpos($stringValidCodeNumbers,"{$i}")) {
			$updateSQL .= "code".$i."=";
			// set the code value depending on whether a $_POST item is present...
			$updateSQL .= isset($_POST["code{$i}"]) ? $_POST["code{$i}"] : "'0'";
			$updateSQL .= ", ";
		}
		$i ++; // ...and increment the local while-loop ticker in either case.
	} // end WHILE loop.
	
	// Now finish writing the update query. 
	$updateSQL .= sprintf(" code_recommend=%s 
		WHERE lakey = %s {$sql_lacodeskey}",
				SQLstr($code_recommend, "text"),
				SQLstr($_GET['lakey'], 'int'));
	
	//	Now execute the fully-written query.
  mysql_select_db($database_Assessment, $Assessment);
  $Result1 = mysql_query($updateSQL, $Assessment) or die(mysql_error());


	// Send on to 4th perspective page

	$updateGoTo = "code_ldma_perspective4.php";
  if (isset($_SERVER['QUERY_STRING'])) {
    $updateGoTo .= (strpos($updateGoTo, '?')) ? "&" : "?";
    $updateGoTo .= $_SERVER['QUERY_STRING'];
  }
  header(sprintf("Location: %s", $updateGoTo));
	
}
	
	





//              //////////////////////////////////////////////////////////////
//	RECORDSETS
//	            //////////////////////////////////////////////////////////////

//	Recordset: la_data
$colname_rsLaData = "-1";
if (isset($_GET['lakey'])) {
  $colname_rsLaData = $_GET['lakey'];
}
mysql_select_db($database_Assessment, $Assessment);
$query_rsLaData = sprintf("SELECT dilemmakey, probe01, probe02, probe03, probe04, probe05, probe06, probe07 FROM la_data WHERE lakey = %s", SQLstr($colname_rsLaData, "int"));
$rsLaData = mysql_query($query_rsLaData, $Assessment) or die(mysql_error());
$row_rsLaData = mysql_fetch_assoc($rsLaData);
$totalRows_rsLaData = mysql_num_rows($rsLaData);



mysql_select_db($database_Assessment, $Assessment);
$query_rsLaCodeDescriptions = sprintf("SELECT code_name231, code_name232, code_name233, code_name234, code_name235, code_name236, code_name237, code_name238, code_name239, code_name240, code_name241, code_name242, code_name243, code_name244, code_name245, code_name246, code_name247, code_name248, code_name249, code_name250, code_name251, code_name252, code_name253, code_name254, code_name255, code_name256, code_name257, code_name258, code_name259, code_name260, code_name261, code_name262, code_name263, code_name264, code_name265, code_name266, code_name267, code_name268, code_name269, code_name270, code_name271, code_name272, code_name273, code_name274, code_name275, code_name276, code_name277, code_name278, code_name279, code_name280, code_name281, code_name282, code_name283, code_name284, code_name285, code_name286, code_name287, code_name288, code_name289, code_name290, code_name291, code_name292, code_name293, code_name294, code_name295, code_name296, code_name297, code_name298, code_name299, code_name300, code_name301, code_name302, code_name303, code_name304, code_name305, code_name306, code_name307, code_name308, code_name309, code_name310, code_name311, code_name312, code_name313, code_name314, code_name315, code_name316, code_name317, code_name318, code_name319, code_name320, code_name321, code_name322, code_name323, code_name324, code_name325, code_name326, code_name327, code_name328, code_name329, code_name330 FROM la_code_descriptions WHERE instrument_id = %s", 
		SQLstr($instrument_id_base, "text"));
$rsLaCodeDescriptions = mysql_query($query_rsLaCodeDescriptions, $Assessment) or die(mysql_error());
$row_rsLaCodeDescriptions = mysql_fetch_assoc($rsLaCodeDescriptions);
$totalRows_rsLaCodeDescriptions = mysql_num_rows($rsLaCodeDescriptions);



// Recordset: la_codes or la_codes_2 depending on who's viewing
$colname_rsLaCodes = "-1";
if (isset($_GET['lakey'])) {
  $colname_rsLaCodes = $_GET['lakey'];
}
mysql_select_db($database_Assessment, $Assessment);
$query_rsLaCodes = sprintf("SELECT d.coded_1, d.coded_2, d.coded_3, 
		codercomment, code_recommend, code231, code232, code233, code234, code235, code236, code237, code238, code239, code240, code241, code242, code243, code244, code245, code246, code247, code248, code249, code250, code251, code252, code253, code254, code255, code256, code257, code258, code259, code260, code261, code262, code263, code264, code265, code266, code267, code268, code269, code270, code271, code272, code273, code274, code275, code276, code277, code278, code279, code280, code281, code282, code283, code284, code285, code286, code287, code288, code289, code290, code291, code292, code293, code294, code295, code296, code297, code298, code299, code300, code301, code302, code303, code304, code305, code306, code307, code308, code309, code310, code311, code312, code313, code314, code315, code316, code317, code318, code319, code320, code321, code322, code323, code324, code325, code326, code327, code328, code329, code330 
	FROM {$table} c JOIN la_data d ON c.lakey = d.lakey 
	WHERE c.lakey = %s {$sql_lacodeskey}", 
		SQLstr($colname_rsLaCodes, "int"));
$rsLaCodes = mysql_query($query_rsLaCodes, $Assessment) or die(mysql_error());
$row_rsLaCodes = mysql_fetch_assoc($rsLaCodes);
$totalRows_rsLaCodes = mysql_num_rows($rsLaCodes);

// Recordset: la_probes
mysql_select_db($database_Assessment, $Assessment);
$query_rsLaProbes = sprintf("SELECT probe_number, probe_name FROM la_probes WHERE instrument_id = %s", 
		SQLstr($instrument_id_base, "text"));
$rsLaProbes = mysql_query($query_rsLaProbes, $Assessment) or die(mysql_error());
$row_rsLaProbes = mysql_fetch_assoc($rsLaProbes);
$totalRows_rsLaProbes = mysql_num_rows($rsLaProbes);


mysql_select_db($database_Assessment, $Assessment);
$query_rsLaDilemmas = sprintf("SELECT dilemma_name, dilemma FROM la_dilemmas WHERE dilemmakey = %s", SQLstr($row_rsLaData['dilemmakey'], "int"));
$rsLaDilemmas = mysql_query($query_rsLaDilemmas, $Assessment) or die(mysql_error());
$row_rsLaDilemmas = mysql_fetch_assoc($rsLaDilemmas);
$totalRows_rsLaDilemmas = mysql_num_rows($rsLaDilemmas);


mysql_select_db($database_Assessment, $Assessment);
$query_rsLaBoilerplate = sprintf("SELECT la_boilerplate_text FROM la_boilerplate WHERE name = %s", 
		SQLstr("coders_definitions", "text"));
$rsLaBoilerplate = mysql_query($query_rsLaBoilerplate, $Assessment) or die(mysql_error());
$row_rsLaBoilerplate = mysql_fetch_assoc($rsLaBoilerplate);
$totalRows_rsLaBoilerplate = mysql_num_rows($rsLaBoilerplate);






?>



<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/assess3.dwt.php" codeOutsideHTMLIsLocked="false" -->

<head>

<link href='https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic' rel='stylesheet' type='text/css'>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- InstanceBeginEditable name="doctitle" -->
<title>Coding LDMA perspective page 3</title>
<!-- InstanceEndEditable -->
<!-- InstanceBeginEditable name="head" -->
<script src="../SpryAssets/SpryCollapsiblePanel.js" type="text/javascript"></script>
<link href="../SpryAssets/SpryCollapsiblePanel.css" rel="stylesheet" type="text/css" />
<!-- InstanceEndEditable -->

<?php
$img_header = "DTSheader880.jpg";
if (isset($_SESSION['instrument_id'])) { $img_header = $_SESSION['instrument_id']."header880.jpg"; }
?>

<style type="text/css"> 
<!-- 
body  {
	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0; /* this centers the container in IE 5* browsers. The text is then set to the left aligned default in the #container selector */
	color: #333333;
	background-color: #FFF;
}
.twoColFixRtHdr #header {
	background-image: url(/_images/skin/backgrounds/<?php echo $_SESSION['instrument_id']; ?>_background.png);
	background-repeat: repeat;
	background-color: #93CCCB;
	height: 74px;
} 
--> 
--> 
</style>
<!--[if IE 5]>
<style type="text/css"> 
/* place css box model fixes for IE 5* in this conditional comment */
.twoColFixRtHdr #sidebar1 { width: 220px; }
</style>
<![endif]--><!--[if IE]>

<style type="text/css"> 
/* place css fixes for all versions of IE in this conditional comment */
.twoColFixRtHdr #sidebar1 { padding-top: 30px; }
.twoColFixRtHdr #mainContent { zoom: 1; }
/* the above proprietary zoom property gives IE the hasLayout it needs to avoid several bugs */
</style>
<![endif]-->

<link href="/_css/template.css" rel="stylesheet" type="text/css" />
<link href="/_css/template_assess3.css" rel="stylesheet" type="text/css" />

</head>

<body class="twoColFixRtHdr">

<div id="header">
	<?php if (isset($_SESSION['instrument_id'])) { ?>
    <div id="header_logo">
      <p class="uppercase"><?php echo str_replace("_", " ", $_SESSION['instrument_id']); ?></p>
    </div>
	<?php } else { ?>
  	<div class="header1_column1"></div>
  <?php } ?>
</div>

<div id="menu1">
  <h3>
				<?php include("../_includes/navigation/header_1a.html"); ?>
				<!-- InstanceBeginEditable name="ExtraMenuItem1" -->&nbsp;<!-- InstanceEndEditable -->&nbsp;
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
					<?php if (isset($_SESSION['log_firstname'])) {  ?>
  					You are logged in as <?php echo $_SESSION['log_firstname']." ".$_SESSION['log_lastname'];  } ?></h3>
</div>
	
<div id="container">
<p><!-- InstanceBeginEditable name="menu3" --><?php include 'code_quickmenu.php'; ?><!-- InstanceEndEditable --></p>
<div id="mainContent"> <!-- InstanceBeginEditable name="main" -->
    <h1>CODE <?php echo $_SESSION['instrument_id']; ?> NUMBER <?php echo $_GET['lakey']; ?> - PERSPECTIVE PAGE 3</h1>
    
    <div id="CollapsiblePanel2" class="CollapsiblePanel">
      <div class="CollapsiblePanelTab">The dilemma text (<?php echo $row_rsLaDilemmas['dilemma_name']; ?>)</div>
      <div class="CollapsiblePanelContent"><p><?php echo $row_rsLaDilemmas['dilemma']; ?></p></div>
    </div>

    <div id="CollapsiblePanel3" class="CollapsiblePanel">
      <div class="CollapsiblePanelTab">Definitions</div>
      <div class="CollapsiblePanelContent">
        <?php echo $row_rsLaBoilerplate['la_boilerplate_text']; ?>
      </div>
    </div>
    
    <div id="CollapsiblePanel1" class="CollapsiblePanel">
      <div class="CollapsiblePanelTab">TEST-TAKER RESPONSES</div>
      <div class="CollapsiblePanelContent">
      	<?php 
					do {
						echo "<h3>Probe ".$row_rsLaProbes['probe_number'].": ".$row_rsLaProbes['probe_name']."</h3>";
						echo "<p>";
						// Output the la_data interview text for the corresponding probe!
						echo $row_rsLaData['probe'.$row_rsLaProbes['probe_number']];
						echo "</p>";
					} while ($row_rsLaProbes = mysql_fetch_assoc($rsLaProbes));
				?>
      </div>
    </div>
    <!-- The two above collapsible panels are fine to stay on this page - just copied wholesale from the prior page. -->
    <form id="form1" name="form1" method="POST" action="<?php echo $editFormAction; ?>">
        <?php 
		/* stringValidCodeNumbers keeps track of what checkbox elements were dynamically added to the form, which depended on what codes have names for the prespecified number ranges. It's important to have all the numbers in one place so that when you're submitting your SQL update you can figure out what codes to update and what $_POST variables are valid to call on. */
		$stringValidCodeNumbers = ", ";  
		?>
      <table width="680" border="0" class="tablenoborders">
        <tr>
        <td width="206">&nbsp;</td>
        <td><div align="right">
          <input name="SUBMIT2" type="submit" value="SUBMIT" />
        </div></td>
      </tr>
        <tr>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      <tr>
        <td colspan="2" class="tablehead_knockout">Considerations  </td>
        </tr>
      <tr>
        <td width="206">individual differences in...</td>
        <td><input <?php if (!(strcmp($row_rsLaCodes['code233'], 1))) { echo "checked='checked'"; } ?> 
        	name="code233" type="checkbox" value="1" /> <?php echo $row_rsLaCodeDescriptions['code_name233']; ?>
        </td>
      </tr>
      
      <tr>
        <td width="206">&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td width="206">practical considerations</td>
        <td><input <?php if (!(strcmp($row_rsLaCodes['code304'], 1))) { echo "checked='checked'"; } ?> 
        	name="code304" type="checkbox" value="1" /> <?php echo $row_rsLaCodeDescriptions['code_name304']; ?>
        </td>
    	</tr>
      <tr>
        <td width="206">&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td width="206">organizational objectives (explicitly discusses organizational level objectives)</td>
        <td><?php 
        	// This value is static, set as the first code in each category.
					$current_code = 311;	// organizational objectives
					// While the code description is not blank for the current code...
					while ($row_rsLaCodeDescriptions['code_name'.$current_code] <> "")
        	{
						/* Add a checkbox and a code label for that code. 
							 Check the checkbox depending on its status in la_codes.  */
						?>
            <input <?php if (!(strcmp($row_rsLaCodes['code'.$current_code],1))) {echo "checked=\"checked\"";} ?> name="code<?php echo $current_code; ?>" type="checkbox" value="1" /> <?php echo $row_rsLaCodeDescriptions['code_name'.$current_code]; 
						// Add the current code number to the guest list, and increment. 
						$stringValidCodeNumbers .= $current_code.", ";
						$current_code ++;
						// Add BREAK character if another code is coming up
						if ($row_rsLaCodeDescriptions['code_name'.$current_code] <> "") 
							{ echo " | "; }
						// Then the loop restarts. While loop will break when a blank codename is reached.
					}
				 ?>
         </td>
    </tr>
</table>
<table width="680" border="0" class="tablenoborders">
  <tr>
    <td scope="col">Suggestions for new / changed codes: (Press ENTER to separate different suggestions.)</td>
    <td scope="col"><textarea name="code_recommend" cols="45" rows="5" class="textarea080_450" id="code_recommend"><?php echo $row_rsLaCodes['code_recommend']; ?></textarea></td>
  </tr>
  <tr>
    <td scope="col">Coder comments about the performance:</td>
    <td scope="col"><textarea name="codercomment" cols="45" rows="5" class="textarea080_450" id="codercomment"><?php echo $row_rsLaCodes['codercomment']; ?></textarea></td>
  </tr>
  <tr>
    <td width="429" scope="col">&nbsp;</td>
    <td width="95" scope="col"><div align="right">
      <input name="SUBMIT" type="submit" value="SUBMIT" />
    </div></td>
  </tr>
</table>
<input type="hidden" name="MM_update" value="form1" />
    <input name="stringValidCodeNumbers" type="hidden" value="<?php echo $stringValidCodeNumbers; ?>" />
    </form>
    <p>&nbsp;</p>


  <script type="text/javascript">
var CollapsiblePanel1 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel1");
var CollapsiblePanel2 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel2");
var CollapsiblePanel3 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel3");
  </script>
  <!-- InstanceEndEditable -->
  <!-- end #mainContent --></div>
  <!-- This clearing element should immediately follow the #mainContent div in order to force the #container div to contain all child floats --><br class="clearfloat" />
  <!-- end #container -->
</div>
</body>
<!-- InstanceEnd --></html>


<?php
mysql_free_result($rsLaData);
mysql_free_result($rsLaCodeDescriptions);
mysql_free_result($rsLaCodes);
mysql_free_result($rsLaProbes);
mysql_free_result($rsLaDilemmas);
?>
