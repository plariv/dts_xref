<?php 
include_once ("../includes/dts_functions.php");
include_once ("assess_custom_functions.php");

// Initializing frequently used variables
if (!WA_Auth_RulePasses("Logged in to registrants")) { WA_Auth_RestrictAccess("../security/logIn.php"); }
$userkey = $_SESSION['log_userkey'];
// if user hasn't chosen an instrument_id, force them to do so
if (!isset($_SESSION['instrument_id'])) { WA_Auth_RestrictAccess("../select_instrument.php"); }
$instrument_id = $_SESSION['instrument_id'];
$instrument_id_name = str_replace("_", " ", $_SESSION['instrument_id']);
$instrument_id_base = str_replace("_JOURNAL", "", $_SESSION['instrument_id']);
$lakey = 0; if (isset($_GET['lakey'])) { $lakey = $_GET['lakey']; }

// Needs to be initialized empty to avoid minor PHP errors.
$status = "";
$editFormAction = $_SERVER['PHP_SELF']."?".$_SERVER['QUERY_STRING'];



// Count how many probes there are
$query_rsProbes = sprintf("SELECT * FROM la_probes WHERE instrument_id = %s ORDER BY probe_number", 
		SQLstr($instrument_id_base, "text"));
$rsProbes = mysql_query($query_rsProbes) or die(mysql_error());
$numProbes = mysql_num_rows($rsProbes);

// Fetch info on this probe
$query_rsProbe = sprintf("SELECT * FROM la_probes WHERE instrument_id = %s AND probe_number = 1", 
		SQLstr($instrument_id_base, "text"));
// topher($query_rsProbe); 
$rsProbe = mysql_query($query_rsProbe) or die(mysql_error());
$row_rsProbe = mysql_fetch_assoc($rsProbe);
$title = $row_rsProbe['probe_name'];
$probe = $row_rsProbe['probe_description'];



// 					FOLA COURSE DETAILS

// Course assignment details 
if ($instrument_id_base == "FOLA") {
	$query_rsFolaAssn = sprintf("SELECT c.*, cd.*, cr.taken_at_level, d.timestamp, d.date_completed 
	FROM courses_old c
	JOIN course_dates_old cd ON c.coursekey = cd.coursekey 
											 AND NOW() BETWEEN cd.course_start_date AND cd.course_end_date
	JOIN course_registration_old cr ON cd.coursedatekey = cr.coursedatekey 
	JOIN la_data d ON d.lakey = %s 
	WHERE c.coursekey = 101 AND cr.userkey = %s ",
			SQLstr($lakey, "int"),
			SQLstr($userkey, "int"));
	$rsFolaAssn = mysql_query($query_rsFolaAssn, $Assessment) or die(mysql_error());
	$row_rsFolaAssn = mysql_fetch_assoc($rsFolaAssn);
	$totalRows_rsFolaAssn = mysql_num_rows($rsFolaAssn);
}

// Preparing FOLA course assignment information, if relevant

$courseAssnTitle = "";
$courseAssn = "";
if (isset($totalRows_rsFolaAssn) AND $totalRows_rsFolaAssn > 0) {
	// Figure out which assignment this is, based on deadlines
	$i = 1; $i_pad = str_pad($i, 2, '0', STR_PAD_LEFT);
	while (date('Y-m-d', strtotime($row_rsFolaAssn['timestamp']))
			 > $row_rsFolaAssn['assignment'.$i_pad.'_date']) 
	{
		$i ++; $i_pad = str_pad($i, 2, '0', STR_PAD_LEFT);
	}
	// topher("This is module #".$i);
	$courseAssnNumber = $i_pad;
	$courseAssnLevel = $row_rsFolaAssn['taken_at_level'];
	$courseAssn = $row_rsFolaAssn['class'.$i_pad.'_assignment_level'.$courseAssnLevel];
	$courseAssnDueDate = $row_rsFolaAssn['assignment'.$i_pad.'_date'];
	$courseAssn = str_replace("[DATE]", $courseAssnDueDate, $courseAssn);
	$probe = $row_rsFolaAssn['class'.$i_pad.'_assignment_level'.$courseAssnLevel.'_probe1'];
	$courseAssnTitle = $row_rsFolaAssn['class'.$i_pad.'_tab_label'];
	
	// count # of probes to this question
	$col = 'class'.$i_pad.'_assignment_level'.$courseAssnLevel.'_probe';
	$numProbes = 1;
	$i = 1;
	while (isset($row_rsFolaAssn[$col.($i+1)]) AND $row_rsFolaAssn[$col.($i+1)] <> "") { 
		$numProbes ++; $i ++; 
	}
	//exit();
}



// Decide on the minimum character requirement.
$minwords = 150;	// default = 1000 characters. That's like 150 words ish.
$maxwords = 550;

if ($instrument_id_base == "LDMA") {
	// For the LDMA, determine the character requirement by management level.
	$query_rsManLevelNumber = sprintf("SELECT dem.manlevelkey, dem.man_level_number FROM la_data d JOIN demogs_man_level dem ON d.manlevelkey = dem.manlevelkey WHERE d.lakey = %s ", 
			SQLstr($lakey, "int"));
	$rsManLevelNumber = mysql_query($query_rsManLevelNumber, $Assessment) or die(mysql_error());
	$row_rsManLevelNumber = mysql_fetch_assoc($rsManLevelNumber);
	if ($row_rsManLevelNumber['man_level_number'] > 0) { 
		if ($row_rsManLevelNumber['man_level_number'] <= 4) { $minwords = 100; } 
	}
	else { $minwords = 150; }
}

if 			($instrument_id_base == "LMBE") { $minwords = 200; }
else if ($instrument_id_base == "FOLA") { $minwords = 250; }
else if ($instrument_id_base == "SMA")  { $minwords = 20; }
else if ($instrument_id_base == "SMJ")  { $minwords = 25; }



if ((isset($_POST["MM_update"])) && ($_POST["MM_update"] == "form1")) {
	
	// add SQL for any "choicekey" menu selections
	$sql_choices = "";
	for ($i = 1; $i <= 2; $i ++) { 
		if (isset($_POST['choicekey0'.$i])) { 
			$sql_choices .= sprintf(" choicekey0%s = %s, ",
				$i, SQLstr($_POST['choicekey0'.$i], 'int'));
		}
	}
	
  $updateSQL = sprintf("UPDATE la_data 
		SET projectkey = %s, dilemmakey = %s, module_number = %s, 
			probe01 = %s, {$sql_choices} referencelist = %s 
		WHERE lakey = %s",
			 SQLstr($_POST['projectkey'], 'int'),
			 SQLstr((isset($_POST['dilemmakey']) 	? $_POST['dilemmakey'] : NULL), 'int'),
			 SQLstr(isset($courseAssnNumber) 			? $courseAssnNumber : NULL, 'int'),
			 SQLstr($_POST['probe01'], "text"),
			 SQLstr((isset($_POST['referencelist']) ? $_POST['referencelist'] : NULL), 'text'),
			 SQLstr($_POST['lakey'], 'int'));
	//topher($updateSQL);
  $Result1 = mysql_query($updateSQL, $Assessment) or die("This webpage cannot be displayed. We apologize for the inconvenience. Please report this error message to the website administrators, and we will repair it promptly. la_data update-SQL on assess_essay1.php: ".mysql_error());
	

	// The POST command will not send you to the next page if the button "SAVE YOUR WORK" was clicked; 
	//only if the other button "SAVE AND GO TO NEXT PAGE" was clicked.
	if (!isset($_POST['save_changes'])) {
		
		// If your essays is under the minimum character length requirement...
		if (str_word_count($_POST['probe01']) < $minwords) {
			// refresh this page - with a message explaining to the user why they can't go on.
			$status = "under min words";
		} else if (str_word_count($_POST['probe01']) > $maxwords+15) { 
			// if you're over the maximum character limit...
			// refresh this page - with a message explaining to the user why they can't go on.
			$status = "over max words";
		} else {
		
			$updateGoTo = "assess_essay2.php";
			// The Foundations course assignments only have 1 page.
			if ($numProbes == 1) { $updateGoTo = "assess_complete.php"; } 
			
			if (isset($_SERVER['QUERY_STRING'])) {
				$updateGoTo .= (strpos($updateGoTo, '?')) ? "&" : "?";
				$updateGoTo .= $_SERVER['QUERY_STRING'];
			}
			header(sprintf("Location: %s", $updateGoTo));
			exit();
			
		} 
	}
	
	
}








// 									RECORDSETS  								 //

//essays and attached data
$query_rsEssays = sprintf("SELECT d.lakey, d.instrument_id, d.timestamp, 
		di.dilemmakey, di.dilemma_name, di.dilemma, 
		d.completed, d.date_completed, d.test_time, d.projectkey, d.manlevelkey, 
		r.sectorkey, ds.sector, r.`group`, 
		d.probe01, d.choicekey01, d.choicekey02, d.referencelist, d.resellerkey, d.assignmentkey
	FROM la_data d
		JOIN registrants r ON d.userkey = r.userkey
		LEFT JOIN la_dilemmas di ON d.dilemmakey = di.dilemmakey
		LEFT JOIN demogs_sector ds ON r.sectorkey = ds.sectorkey
	WHERE d.lakey = %s ", 
		SQLstr($lakey, "int"));
$rsEssays = mysql_query($query_rsEssays, $Assessment) or die("rsEssays: ".mysql_error());
$row_rsEssays = mysql_fetch_assoc($rsEssays);

// If I've completed this record, kick me out.
if ($row_rsEssays['completed'] == 1) { header("Location: ../landing.php"); exit(); }

// SMA: Randomly select a rubric to use for this question.
// Select from rubrics which you haven't already used in this assessment,
// and give preference to rubrics which you have never used. 
if ($title == "random_lamenus") {
	// If a la_menus selection hasn't already been made for this question, make one now.
	if ($row_rsEssays['choicekey01'] < 1) { 
	
		// Get list of themes that have already been selected in this assessment time
		$sql_current = sprintf("SELECT r.theme_name
			FROM la_data d
			LEFT JOIN la_menus m ON (d.choicekey01 = m.menukey 
				OR d.choicekey02 = m.menukey OR d.choicekey03 = m.menukey 
				OR d.choicekey04 = m.menukey OR d.choicekey05 = m.menukey)
			LEFT JOIN la_rubrics r ON r.theme_menukey = m.menukey
			WHERE d.lakey = %s AND r.theme_name IS NOT NULL
			GROUP BY r.theme_name ",
				SQLstr($lakey, 'int'));
		$rsCurrent = mysql_query($sql_current) or die(mysql_error());
		// $sql snippet stores list of already-used themes (this record) to PREVENT selecting
		$sql_current = "";	
		while ($row_rsCurrent = mysql_fetch_assoc($rsCurrent)) {
			$sql_current .= " AND r.theme_name <> ".SQLstr($row_rsCurrent['theme_name'], 'text');
		}
		
		// Get list of RUBRICS that were used in past test times (to avoid)
		$sql_prev = sprintf("SELECT m.menukey
			FROM la_data d
			LEFT JOIN la_menus m ON (d.choicekey01 = m.menukey 
				OR d.choicekey02 = m.menukey OR d.choicekey03 = m.menukey 
				OR d.choicekey04 = m.menukey OR d.choicekey05 = m.menukey)
			WHERE d.userkey = %s AND d.instrument_id = %s AND m.menukey IS NOT NULL ",
				SQLstr($userkey, 'int'),
				SQLstr($instrument_id, 'text'));
		$rsPrev = mysql_query($sql_prev) or die(mysql_error());
		// $sql snippet stores list of already-used menukeys (all past records) to AVOID selecting
		$sql_prev = "";
		while ($row_rsPrev = mysql_fetch_assoc($rsPrev)) {
			$sql_prev .= " OR m.menukey = ".SQLstr($row_rsPrev['menukey'], 'int');
		}
		
		// select from the rubrics / prompts available in la_menus.
		$sql_rubric = sprintf("SELECT m.menukey, m.menu_item AS title, m.menu_item_name AS prompt, 
				r.theme_name, IF ( 1=0 {$sql_prev}, 1, 0) AS sort_used, RAND() AS sort_random
			FROM la_menus m
			JOIN la_rubrics r ON m.menukey = r.theme_menukey
			WHERE m.instrument_id = %s AND m.type = 'assess' AND m.active = 1
			{$sql_current}
			GROUP BY m.menukey
			ORDER BY sort_used ASC, sort_random ASC
			LIMIT 1",
				SQLstr($instrument_id, 'text'));
		// topher($sql_rubric);
		$rsRubric = mysql_query($sql_rubric) or die("ERROR finding a rubric: ".mysql_error());
		$row_rsRubric = mysql_fetch_assoc($rsRubric);
		
		$title = $row_rsRubric['title'];
		$probe = $row_rsRubric['prompt'];
		$choicekey = $row_rsRubric['menukey'];
		
		// Save this selection so user can't change it.
		$sql_save = sprintf("UPDATE la_data d SET choicekey01 = %s
			WHERE lakey = %s ",
				SQLstr($choicekey, 'int'),
				SQLstr($lakey, 'int'));
		// topher($sql_save);
		$result = mysql_query($sql_save) or die("ERROR saving rubric selection: ".mysql_error());
		
	} else { // If a la_menus selection IS already saved, just load that.
		
		$sql_rubric = sprintf("SELECT m.menukey, m.menu_item AS title, m.menu_item_name AS prompt
			FROM la_menus m WHERE m.menukey = %s ",
				SQLstr($row_rsEssays['choicekey01'], 'int'));
		$rsRubric = mysql_query($sql_rubric) or die("ERROR fetching your saved rubric. ".mysql_error());
		$row_rsRubric = mysql_fetch_assoc($rsRubric);
		
		$title = $row_rsRubric['title'];
		$probe = $row_rsRubric['prompt'];
		$choicekey = $row_rsRubric['menukey'];
		
	}
}

// LSUA + LLRA: Fetch menu options for test taker to select.
// You can't select a menu option that you've already selected on another question.
if ($instrument_id_base == "LSUA" OR $instrument_id_base == "LLRA") {
	$query_rsLaMenus = sprintf("SELECT menukey, menu_item FROM la_menus 
	WHERE instrument_id = %s AND type = 'assess' AND active = 1
	AND NOT EXISTS ( 
		SELECT * FROM la_data WHERE lakey = %s AND 
		( choicekey02 = menukey OR choicekey03 = menukey
		 OR choicekey04 = menukey OR choicekey05 = menukey OR choicekey06 = menukey
		 OR choicekey07 = menukey )
	) ORDER BY menu_item ", 
		SQLstr($instrument_id_base, "text"),
		SQLstr($lakey, "int"));
	$rsLaMenus = mysql_query($query_rsLaMenus, $Assessment) or die(mysql_error());
	$row_rsLaMenus = mysql_fetch_assoc($rsLaMenus);
	$totalRows_rsLaMenus = mysql_num_rows($rsLaMenus);
}

// LDPA: fetch menu options for student and domain
// You can't select a menu option that you've already selected on a previous assessment.
if ($instrument_id == "LDPA") {
	
	$sql_menuStudents = sprintf("SELECT menukey, menu_item FROM la_menus 
	WHERE instrument_id = %s AND menu = 'ldpa_student' AND active = 1
		AND NOT EXISTS ( 
			SELECT * FROM la_data WHERE userkey = %s AND lakey <> %s AND choicekey01 = menukey
		) 
	ORDER BY item_order ", 
		SQLstr($instrument_id, 'text'),
		SQLstr($userkey, 'int'),
		SQLstr($lakey, 'int'));
	$rsMenuStudents = mysql_query($sql_menuStudents) or die("ERROR listing students: ".mysql_error());
	
	$sql_menuDomains = sprintf("SELECT menukey, menu_item FROM la_menus 
	WHERE instrument_id = %s AND menu = 'ldpa_domain' AND active = 1
		AND NOT EXISTS ( 
			SELECT * FROM la_data WHERE userkey = %s AND lakey <> %s AND choicekey02 = menukey 
		) 
	ORDER BY item_order ", 
		SQLstr($instrument_id, 'text'),
		SQLstr($userkey, 'int'),
		SQLstr($lakey, 'int'));
	$rsMenuDomains = mysql_query($sql_menuDomains) or die("ERROR listing domains: ".mysql_error());
	
}


//project 
$query_rsProject = sprintf("SELECT la_data.lakey, la_data.projectkey, la_data.resellerkey, bulkcustomerinfo.bulkcustomerkey, bulkcustomerinfo.projectkey FROM la_data, bulkcustomerinfo WHERE la_data.lakey = %s AND la_data.resellerkey = bulkcustomerinfo.bulkcustomerkey", 
		SQLstr($lakey, "int"));
$rsProject = mysql_query($query_rsProject, $Assessment) or die(mysql_error());
$row_rsProject = mysql_fetch_assoc($rsProject);
$totalRows_rsProject = mysql_num_rows($rsProject);




// Check whether there is an assignment in la_assignments.
// If there is a dilemma assigned, include info on that dilemma.
// But this query is useful in getting the assignment message even if no dilemma was assigned.

$query_rsAssignments = sprintf("SELECT a.*, dil.*, rb.company 
FROM registrants r 
JOIN students_assignments sa ON r.userkey = sa.userkey 
JOIN la_assignments a ON sa.assignmentkey = a.assignmentkey
LEFT JOIN la_data d ON d.userkey = r.userkey AND d.assignmentkey = sa.assignmentkey
LEFT JOIN la_dilemmas dil ON a.assign_dilemmakey = dil.dilemmakey 
LEFT JOIN registrants rb ON a.bulkcustomerkey = rb.userkey 
WHERE r.userkey = %s AND a.instrument_id = %s AND (d.lakey IS NULL OR d.lakey = %s)
ORDER BY date_end ASC LIMIT 1",
		SQLstr($userkey, "int"),
		SQLstr($instrument_id, "text"),
		SQLstr($lakey, "int"));
$rsAssignments = mysql_query($query_rsAssignments, $Assessment) or die("rsAssignments: ".mysql_error());
$row_rsAssignments = mysql_fetch_assoc($rsAssignments);
$totalRows_rsAssignments = mysql_num_rows($rsAssignments);
// die($query_rsAssignments);


/*
	 SELECTS all dilemmas that are relevant to a person taking the LDMA.
	 It filters out dilemmas that are outside of their management level range,
	 as well as dilemmas that aren't relevant to their work sector,
	 as well as dilemmas that have already been used in a DIFFERENT past performance.
	 ** Also GROUPS dilemmas by name so that, if you don't have a management level, 
	 you aren't presented with three versions of the same dilemma.
		 -TH
*/


$query_rsAllDilemmas = "SELECT * FROM la_dilemmas WHERE instrument_id = ".
		SQLstr($instrument_id_base, "text");
$rsAllDilemmas = mysql_query($query_rsAllDilemmas, $Assessment) or die(mysql_error());
$row_rsAllDilemmas = mysql_fetch_assoc($rsAllDilemmas);
$totalRows_rsAllDilemmas = mysql_num_rows($rsAllDilemmas);


$query_rsDilemmas = sprintf("SELECT di.* 
FROM la_dilemmas di
LEFT JOIN la_data d ON d.lakey = %s 
LEFT JOIN demogs_man_level dem ON d.manlevelkey = dem.manlevelkey 
WHERE di.instrument_id = %s  
AND 
(
	d.dilemmakey = di.dilemmakey
	OR dem.man_level_number IS NULL 
	OR
	( 
		( dem.man_level_number = 0 
		 OR dem.man_level_number BETWEEN di.man_level_low AND di.man_level_high )
		AND EXISTS ( SELECT * FROM registrants r JOIN demogs_sector ds ON r.sectorkey = ds.sectorkey 
			WHERE r.userkey=%s AND ds.sector = di.dilemma_sector ) 
		AND NOT EXISTS (SELECT * FROM la_data d2 
			WHERE d2.userkey=%s AND di.dilemmakey = d2.dilemmakey ) 
	)
) 
GROUP BY di.dilemma_name
ORDER BY di.dilemma_sector, di.dilemma_name ", 
		SQLstr($lakey, "int"), 
		SQLstr($instrument_id_base, "text"),
		SQLstr($userkey, "int"),
		SQLstr($userkey, "int"));
$rsDilemmas = mysql_query($query_rsDilemmas, $Assessment) or die(mysql_error());
$row_rsDilemmas = mysql_fetch_assoc($rsDilemmas);
$totalRows_rsDilemmas = mysql_num_rows($rsDilemmas);

// IF no dilemmas were found for this sector, BUT dilemmas exist for this instrument, 
// then rewrite the query to show the most generic set of dilemmas.
if ($totalRows_rsDilemmas == 0 AND $totalRows_rsAllDilemmas > 0) {
	$query_rsDilemmas = sprintf("SELECT di.* 
		FROM la_dilemmas di
		WHERE di.instrument_id = %s  
		%s
		AND di.man_level_low = 0
		GROUP BY di.dilemma_name
		ORDER BY di.dilemma_sector, di.dilemma_name ",
			SQLstr($instrument_id_base, "text"),
			($instrument_id_base == "LDMA" ? "AND di.dilemma_sector = 'business'" : ""));
	
	$rsDilemmas = mysql_query($query_rsDilemmas, $Assessment) or die(mysql_error());
	$row_rsDilemmas = mysql_fetch_assoc($rsDilemmas);
	$totalRows_rsDilemmas = mysql_num_rows($rsDilemmas);
}


// topher(str_replace("\n", "<br>", $query_rsDilemmas));

$rsLaBoilerplate = mysql_query("SELECT b.* 
	FROM la_boilerplate b WHERE type = 'assess' ", $Assessment) 
	or die("rsLaBoilerplate: ".mysql_error());
$boilerplate = array();
while ($row_rsLaBoilerplate = mysql_fetch_assoc($rsLaBoilerplate)) {
	$boilerplate[$row_rsLaBoilerplate['name']] = $row_rsLaBoilerplate['la_boilerplate_text'];
}




?>



<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/assess3.dwt.php" codeOutsideHTMLIsLocked="false" -->

<head>

<link href='https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic' rel='stylesheet' type='text/css'>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- InstanceBeginEditable name="doctitle" -->
<title>DTS: Question <?php echo ($courseAssnTitle <> "" ? 
	"1 - ".$courseAssnTitle : "1 - ".ucfirst($title)); 
?></title>
<!-- InstanceEndEditable -->
<!-- InstanceBeginEditable name="head" -->

<script src="../includes/jquery.js"></script>

<script src="../SpryAssetsAssess/SpryValidationCheckbox.js" type="text/javascript"></script>
<script src="../SpryAssetsAssess/SpryValidationTextarea.js" type="text/javascript"></script>
<script src="../SpryAssetsAssess/SpryCollapsiblePanel.js" type="text/javascript"></script>
<script src="../SpryAssetsAssess/SpryValidationSelect.js" type="text/javascript"></script>
<script src="../SpryAssets/SpryTabbedPanels.js" type="text/javascript"></script>
<link href="../SpryAssetsAssess/SpryValidationCheckbox.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssetsAssess/SpryValidationTextarea.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssetsAssess/SpryCollapsiblePanel.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssetsAssess/SpryValidationSelect.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssets/SpryTabbedPanelsVertical.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
</script>


<script type="text/javascript">



$(document).ready(function() {
	
	$('#probe01').change(function() {
		
		// get value
		var input_text = $('#probe01').val();
		
		// count words
		// Credits for this wonderful word count script go to:
		// http://javascriptsource.com/forms/word-count.html
		var char_count = input_text.length;
		var fullStr = input_text + " ";
		var initial_whitespace_rExp = /^[^A-Za-z0-9]+/gi;
		var left_trimmedStr = fullStr.replace(initial_whitespace_rExp, "");
		var non_alphanumerics_rExp = rExp = /[^A-Za-z0-9]+/gi;
		var cleanedStr = left_trimmedStr.replace(non_alphanumerics_rExp, " ");
		var splitString = cleanedStr.split(" ");
		var word_count = splitString.length -1;
		if (fullStr.length < 2) { word_count = 0; }
		
		// show message if words are over limit (hide otherwise)
		var message = '';
		$('#word_count').removeClass();
		if (word_count > <?php echo $maxwords; ?>) {
			message = ' You have too many words. Please remove some text.';
			$('#word_count').addClass('red');
		}
		
		// output word count / message
		$('#word_count').text('' + word_count + message);
		// alert(word_count + message);
		
	});
	
	$('#probe01').click(function() {
		$('#probe01').change();
	});
	
	$('#probe01').keypress(function() {
		$('#probe01').change();
	});
	
	$('#probe01').change();
	
	$('#button_fake').click(function(){
		$(this).hide();
		$('#save_changes').hide();
		$('#button_hidden').show();
	});
	
	// non-Spry validation
	$('#form1').submit(function(){
		var num_empty = $('.required').filter('[value=""]').length;
		if (num_empty > 0) { 
			alert("Please make selections for all menus on this page.");
			return false;
		}
	});
	
});



</script>



<style type="text/css">
.twoColFixRtHdr #container #mainContent #CollapsiblePanel1 .CollapsiblePanelTab {
	color: #BD1F06;
}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table {
	margin-top: 0px;
}
.indent25 {
	margin-left: 25px;
}
.twoColFixRtHdr #container #mainContent #form1 div #TabbedPanels1 {
	margin-top: 30px;
}
.twoColFixRtHdr #container #mainContent #CollapsiblePanel5 .CollapsiblePanelContent h4 {
	font-size: 130%;
	color: #373737;
	padding-left: 15px;
}
.twoColFixRtHdr #container #mainContent #CollapsiblePanel5 .CollapsiblePanelContent p {
	font-size: 120%;
}
</style>
<!-- InstanceEndEditable -->

<?php
$img_header = "DTSheader880.jpg";
if (isset($_SESSION['instrument_id'])) { $img_header = $_SESSION['instrument_id']."header880.jpg"; }
?>

<style type="text/css"> 
<!-- 
body  {
	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0; /* this centers the container in IE 5* browsers. The text is then set to the left aligned default in the #container selector */
	color: #333333;
	background-color: #FFF;
}
.twoColFixRtHdr #header {
	background-image: url(/_images/skin/backgrounds/<?php echo $_SESSION['instrument_id']; ?>_background.png);
	background-repeat: repeat;
	background-color: #93CCCB;
	height: 74px;
} 
--> 
--> 
</style>
<!--[if IE 5]>
<style type="text/css"> 
/* place css box model fixes for IE 5* in this conditional comment */
.twoColFixRtHdr #sidebar1 { width: 220px; }
</style>
<![endif]--><!--[if IE]>

<style type="text/css"> 
/* place css fixes for all versions of IE in this conditional comment */
.twoColFixRtHdr #sidebar1 { padding-top: 30px; }
.twoColFixRtHdr #mainContent { zoom: 1; }
/* the above proprietary zoom property gives IE the hasLayout it needs to avoid several bugs */
</style>
<![endif]-->

<link href="/_css/template.css" rel="stylesheet" type="text/css" />
<link href="/_css/template_assess3.css" rel="stylesheet" type="text/css" />

</head>

<body class="twoColFixRtHdr">

<div id="header">
	<?php if (isset($_SESSION['instrument_id'])) { ?>
    <div id="header_logo">
      <p class="uppercase"><?php echo str_replace("_", " ", $_SESSION['instrument_id']); ?></p>
    </div>
	<?php } else { ?>
  	<div class="header1_column1"></div>
  <?php } ?>
</div>

<div id="menu1">
  <h3>
				<?php include("../_includes/navigation/header_1a.html"); ?>
				<!-- InstanceBeginEditable name="ExtraMenuItem1" -->&nbsp;<!-- InstanceEndEditable -->&nbsp;
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
					<?php if (isset($_SESSION['log_firstname'])) {  ?>
  					You are logged in as <?php echo $_SESSION['log_firstname']." ".$_SESSION['log_lastname'];  } ?></h3>
</div>
	
<div id="container">
<p><!-- InstanceBeginEditable name="menu3" --><!-- InstanceEndEditable --></p>
<div id="mainContent"> <!-- InstanceBeginEditable name="main" -->
    
    <h1><?php 
			if ($courseAssnTitle <> "") { ?>
        REACTION PAPER <?php echo $courseAssnNumber; ?>: QUESTION 1 OF <?php echo $numProbes; ?><br />
				<?php echo strtoupper($courseAssnTitle); ?> 
			<?php }
			else { ?> ESSAY 1 (OF <?php echo $numProbes; ?>): <?php echo strtoupper($title); } ?>
    </h1>
    
    <?php // For most assessments, remind test taker NOT to use outside sources.
		if ($instrument_id_base <> 'LMBE' AND $instrument_id_base <> 'FOLA') { 
			echo $boilerplate['assess_outside_sources'];
		} ?>
  
  <?php if ($instrument_id <> "SMJ") { ?>
  <div id="CollapsiblePanel99" class="CollapsiblePanel">
    <div class="CollapsiblePanelTab"><img src="../images/skin/menu_arrow.gif" alt="arrow" />  
      INFORMATION ABOUT THE ESSAY SECTION OF THE <?php echo $instrument_id_name; ?></div>
    <div><?php 
			$text = "";
      if ($instrument_id_base == "LMBE") { // Instruction text for the LMBE
        $text = $boilerplate['assess_essay_instructions_lmbe'];
      } else { // Instructions text for other instruments
        $text = $boilerplate['assess_essay_instructions']; 
      } 
			$text = str_replace("[MINWORDS]", $minwords, $text); 
			$text = str_replace("[MAXWORDS]", $maxwords, $text); 
			echo $text; 
			?>
    </div>
  </div>
	<script type="text/javascript">
		var CollapsiblePanel99 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel99");
	</script>
	<?php } // ?>
  
    
    <div id="CollapsiblePanel5" class="CollapsiblePanel">
    	<?php if ($numProbes > 0 AND $instrument_id <> "SMA") { ?>
        <div class="CollapsiblePanelTab"><img src="../images/skin/menu_arrow.gif" alt="arrow" />
        	CLICK HERE TO VIEW ALL  QUESTIONS IN THE <?php echo $instrument_id_name; ?></div>
      	<div class="CollapsiblePanelContent">
        
        <?php while ($row_rsProbes = mysql_fetch_assoc($rsProbes)) { ?>
					
          <h4><?php echo $row_rsProbes['probe_name']; ?></h4>
          <p><?php echo $row_rsProbes['probe_description']; ?></p>
          
				<?php } ?>
        
        </div>
      <?php } ?>
    </div>
    
    
    
		<?php if ($instrument_id_base == "LLRA") { ?>
      <h3>Ideal leadership</h3>
			<p>You will be asked to select four leader qualities from drop-down menus. Choose the four qualities you find most important. (If you are not completely satisfied with the selections, choose the best ones and use your essay response to explain their weaknesses and suggest better alternatives.) Following each selection, you will be asked to write a short essay describing why the quality you selected is important to good leadership. Thoroughly explain your reasoning. When you are finished, click "SAVE AND GO TO NEXT PAGE".</p>
		<?php } ?>
    
    
    <form action="<?php echo $editFormAction; ?>" id="form1" name="form1" method="POST">
   
<?php 

// if there was an assignment and a message was written, display it. 
if (isset($row_rsAssignments['assign_message']) AND $row_rsAssignments['assign_message'] <> "") { ?>

  <h3>A MESSAGE FROM <?php echo strtoupper( $row_rsAssignments['company'] <> "" ? 
		$row_rsAssignments['company'] : " the administrators of this assessment" ); ?> </h3>
  <p><?php echo $row_rsAssignments['assign_message']; ?></p>
  
  <input name="assignmentkey" type="hidden" id="assignmentkey" 
         value="<?php echo $row_rsAssignments['assignmentkey']; ?>" />
  
	<?php 
} 


// for the LMBE, show the scenario information - don't show a dilemma.
if ($instrument_id_base == "LMBE") { LMBEdiv(); } 



// 							DISPLAY DILEMMA SECTION

// if dilemmas exist for this instrument_id.
if ($totalRows_rsAllDilemmas > 0) { 
  // print_r($row_rsAssignments);
	 
	// If the test taker was assigned a specific dilemma, display it to them.
	// NOTE that the existence of an assignment row does not mean that a DILEMMA was assigned. 
	// If a dilemma has already been selected for this person, that dilemma will show instead
	// (even if the assigned dilemma was somehow different).
	// If a dilemma isn't already selected and none was assigned, only then allow a person to select.
	
	$dilemma_name = $row_rsEssays['dilemma_name'];
	$dilemma = $row_rsEssays['dilemma'];
	$dilemmakey = $row_rsEssays['dilemmakey'];
	if ($dilemma_name == "") { 
		$dilemma_name = $row_rsAssignments['dilemma_name'];
		$dilemma = $row_rsAssignments['dilemma'];
		$dilemmakey = $row_rsAssignments['dilemmakey'];
	}
	
	if ($dilemma_name <> "") { ?>
    
    <h3>THE DILEMMA: <?php echo strtoupper($dilemma_name); ?></h3>
    <input name="dilemmakey" type="hidden" id="dilemmakey" value="<?php echo $dilemmakey; ?>" />
    <p><?php echo $dilemma; ?></p> <?php 
		
	} else { // Else, the test taker should choose their own dilemma. ?>   
    
    <h3>VIEW AVAILABLE DILEMMAS</h3>
    <p>The following questions require that you respond to a dilemma of your choice. Click on the tabs in the list below to explore available dilemmas or to view the dilemma you have been instructed to select. (Note: You will not be allowed to select a dilemma that you have responded to in the past.) Unless you have been instructed to use a specific dilemma, we suggest that you choose a dilemma that  relates to an area of personal interest. Once you have chosen a dilemma, scroll down the page to select it from the pull-down menu and begin your first essay.</p>
  
			<?php 
		if ($totalRows_rsDilemmas < 1 AND $totalRows_rsAllDilemmas > 0) { ?>
    
      <p class="box"><span class="red">We did not find any dilemmas for the work sector and/or management level that you chose. Please go back to the <a href="assess_personal1.php?lakey=<?php echo $_GET['lakey']; ?>">information pages</a> and ensure that you have selected the correct work sector and management level. If you still do not see any dilemmas in the list below, please
      <?php contactUsForHelp("contact us", " Management level key: ".$row_rsEssays['manlevelkey']." Work sector: ".$row_rsEssays['sector']); ?>.</span></p> <?php
			 
		} ?>
       
                  
     <div class="">
     <div id="TabbedPanels1" class="VTabbedPanels">
       <ul class="TabbedPanelsTabGroup">
         <?php do { ?>
            <li class="TabbedPanelsTab"><?php // echo $row_rsDilemmas['dilemmakey'].": ";
							echo $row_rsDilemmas['dilemma_name']; ?></li>
         <?php } while ($row_rsDilemmas = mysql_fetch_assoc($rsDilemmas)); 
            // reset RS pointer
            $rows = mysql_num_rows($rsDilemmas);
            if($rows > 0) {
                mysql_data_seek($rsDilemmas, 0);
              $row_rsDilemmas = mysql_fetch_assoc($rsDilemmas);
            } ?>
       </ul>
       <div class="TabbedPanelsContentGroup">
         <?php do { ?>
            <div class="TabbedPanelsContent"><table width="475"><tr><td><?php echo $row_rsDilemmas['dilemma']; ?></td></tr></table></div>
         <?php } while ($row_rsDilemmas = mysql_fetch_assoc($rsDilemmas)); 
            // reset RS pointer
            $rows = mysql_num_rows($rsDilemmas);
            if($rows > 0) {
                mysql_data_seek($rsDilemmas, 0);
              $row_rsDilemmas = mysql_fetch_assoc($rsDilemmas);
            } ?></div>
     </div>
     </div>
     
   	 <br class="clearfloat" />
      <p>&nbsp;</p>

        <table>
          <tr>
            <td width="200">Select the dilemma you chose from the list above. </td>
            <td><span id="spryselect1">
              <select name="dilemmakey" class="pulldownwidth200" id="dilemmakey">
                <option value="" <?php if (!(strcmp("", $row_rsEssays['dilemmakey']))) 
									{ echo "selected=\"selected\""; } ?>>-select one-</option>
                <?php 
								// List valid dilemmas
								do {   ?>
                <option value="<?php echo $row_rsDilemmas['dilemmakey']?>"<?php if (!(strcmp($row_rsDilemmas['dilemmakey'], $row_rsEssays['dilemmakey']))) {echo "selected=\"selected\"";} ?>><?php echo $row_rsDilemmas['dilemma_name']?></option>
                <?php } while ($row_rsDilemmas = mysql_fetch_assoc($rsDilemmas));
						$rows = mysql_num_rows($rsDilemmas);
						if($rows > 0) {
								mysql_data_seek($rsDilemmas, 0);
							$row_rsDilemmas = mysql_fetch_assoc($rsDilemmas);
						} ?>
              </select>
            <span class="selectRequiredMsg">Please select an item.</span><span class="selectInvalidMsg">You have already used this dilemma. Please select another one.</span></span></td>
          </tr>
        </table>
        
        
    <script type="text/javascript">
		
		var spryselect1 = new Spry.Widget.ValidationSelect("spryselect1", {validateOn:["blur", "change"], invalidValue:"-1"});
		var TabbedPanels1 = new Spry.Widget.TabbedPanels("TabbedPanels1");
		
		</script>
  
	<?php } ?>
  
  <p class="red">You will  now be asked to answer <?php echo $numProbes; ?> questions about this dilemma, starting with the question below.</p>
  
<?php } // ENDIF: end section for displaying dilemma(s). ?>
		
    

    <table>
      
      <?php if ($instrument_id == "LDPA") { ?>
      <tr>
      	<td colspan="2">Please choose a topic and type of student and domain from the following menus.</td>
      </tr>
      <tr>
      	<td>Select a student type</td>
        <td>
					<select name="choicekey01" class="required">
          	<option value="">- select one -</option>
						<?php while ($row = mysql_fetch_assoc($rsMenuStudents)) { ?>
        			<option value="<?php echo $row['menukey']; ?>" 
              	<?php if ($row_rsEssays['choicekey01'] == $row['menukey']) { 
									echo "selected='selected'"; } ?>>
								<?php echo $row['menu_item']; ?></option>
        		<?php } // ?>
          </select>
        </td>
      </tr>
      <tr>
      	<td>Select a domain</td>
        <td>
					<select name="choicekey02" class="required">
          	<option value="">- select one -</option>
						<?php while ($row = mysql_fetch_assoc($rsMenuDomains)) { ?>
        			<option value="<?php echo $row['menukey']; ?>" 
              	<?php if ($row_rsEssays['choicekey02'] == $row['menukey']) { 
									echo "selected='selected'"; } ?>>
								<?php echo $row['menu_item']; ?></option>
        		<?php } // ?>
          </select>
        </td>
      </tr>
      <?php } // ENDIF: only show for LDPA ?>
      
      <?php 
			// The probes table will indicate (by presence of text in select_instruction) whether 
			// this question has a menu selection associated with it.
			
			if ($row_rsProbe['select_instruction'] <> "") { ?>
      <tr>
  	    <td width="200"><?php echo $row_rsProbe['select_instruction']; ?></td>
  	    <td>
        <select name="choicekey01" class="pulldownwidth200 required" id="choicekey01">
          <option value="" <?php if (!(strcmp("", $row_rsEssays['choicekey01']))) 
						{ echo "selected=\"selected\""; } ?>>-select one-</option>
						<?php do {   ?>
              <option value="<?php echo $row_rsLaMenus['menukey']?>"
                <?php if (!(strcmp($row_rsLaMenus['menukey'], $row_rsEssays['choicekey01']))) 
                {echo "selected=\"selected\"";} ?>>
                <?php echo $row_rsLaMenus['menu_item']?>
              </option>
            <?php } while ($row_rsLaMenus = mysql_fetch_assoc($rsLaMenus));
						$rows = mysql_num_rows($rsLaMenus);
						if($rows > 0) {
								mysql_data_seek($rsLaMenus, 0);
							$row_rsLaMenus = mysql_fetch_assoc($rsLaMenus);
						} ?>
        </select>
        </td>
	    </tr>
      <?php } ?>
      
      <tr>
        <td width="180">
					<?php echo $probe; ?>
        	<?php if (isset($choicekey)) { ?>
          	<input type="hidden" name="choicekey01" value="<?php echo $choicekey; ?>" />
          <?php } ?>
        </td>
        <td><span id="sprytextarea1">
        <textarea name="probe01" class="textarea440_465" id="probe01"><?php 
					echo str_replace("<br>", "\n", $row_rsEssays['probe01']); ?></textarea>
        </span><br />
        <span id="word_count"></span></td>
      </tr>
      
      <?php if ($instrument_id_base == "LMBE") { ?>
      	<tr><td width="200">References <span class="red">* </span></td><td><span id="spryRefsList">
        <textarea name="referencelist" class="textarea140_465" id="referencelist"><?php 
					echo str_replace("<br>", "\n", $row_rsEssays['referencelist']); ?></textarea>
        <span class="textareaMaxCharsMsg">Exceeded maximum number of characters.</span><span class="textareaRequiredMsg">References are required. See the instructions for an explanation.</span></span>
      <script type="text/javascript"><!--
				var spryRefsList = new Spry.Widget.ValidationTextarea("spryRefsList", {validateOn:["blur", "change"], maxChars:3000});
				-->
			</script>
      </td></tr>
      <?php } else { ?>
      	<input name="referencelist" type="hidden" id="referencelist" value="" />
      <?php } ?>
      
    </table>
    <?php 
		if ($status == "under min words") { ?>
    <p class="red">The minimum number of words has not been met. Your progress is saved when you click on either "SAVE" button, but you cannot go on to the next page until you have fully explained your answer. We find that answers that are shorter than <?php echo $minwords; ?> words often do not contain adequate explanations.</p><?php 
		}
		if ($status == "over max words") { ?>
    <p class="red">The maximum words allowed is <?php echo $maxwords; ?>. Please remove some text.</p><?php 
		} ?>
    
    <div id="submitButtons" align="right">
      <input name="lakey" type="hidden" id="lakey" value="<?php echo $_GET['lakey']; ?>" />
      <input type="hidden" name="projectkey" id="projectkey" value="<?php echo $row_rsProject['projectkey']; ?>" />
      <p><span class="fltlft"><?php contactUsForHelp(); ?></span>&nbsp;
      
      <input type="submit" name="save_changes" id="save_changes" value="SAVE YOUR WORK" />&nbsp;
      <!-- LAST SAVED STATUS text - starts out blank. JavaScript inserts text in here saying the last time that the text was autosaved. -->
      <span id="last_saved"></span>&nbsp;
      
      <?php if ($instrument_id == "SMA") { ?>
        <input type="button" name="button_fake" id="button_fake" value="SAVE AND GO TO NEXT PAGE" /></p>
				<p id="button_hidden" style="display:none; ">
        <span class="red">Did you answer all of the questions in the prompt?</span>
      <?php } ?>
      	<input type="submit" name="button" id="button" value="SAVE AND GO TO NEXT PAGE" /></p>
        <input type="hidden" name="MM_update" value="form1" />
    </div>
      <p>&nbsp;</p>
    </form>
    
    
    
  
	<?php autoSave("probe01"); ?> 
    
  <script type="text/javascript">
<!--
var CollapsiblePanel1 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel5");
var sprytextarea1 = new Spry.Widget.ValidationTextarea("sprytextarea1", {validateOn:["blur", "change"], isRequired:false, useCharacterMasking:false});

<?php if ($totalRows_rsAllDilemmas > 0) { ?>

<?php } ?>

//-->
  </script>
<!-- InstanceEndEditable -->
  <!-- end #mainContent --></div>
  <!-- This clearing element should immediately follow the #mainContent div in order to force the #container div to contain all child floats --><br class="clearfloat" />
  <!-- end #container -->
</div>
</body>
<!-- InstanceEnd --></html>
<?php

?>
