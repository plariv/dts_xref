<?php

function WA_Auth_GetComparisonsForRule($ruleName){
	$comparisons = array();
	
	$user_level = "";
	if (isset($_SESSION['log_user_level'])) { $user_level = "".$_SESSION['log_user_level'].""; }
	
	/**** HOW TO USE THESE RULES
	These rules determine what user_levels match what levels of site access. When you call one of these rules (such as "Logged in as employee", you are checking that the logged-in user is AT LEAST the same access level as the number specified in the last argument on each line. ("25", "18", etc.) 
	If you set someone at user_level 22, they will be able to access pages that require "Logged in as employee" and pages that require "Logged in as analyst" but will NOT be able to access pages that require "Logged in as senior". */
	
	switch ($ruleName){
		case "Logged in as admin":
			$comparisons[0] = array(TRUE, $user_level, 6, "25");
			break;
		case "Logged in as senior":
			$comparisons[0] = array(TRUE, $user_level, 6, "24");
			break;
		case "Logged in as analyst":
			$comparisons[0] = array(TRUE, $user_level, 6, "22");
			break;
		case "Logged in as employee":
			$comparisons[0] = array(TRUE, $user_level, 6, "20");
			break;
		case "Logged in as coder":
			$comparisons[0] = array(TRUE, $user_level, 6, "18");
			break;
		case "Logged in as intern":
			$comparisons[0] = array(TRUE, $user_level, 6, "17");
			break;
		case "Logged in as teacher coder":
			$comparisons[0] = array(TRUE, $user_level, 6, "13");
			break;
		case "Logged in as teacher assistant":
			$comparisons[0] = array(TRUE, $user_level, 6, "11");
			break;
		case "Logged in as institution":
			$comparisons[0] = array(TRUE, $user_level, 6, "11");
			break;
		case "Logged in as researcher":
			$comparisons[0] = array(TRUE, $user_level, 6, "10");
			break;
		case "Logged in as bulk customer":
			$comparisons[0] = array(TRUE, $user_level, 6, "8");
			break;
		case "Logged in as teacher":
			$comparisons[0] = array(TRUE, $user_level, 6, "7");
			break;
		case "Logged in as assistant":
			$comparisons[0] = array(TRUE, $user_level, 6, "5");
			break;
		case "Logged in to registrants":
			$comparisons[0] = array(TRUE, $user_level, 6, "1");
			break;
	}
	return $comparisons;	
}


function WA_Auth_GetGroup($groupName){
	$group = Array();
	
		switch ($groupName){
    	case "DTS all":
			$group = array("Admin","Developer","Senior employee","Scorer","Coder","Employee","Junior employee","Intern","Volunteer");
			break;
    	case "DTS employees":
			$group = array("Admin","Developer","Senior employee","Scorer","Coder","Employee","Junior employee");
			break;
	    case "DTS junior":
			$group = array("Employee","Junior employee");
			break;
		    case "DTS senior":
			$group = array("Admin","Developer","Senior employee","Scorer","Coder");
			break;
	    case "DTS intern":
			$group = array("Intern","Volunteer");
			break;
		case "Bulk administrators":
			$group = array("Business","School district","School","Government agency");
		case "Bulk users":
			$group = array("Consultant","Researcher","Instructor","Research assistant","Teaching assistant");
			break;
		case "Bulk users senior":
			$group = array("Bulk customer","Researcher","Instructor");
			break;
			case "Bulk users junior":
			$group = array("Research assistant","Teaching assistant");
			break;
		case "Test taker":
			$group = array("Research participant","Student","Employee","Client","Self");
			break;
	}
	return $group;
}

?>
