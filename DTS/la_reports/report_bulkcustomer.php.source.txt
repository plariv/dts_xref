<?php 
include_once '../includes/dts_functions.php';
include_once 'report_custom_functions.php';


/* Buffered identification of URL and SESSION variables. Sometimes they're not present. Introducing them in this sort of way, helps us to avoid breaking pages when expected variables aren't present. */

$currentPage = $_SERVER["PHP_SELF"];

// **** instrument_id and instrument_id_base are both used here. But we don't need to have 2 different ways of accessing the page; we'll only have one report page generally speaking.
if (!isset($_SESSION['instrument_id'])) {
	WA_Auth_RestrictAccess("../select_instrument.php");
}
$instrument_id = $_SESSION['instrument_id'];	// I don't really use this... I use instr_id_base instead.
$instrument_id_base = str_replace("_JOURNAL", "", $instrument_id);
$instrument_id_name = str_replace("_", " ", $instrument_id);

// **** scorePresent is how I'll solve the problem of hiding irrelevant sections of the report if there's no score data for them. If the following queries determine that there's no scored data present, then the scorable tabs will be hidden.
$showScore = "yes";
$see_all = FALSE;

$userkey = -1;
// You can only view bulk reports for another person (userkey specified) if you're a DTS analyst.
if (isset($_GET['userkey']) AND $_GET['userkey'] <> "") {
	if (WA_Auth_RulePasses("Logged in as analyst")) {
		$userkey = $_GET['userkey'];
	} else {
		WA_Auth_RestrictAccess("../security/logIn.php");
	}
	// if you are NOT an analyst, then you only see records linked to your userkey.
} else if (isset($_SESSION['log_userkey'])) {
	$userkey = $_SESSION['log_userkey'];
} else {
	WA_Auth_RestrictAccess("../security/logIn.php");
}

$filter_instrument_id = " AND (d.instrument_id = ".SQLstr($instrument_id_base, "text").
	" OR d.instrument_id = ".SQLstr($instrument_id_base."_JOURNAL", "text").") ";

$filter_demog = "";
if (isset($_GET['filter_demog'])) { 
	$filter_demog = str_replace("^", " ", $_GET['filter_demog']); }

$finalized = " (d.finalized = 1 OR d.finalized = 2) ";



//								DECLARING REPORT TAB / SECTION COMPATIBILITY

// Each tab has a declaration which lists all the instrument_ids for which it exists.
// (checks for $instrument_id_base, not the literal instrument_id.)

$module['summary'] = 				" LDMA ";
$module['lectical'] = 				" ALL SCORE ";
$module['argumentation'] = 		" LDMA LMBE LLRA LRJA LERA LDPA LIMA SMA SMJ ";
$module['cheating'] = 				" LDMA LLRA LRJA LSUA LERA LDPA LIMA SMA SMJ ";
$module['strengths'] = 				" LDMA LSUA ";	// section for mature strengths. Section not yet built.
$module['strengths_written'] = " LMBE LSUA ";	// section for strengths under construction. not built.
$module['llra_qualities'] = " LLRA ";
$module['llra_themes'] = 		" LLRA ";
$module['lrja_themes'] = 		" LRJA ";
$module['lrja_scales'] = 		"  ";	// TURNED OFF for now (incomplete)
$module['lera_themes'] = 		" LERA ";
$module['lera_scales'] = 		"  "; // TURNED OFF for now (incomplete?)
$module['ldpa_themes'] = 		" LDPA ";
$module['lima_themes'] = 		" LIMA ";
$module['sma_themes'] = 		" SMA ";
$module['sms_score'] = 			" SMS ";
$module['smj_scores'] = 		" SMJ ";
$module['perspectives'] = 		" LDMA ";
$module['p_coordination'] = 	" LDMA ";
$module['dm_process'] = 			" LDMA ";
$module['collab'] = 				" LDMA ";
$module['context'] = 				" LDMA ";
$module['management'] = 		" LDMA LSUA LLRA LRJA LIMA ";	// collaps. panels which define man levels
$module['levels_tasks'] = 	" LDMA LSUA LLRA LRJA LIMA ";
$module['lsua_surveys'] = 	" LSUA "; // optimism and character surveys

// checkModule() is called for each tab (once for each tab and once for each panel).
function checkModule($moduleName) 
{
	global $module, $instrument_id_base, $showScore;
	$tabQualifies = FALSE;
	$requirements = $module[$moduleName];	// look up the requirements for this report module
	// check if the instrument_id is valid
	if (strpos($requirements, $instrument_id_base) OR strpos($requirements, "ALL")) 
	{ $tabQualifies = TRUE; }
	else { return FALSE; }
	if (strpos($requirements, "SCORE")) {
		if ($showScore == "yes") { $tabQualifies = TRUE; }
		else { return FALSE; }
	}
	return $tabQualifies;
}





// Fetch information on the logged-in bulkcustomer
$query_rsBulkCustomerInfo = sprintf("SELECT bc.bulkcustomerkey, bc.username4students, 
r.firstname, r.lastname, r.user_level, r.email, r.company
FROM registrants r
LEFT JOIN bulkcustomerinfo bc ON bc.bulkcustomerkey = r.userkey
WHERE r.userkey = %s ",
		SQLstr($userkey, "int"));
$rsBulkCustomerInfo = mysql_query($query_rsBulkCustomerInfo, $Assessment) or die(mysql_error());
$row_rsBulkCustomerInfo = mysql_fetch_assoc($rsBulkCustomerInfo);
$totalRows_rsBulkCustomerInfo = mysql_num_rows($rsBulkCustomerInfo);

$user_level = $row_rsBulkCustomerInfo['user_level'];




// **** The text which filters results to just a particular BC userkey is defined here, conditionally, because DTS employees can bypass that filter. But this makes it VERY IMPORTANT to ensure that $filter_demog is applied to every data query on this page. The consequence of forgetting it somewhere is not just that search won't work properly; it's that the bulk customer will be able to view results from other projects' confidential data.
$filter_user = " AND d.resellerkey = {$userkey} AND IFNULL(d.hidden_sumreport, 0) <> 1 ";
if ($user_level >= 22) { 
	$see_all = TRUE; 
	// replace the reseller filter, with one that filters out irrelevant entries.
	$filter_user = " AND d.userkey <> 888 AND d.userkey <> 999 AND IFNULL(d.hidden_sumreport, 0) <> 1 ";	
}
$filter_demog .= $filter_user;





/* 		FILTER QUERIES
	fetch the items that should go in the "Filter by..." dropdowns.
 	These filter lists reference la_data d so that they don't show filter values 
	for which there aren't any records. */

$query_rsFilterBc = sprintf("SELECT r.bulkuserkey, COUNT(DISTINCT d.lakey) AS numpeople, 
		IF(rb.company <> '', rb.company, CONCAT(rb.firstname, ' ', rb.lastname)) AS bulkcustomer
	FROM registrants r
		JOIN la_data d ON r.userkey = d.userkey 
		JOIN registrants rb ON r.bulkuserkey = rb.userkey
	WHERE {$finalized} AND rb.userkey IS NOT NULL ".$filter_instrument_id."
	GROUP BY rb.userkey
	ORDER BY bulkcustomer");
$rsFilterBc = mysql_query($query_rsFilterBc) or die("rsFilterBc: ".mysql_error());

$query_rsFilterProjects = sprintf("SELECT p.projectkey, p.bulkcustomerkey, p.projectid, 
		LEFT(IF(rb.company <> '', rb.company, CONCAT(rb.firstname, ' ', rb.lastname)),10) AS company, 
		COUNT(DISTINCT d.lakey) AS numpeople
	FROM registrants r
		JOIN la_data d ON r.userkey = d.userkey 
		JOIN students_projects sp ON r.userkey = sp.userkey
		JOIN projectproject p ON sp.projectkey = p.projectkey
		LEFT JOIN registrants rb ON p.bulkcustomerkey = rb.userkey
	WHERE {$finalized} ".$filter_instrument_id.$filter_user." %s
	GROUP BY projectkey
	ORDER BY company, projectid",
	($see_all == false ? " AND p.bulkcustomerkey = ".SQLstr($userkey, "int") : ""));
$rsFilterProjects = mysql_query($query_rsFilterProjects) or die("rsFilterProjects: ".mysql_error());

$query_rsFilterAssn = sprintf("SELECT a.assignmentkey, a.instrument_id, a.assign_group, 
		a.date_start, a.date_end,
		LEFT(IF(rb.company <> '', rb.company, CONCAT(rb.firstname, ' ', rb.lastname)),10) AS company, 
		COUNT(DISTINCT d.lakey) AS numpeople
	FROM la_data d 
		JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
		LEFT JOIN registrants rb ON d.resellerkey = rb.userkey
	WHERE {$finalized} ".$filter_instrument_id.$filter_user." %s
	GROUP BY assignmentkey ORDER BY company, assign_group, date_start",
	($see_all == false ? " AND d.resellerkey = ".SQLstr($userkey, "int") : ""));
$rsFilterAssn = mysql_query($query_rsFilterAssn) or die("rsFilterAssn: ".mysql_error());

// topher($query_rsFilterProjects); topher();

$query_rsFilterManLevels = sprintf("SELECT dem.man_level, dem.manlevelkey, d.lakey, 
		COUNT(DISTINCT d.lakey) AS numpeople 
	FROM la_data d 
		JOIN registrants r ON d.userkey = r.userkey
		JOIN demogs_man_level dem ON r.manlevelkey = dem.manlevelkey
	WHERE {$finalized} ".$filter_instrument_id.$filter_user." 
	GROUP BY dem.manlevelkey ORDER BY dem.man_level_number");
$rsFilterManLevels = mysql_query($query_rsFilterManLevels) or die("rsFilterManLevels: ".mysql_error());
$row_rsFilterManLevels = mysql_fetch_assoc($rsFilterManLevels);
$totalRows_rsFilterManLevels = mysql_num_rows($rsFilterManLevels);

//topher($query_rsFilterManLevels);

$sql_score = "s.lasnumber_1";
switch ($instrument_id) {
	case "LDMA_JOURNAL": $sql_score = "NULL"; break;
	case "LLRA_JOURNAL": $sql_score = "c.code493"; break;
	case "LERA_JOURNAL": $sql_score = "c.code491"; break;
	case "LRJA_JOURNAL": $sql_score = "c.code491"; break;
	case "LSUA_JOURNAL": $sql_score = "NULL"; break;
	case "LDPA": $sql_score = "c.code491"; break;
	case "LIMA": $sql_score = "c.code493"; break;
	case "SMA": $sql_score = "c.code491"; break;
	case "SMJ": $sql_score = "NULL"; break;
	case "SMS": $sql_score = "NULL"; break;
}

$sql = sprintf("SELECT ROUND({$sql_score}, 1) AS lasnumber_1, 
		COUNT(DISTINCT d.lakey) AS numpeople 
	FROM la_data d 
		LEFT JOIN la_codes c ON d.lakey = c.lakey
		LEFT JOIN la_scores s ON d.lakey = s.lakey AND d.instrument_id <> %s
	WHERE {$sql_score} > 0 AND {$finalized} {$filter_instrument_id} {$filter_user} 
	GROUP BY ROUND({$sql_score},1)",
		SQLstr($instrument_id_base."_JOURNAL", "text"));
$rsFilterLas = mysql_query($sql) or die("rsFilterLas: ".mysql_error());

$query_rsFilterTime = sprintf("SELECT test_time, COUNT(DISTINCT d.lakey) AS numpeople FROM la_data d 
WHERE {$finalized} ".$filter_instrument_id.$filter_user." 
GROUP BY test_time");
$rsFilterTime = mysql_query($query_rsFilterTime, $Assessment) or die("rsFilterTime: ".mysql_error());

$query_rsFilterGroup = sprintf("SELECT r.`group`, COUNT(DISTINCT d.lakey) AS numpeople 
	FROM registrants r 
		LEFT JOIN la_data d ON d.userkey = r.userkey 
	WHERE {$finalized} ".$filter_instrument_id.$filter_user." AND r.`group` <> '' 
	GROUP BY r.`group`", 
		SQLstr($userkey, "int"));
$rsFilterGroup = mysql_query($query_rsFilterGroup, $Assessment) or die("rsFilterGroup: ".mysql_error());



// The LAS range filter, above, is used to decide whether score data is present for these data.
// If $showScore is marked as "no", certain elements on the report will be hidden.
// In this scenario, the SESSION instrument_id is also changed to reflect the data. (changes page header)
if (mysql_num_rows($rsFilterLas) == 0) { 
	$showScore = "no"; 
	$omit_journal_label = " SMS SMA SMJ LIMA ";
	if (!strpos($omit_journal_label, $instrument_id)) { 
		$_SESSION['instrument_id'] = $instrument_id_base."_JOURNAL";
	}
}




// Pull the filter query values out of $_POST if they're present there.

$filter_humanReadable = " ";

if (isset($_POST['management_level_select']) AND $_POST['management_level_select'] <> "") {
	
	$filter_demog .= " AND d.manlevelkey = ".SQLstr($_POST['management_level_select'], "int");
}

if (isset($_POST['resellerkey']) AND $_POST['resellerkey'] <> "") {
	$filter_demog .= " AND d.resellerkey = ".SQLstr($_POST['resellerkey'], "int");
	$filter_humanReadable .= "under the client ID <em>".$_POST['resellerkey']."</em>, ";
}

if (isset($_POST['projectkey']) AND $_POST['projectkey'] <> "") {
	$filter_demog .= " AND d.projectkey = ".SQLstr($_POST['projectkey'], "int");
	$filter_humanReadable .= "under the project ID <em>".$_POST['projectkey']."</em>, ";
}

if (isset($_POST['assignmentkey']) AND $_POST['assignmentkey'] <> "") {
	$filter_demog .= " AND d.assignmentkey = ".SQLstr($_POST['assignmentkey'], "int");
	$filter_humanReadable .= "in the assignment <em>".$_POST['assignmentkey']."</em>, ";
}

if (isset($_POST['date_completed_gt']) AND $_POST['date_completed_gt'] <> "") {
	// Using SQLstr here to avoid any possible injection.
	$filter_demog .= " AND d.date_completed >= ".SQLstr($_POST['date_completed_gt'], "date");
	$filter_humanReadable .= "after the date <em>".$_POST['date_completed_gt']."</em>, ";
}

if (isset($_POST['date_completed_lt']) AND $_POST['date_completed_lt'] <> "") {
	$filter_demog .= " AND d.date_completed <= ".SQLstr($_POST['date_completed_lt'], "date");
	$filter_humanReadable .= "before the date <em>".$_POST['date_completed_lt']."</em>, ";
}

if (isset($_POST['test_time']) AND $_POST['test_time'] <> "") {
	$filter_demog .= " AND ".SQLstr($_POST['test_time'], "text")." LIKE CONCAT('%', d.test_time, '%') ";
	$filter_humanReadable .= "at test time(s) <em>".$_POST['test_time']."</em>, ";
}

if (isset($_POST['all_times_present'])) { // tricky.
	// this filter requires test_time to be specified.
	if (!isset($_POST['test_time']) OR $_POST['test_time'] == "") { 
		die("Please press your browser's BACK button and specify one or more test times.");
	}
	
	// The rule for this filter: 
	// ONLY include people FOR WHOM a record at EACH specified test time exists.
	$ttstring = $_POST['test_time'];
	$ttstring = str_replace(array(",", ";", "-"), " ", $ttstring);
	$ttstring = str_replace(array("   ", "  "), " ", $ttstring);
	$ttstring = trim($ttstring);
	$test_times = explode(" ", $ttstring);
	
	for ($i = 0; isset($test_times[$i]); $i ++) { 
		if ($test_times[$i] > 0) { 
			$t = intval($test_times[$i]);
			$filter_demog .= sprintf(" 
				AND EXISTS (SELECT * FROM la_data dt{$t} WHERE r.userkey = dt{$t}.userkey 
					AND dt{$t}.instrument_id LIKE %s AND dt{$t}.finalized BETWEEN 1 AND 2 
				  AND dt{$t}.test_time = {$t}) ",
						SQLstr("{$instrument_id_base}%", 'text'));
		}
	}
	$filter_humanReadable .= "where the test taker has completed all test times specified, ";
}

if ((isset($_POST['assessments_taken_min']) AND $_POST['assessments_taken_min'] > 0)
		OR (isset($_POST['assessments_taken_max']) AND $_POST['assessments_taken_max'] > 0)) {
	$min = $_POST['assessments_taken_min'];
	$max = $_POST['assessments_taken_max'];
	if ($min == "") { $min = 0; }
	if ($max == "") { $max = 99; }
	$filter_demog .= sprintf(" AND EXISTS (SELECT COUNT(dall.lakey) FROM la_data dall 
		WHERE r.userkey = dall.userkey AND dall.finalized BETWEEN 1 AND 2 
		HAVING COUNT(dall.lakey) BETWEEN %s AND %s) ",
			SQLstr($min, 'int'),
			SQLstr($max, 'int'));
	$filter_humanReadable .= "where the test taker has completed 
		<em>".$_POST['assessments_taken']."</em> assessments in total, ";
}

if (isset($_POST['group']) AND $_POST['group'] <> "") {
	$filter_demog .= " AND r.group = ".SQLstr($_POST['group'], "text");
	$filter_humanReadable .= "in the group / cohort <em>".$_POST['group']."</em>, ";
}

if (isset($_POST['sexkey']) AND $_POST['sexkey'] <> "") {
	$filter_demog .= " AND r.sexkey = ".SQLstr($_POST['sexkey'], "text");
	$filter_humanReadable .= "among <em>".($_POST['sexkey'] == 1 ? "males" : "females")."</em>, ";
}

if (isset($_POST['las_range_low']) AND $_POST['las_range_low'] <> "") {
	$filter_demog .= " AND s.lasnumber_1 >= ".SQLstr($_POST['las_range_low'], "double");
	$filter_humanReadable .= " above the Lectical score <em>".$_POST['las_range_low']."</em>, ";
}

if (isset($_POST['las_range_high']) AND $_POST['las_range_high'] <> "") {
	$filter_demog .= " AND s.lasnumber_1 <= ".SQLstr($_POST['las_range_high'], "double");
	$filter_humanReadable .= " below the Lectical score <em>".$_POST['las_range_high']."</em>, ";
}

if (isset($_POST['limit_to_solloway_groups'])) {
	$filter_demog .= " AND EXISTS (
			SELECT * FROM students_assignments fsa JOIN la_assignments fa ON fsa.assignmentkey = fa.assignmentkey WHERE fsa.userkey = r.userkey AND fa.assign_group IN(
					'2012_SS_1', '2012_SS_2', '2013_SS_2', '2013_SS_3', '2013_fall_1_SS', '2013_fall_2_SS' )
		) ";
	$filter_humanReadable .= " only showing records from my classes, ";
}

if (isset($_POST['limit_to_not_solloway_groups'])) {
	$filter_demog .= " AND NOT EXISTS (
			SELECT * FROM students_assignments fsa JOIN la_assignments fa ON fsa.assignmentkey = fa.assignmentkey WHERE fsa.userkey = r.userkey AND fa.assign_group IN(
					'2012_SS_1', '2012_SS_2', '2013_SS_2', '2013_SS_3', '2013_fall_1_SS', '2013_fall_2_SS' )
		) ";
	$filter_humanReadable .= " only showing records from my classes, ";
}

// snip off the ending comma for the filter description, if text is present
$filter_humanReadable = ($filter_humanReadable == "" ? "" : substr($filter_humanReadable, 0, strlen($filter_humanReadable)-2));







// --------------------- QUERIES FOR GENERAL RESULTS / STATISTICS --------------------- //
//												  

/* QUERY SNIPPETS:
   Snippets of queries - often a single column definition - that might be re-used in multiple queries, and will hopefully make the queries saner to read and look at. 
	 Note, these column snippets will need to be manually separated by a comma.
	 
	 These are most often used in the charts, but some are used in other data queries. */

$query_column_month = " DATE_FORMAT(d.date_completed, '%M %Y') AS MONTH";
$query_column_avg_lasnumber = " AVG( s.lasnumber_1 ) AS LASNUMBER";
$query_column_las_range = " CASE 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 10.35 AND 10.54 THEN '10.4-10.5' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 10.55 AND 10.74 THEN '10.6-10.7' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 10.75 AND 10.94 THEN '10.8-10.9' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 10.95 AND 11.14 THEN '11.0-11.1' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 11.15 AND 11.34 THEN '11.2-11.3' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 11.35 AND 11.54 THEN '11.4-11.5' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 11.55 AND 11.74 THEN '11.6-11.7' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 11.75 AND 11.94 THEN '11.8-11.9' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 11.95 AND 12.14 THEN '12.0-12.1' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 12.15 AND 12.34 THEN '12.2-12.3' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 12.35 AND 12.54 THEN '12.4-12.5' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 12.55 AND 12.74 THEN '12.6-12.7' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 12.75 AND 12.94 THEN '12.8-12.9' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 12.95 AND 13.14 THEN '13.0-13.1' 
	WHEN ROUND(s.lasnumber_1, 2) BETWEEN 13.15 AND 13.34 THEN '13.2-13.3' 
END LAS_RANGE";
$query_column_avg_total_p_taken = " AVG(IF(c.code001 > 0, 1, 0)+IF(c.code002 > 0, 1, 0)+IF(c.code003 > 0, 1, 0)+IF(c.code004 > 0, 1, 0)+IF(c.code005 > 0, 1, 0)+IF(c.code006 > 0, 1, 0)+IF(c.code007 > 0, 1, 0)+IF(c.code008 > 0, 1, 0)+IF(c.code009 > 0, 1, 0)+IF(c.code010 > 0, 1, 0)+IF(c.code011 > 0, 1, 0)+IF(c.code012 > 0, 1, 0)+IF(c.code013 > 0, 1, 0)+IF(c.code014 > 0, 1, 0)+IF(c.code015 > 0, 1, 0)+IF(c.code016 > 0, 1, 0)+IF(c.code017 > 0, 1, 0)+IF(c.code018 > 0, 1, 0)+IF(c.code019 > 0, 1, 0)+IF(c.code020 > 0, 1, 0)+IF(c.code021 > 0, 1, 0)+IF(c.code022 > 0, 1, 0)+IF(c.code023 > 0, 1, 0)+IF(c.code024 > 0, 1, 0)+IF(c.code025 > 0, 1, 0)+IF(c.code026 > 0, 1, 0)+IF(c.code027 > 0, 1, 0)+IF(c.code028 > 0, 1, 0)+IF(c.code029 > 0, 1, 0)+IF(c.code030 > 0, 1, 0)+IF(c.code031 > 0, 1, 0)+IF(c.code032 > 0, 1, 0)+IF(c.code033 > 0, 1, 0)+IF(c.code034 > 0, 1, 0)+IF(c.code035 > 0, 1, 0)+IF(c.code036 > 0, 1, 0)+IF(c.code037 > 0, 1, 0)+IF(c.code038 > 0, 1, 0)+IF(c.code039 > 0, 1, 0)+IF(c.code040 > 0, 1, 0)+IF(c.code041 > 0, 1, 0)+IF(c.code042 > 0, 1, 0)+IF(c.code043 > 0, 1, 0)+IF(c.code044 > 0, 1, 0)+IF(c.code045 > 0, 1, 0)+IF(c.code046 > 0, 1, 0)+IF(c.code047 > 0, 1, 0)+IF(c.code048 > 0, 1, 0)+IF(c.code049 > 0, 1, 0)+IF(c.code050 > 0, 1, 0)+IF(c.code101 > 0, 1, 0)+IF(c.code102 > 0, 1, 0)+IF(c.code103 > 0, 1, 0)+IF(c.code104 > 0, 1, 0)+IF(c.code105 > 0, 1, 0)+IF(c.code106 > 0, 1, 0)+IF(c.code107 > 0, 1, 0)+IF(c.code108 > 0, 1, 0)+IF(c.code109 > 0, 1, 0)+IF(c.code110 > 0, 1, 0)+IF(c.code111 > 0, 1, 0)+IF(c.code112 > 0, 1, 0)+IF(c.code113 > 0, 1, 0)+IF(c.code114 > 0, 1, 0)+IF(c.code115 > 0, 1, 0)+IF(c.code116 > 0, 1, 0)+IF(c.code117 > 0, 1, 0)+IF(c.code118 > 0, 1, 0)+IF(c.code119 > 0, 1, 0)+IF(c.code120 > 0, 1, 0)+IF(c.code121 > 0, 1, 0)+IF(c.code122 > 0, 1, 0)+IF(c.code123 > 0, 1, 0)+IF(c.code124 > 0, 1, 0)+IF(c.code125 > 0, 1, 0)+IF(c.code126 > 0, 1, 0)+IF(c.code127 > 0, 1, 0)+IF(c.code128 > 0, 1, 0)+IF(c.code129 > 0, 1, 0)+IF(c.code130 > 0, 1, 0)+IF(c.code131 > 0, 1, 0)+IF(c.code132 > 0, 1, 0)+IF(c.code133 > 0, 1, 0)+IF(c.code134 > 0, 1, 0)+IF(c.code135 > 0, 1, 0)+IF(c.code136 > 0, 1, 0)+IF(c.code137 > 0, 1, 0)+IF(c.code138 > 0, 1, 0)+IF(c.code139 > 0, 1, 0)+IF(c.code140 > 0, 1, 0)+IF(c.code141 > 0, 1, 0)+IF(c.code142 > 0, 1, 0)+IF(c.code143 > 0, 1, 0)+IF(c.code144 > 0, 1, 0)+IF(c.code145 > 0, 1, 0)+IF(c.code146 > 0, 1, 0)+IF(c.code147 > 0, 1, 0)+IF(c.code148 > 0, 1, 0)+IF(c.code149 > 0, 1, 0)+IF(c.code150 > 0, 1, 0)) AS P_TAKEN";
$query_column_avg_total_p_sought = " AVG( IF(c.code051 > 0, 1, 0)+IF(c.code052 > 0, 1, 0)+IF(c.code053 > 0, 1, 0)+IF(c.code054 > 0, 1, 0)+IF(c.code055 > 0, 1, 0)+IF(c.code056 > 0, 1, 0)+IF(c.code057 > 0, 1, 0)+IF(c.code058 > 0, 1, 0)+IF(c.code059 > 0, 1, 0)+IF(c.code060 > 0, 1, 0)+IF(c.code061 > 0, 1, 0)+IF(c.code062 > 0, 1, 0)+IF(c.code063 > 0, 1, 0)+IF(c.code064 > 0, 1, 0)+IF(c.code065 > 0, 1, 0)+IF(c.code066 > 0, 1, 0)+IF(c.code067 > 0, 1, 0)+IF(c.code068 > 0, 1, 0)+IF(c.code069 > 0, 1, 0)+IF(c.code070 > 0, 1, 0)+IF(c.code071 > 0, 1, 0)+IF(c.code072 > 0, 1, 0)+IF(c.code073 > 0, 1, 0)+IF(c.code074 > 0, 1, 0)+IF(c.code075 > 0, 1, 0)+IF(c.code076 > 0, 1, 0)+IF(c.code077 > 0, 1, 0)+IF(c.code078 > 0, 1, 0)+IF(c.code079 > 0, 1, 0)+IF(c.code080 > 0, 1, 0)+IF(c.code081 > 0, 1, 0)+IF(c.code082 > 0, 1, 0)+IF(c.code083 > 0, 1, 0)+IF(c.code084 > 0, 1, 0)+IF(c.code085 > 0, 1, 0)+IF(c.code086 > 0, 1, 0)+IF(c.code087 > 0, 1, 0)+IF(c.code088 > 0, 1, 0)+IF(c.code089 > 0, 1, 0)+IF(c.code090 > 0, 1, 0)+IF(c.code091 > 0, 1, 0)+IF(c.code092 > 0, 1, 0)+IF(c.code093 > 0, 1, 0)+IF(c.code094 > 0, 1, 0)+IF(c.code095 > 0, 1, 0)+IF(c.code096 > 0, 1, 0)+IF(c.code097 > 0, 1, 0)+IF(c.code098 > 0, 1, 0)+IF(c.code099 > 0, 1, 0)+IF(c.code100 > 0, 1, 0)+IF(c.code151 > 0, 1, 0)+IF(c.code152 > 0, 1, 0)+IF(c.code153 > 0, 1, 0)+IF(c.code154 > 0, 1, 0)+IF(c.code155 > 0, 1, 0)+IF(c.code156 > 0, 1, 0)+IF(c.code157 > 0, 1, 0)+IF(c.code158 > 0, 1, 0)+IF(c.code159 > 0, 1, 0)+IF(c.code160 > 0, 1, 0)+IF(c.code161 > 0, 1, 0)+IF(c.code162 > 0, 1, 0)+IF(c.code163 > 0, 1, 0)+IF(c.code164 > 0, 1, 0)+IF(c.code165 > 0, 1, 0)+IF(c.code166 > 0, 1, 0)+IF(c.code167 > 0, 1, 0)+IF(c.code168 > 0, 1, 0)+IF(c.code169 > 0, 1, 0)+IF(c.code170 > 0, 1, 0)+IF(c.code171 > 0, 1, 0)+IF(c.code172 > 0, 1, 0)+IF(c.code173 > 0, 1, 0)+IF(c.code174 > 0, 1, 0)+IF(c.code175 > 0, 1, 0)+IF(c.code176 > 0, 1, 0)+IF(c.code177 > 0, 1, 0)+IF(c.code178 > 0, 1, 0)+IF(c.code179 > 0, 1, 0)+IF(c.code180 > 0, 1, 0)+IF(c.code181 > 0, 1, 0)+IF(c.code182 > 0, 1, 0)+IF(c.code183 > 0, 1, 0)+IF(c.code184 > 0, 1, 0)+IF(c.code185 > 0, 1, 0)+IF(c.code186 > 0, 1, 0)+IF(c.code187 > 0, 1, 0)+IF(c.code188 > 0, 1, 0)+IF(c.code189 > 0, 1, 0)+IF(c.code190 > 0, 1, 0)+IF(c.code191 > 0, 1, 0)+IF(c.code192 > 0, 1, 0)+IF(c.code193 > 0, 1, 0)+IF(c.code194 > 0, 1, 0)+IF(c.code195 > 0, 1, 0)+IF(c.code196 > 0, 1, 0)+IF(c.code197 > 0, 1, 0)+IF(c.code198 > 0, 1, 0)+IF(c.code199 > 0, 1, 0)+IF(c.code200 > 0, 1, 0) ) AS P_SOUGHT";
$scores_nojournal = " AND d.instrument_id <> ".SQLstr($instrument_id_base."_JOURNAL ", "text")." ";





/* 				ALL CODE RESULTS --
   Significant or useful information for every record under this username.
	 By default, this query doesn't reference la_scores s, because we'd like it to also include data from journal entries which don't have a score. But if a LAS level filter is specified, this query will only look for performances that have scores.
	 */
	 
$sql = sprintf("SELECT 
		COUNT(DISTINCT d.lakey) AS count, 
		AVG(c.argumentation_persuasiveness) AS persuasiveness, 
		AVG(c.argumentation_relevance_scenario) AS relevance_scenario, 
		AVG(c.argumentation_probe) AS probe, 
		AVG(c.argumentation_clarity) AS clarity, 
		AVG(c.argumentation_fragment) AS fragment, 
		AVG(c.argumentation_conciseness) AS conciseness, 
		AVG(c.argumentation_framing) AS framing, 
		AVG(c.argumentation_jargon) AS jargon, 
		AVG(c.argumentation_on_point) AS on_point, 
		AVG(c.argumentation_repetitive) AS repetitive, 
		AVG(c.argumentation_vocabulary) AS vocabulary, 
		AVG(c.argumentation_overall) AS overall, 
		AVG(c.argumentation_scale_mechanics) AS scale_mechanics,
		{$query_column_avg_total_p_taken}, {$query_column_avg_total_p_sought}, 
		ROUND( AVG(IFNULL(m1.perspective_taking_situation_score, 0)), 1) 		AS context203, 
		ROUND( AVG(IFNULL(m2.organizational_culture_context_values, 0)), 1) AS context226, 
		ROUND( AVG(IFNULL(m3.info_gather_context_values, 0)), 1) 		AS context341, 
		ROUND( AVG(IFNULL(m4.dm_problem_source_values, 0)), 1) 			AS context342, 
		ROUND( AVG(IFNULL(m5.dm_process_constraints_values, 0)), 1) AS context406
	FROM la_data d 
		LEFT JOIN la_codes c ON d.lakey = c.lakey 
		LEFT JOIN la_scores s ON d.lakey = s.lakey {$scores_nojournal}
		LEFT JOIN la_survey_data sd ON d.lakey = sd.lakey
		LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
		LEFT JOIN registrants r ON d.userkey = r.userkey 
		LEFT JOIN la_code_menus m1 ON c.code203 = m1.pulldownkey
		LEFT JOIN la_code_menus m2 ON c.code226 = m2.pulldownkey
		LEFT JOIN la_code_menus m3 ON c.code341 = m3.pulldownkey
		LEFT JOIN la_code_menus m4 ON c.code342 = m4.pulldownkey
		LEFT JOIN la_code_menus m5 ON c.code406 = m5.pulldownkey 
	WHERE {$finalized} %s %s ",
		$filter_instrument_id,
		$filter_demog);
$rsImportantResults = mysql_query($sql) or die("rsImportantResults: ".mysql_error()."<br><br>"
	.str_replace("\n", "<br>", $sql));
$row_rsImportantResults = mysql_fetch_assoc($rsImportantResults);

//		NUMBER OF TEST TAKERS		//
// mirrors rsImportantResults except it displays one record per test taker.

$query_rsNumTestTakers = sprintf("SELECT d.lakey, d.userkey 
	FROM la_data d 
		LEFT JOIN la_codes c ON d.lakey = c.lakey 
		LEFT JOIN la_scores s ON d.lakey = s.lakey {$scores_nojournal}
		LEFT JOIN registrants r ON d.userkey = r.userkey 
		LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
	WHERE {$finalized} %s %s GROUP BY d.userkey",
		$filter_instrument_id,
		$filter_demog);
$rsNumTestTakers = mysql_query($query_rsNumTestTakers) or die("rsNumTestTakers: ".mysql_error());
$totalRows_rsNumTestTakers = mysql_num_rows($rsNumTestTakers);




// Important results per test time: general results for the "Select a report to view" panel, as well as argumentation codes across test time

$query_rsLaDataOverTime = sprintf("SELECT d.test_time, 
		AVG(c.argumentation_persuasiveness) AS persuasiveness, 
		AVG(c.argumentation_relevance_scenario) AS relevance_scenario, 
		AVG(c.argumentation_probe) AS probe, 
		AVG(c.argumentation_clarity) AS clarity, 
		AVG(c.argumentation_fragment) AS fragment, 
		AVG(c.argumentation_conciseness) AS conciseness, 
		AVG(c.argumentation_framing) AS framing, 
		AVG(c.argumentation_jargon) AS jargon, 
		AVG(c.argumentation_on_point) AS on_point, 
		AVG(c.argumentation_repetitive) AS repetitive, 
		AVG(c.argumentation_vocabulary) AS vocabulary, 
		AVG(c.argumentation_overall) AS overall  
	FROM  la_data d 
		LEFT JOIN la_codes c ON d.lakey = c.lakey 
		LEFT JOIN la_scores s ON d.lakey = s.lakey {$scores_nojournal}
		LEFT JOIN registrants r ON d.userkey = r.userkey 
		LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
	WHERE c.lakey IS NOT NULL AND {$finalized} %s %s
	GROUP BY d.test_time ORDER BY d.test_time", 
		$filter_instrument_id,
		$filter_demog);
$rsLaDataOverTime = mysql_query($query_rsLaDataOverTime, $Assessment) or die("rsLaDataOverTime: ".mysql_error());
$row_rsLaDataOverTime = mysql_fetch_assoc($rsLaDataOverTime);
$totalRows_rsLaDataOverTime = mysql_num_rows($rsLaDataOverTime);


$sql = "SELECT * FROM la_argumentation";
$rsArgumentation = mysql_query($sql) or die("rsArgumentation: ".mysql_error());


$query_rsLaCodeDescriptions = sprintf("SELECT * FROM la_code_descriptions WHERE instrument_id = %s",
		SQLstr($instrument_id_base, "text"));
$rsLaCodeDescriptions = mysql_query($query_rsLaCodeDescriptions, $Assessment) or die("rsLaCodeDescriptions: ".mysql_error());
$row_rsLaCodeDescriptions = mysql_fetch_assoc($rsLaCodeDescriptions);
$totalRows_rsLaCodeDescriptions = mysql_num_rows($rsLaCodeDescriptions);



// Boilerplate table allows us to pull template text into various parts of the report.
// It's more efficient, now, to download the whole table and put each boilerplate item into a slot in an array, which I call using the boilerplate column "name".
$rsLaBoilerplate = mysql_query("SELECT b.* 
	FROM la_boilerplate b WHERE type LIKE '%report' ", $Assessment) 
	or die("rsLaBoilerplate: ".mysql_error());
$boilerplate = array();
while ($row_rsLaBoilerplate = mysql_fetch_assoc($rsLaBoilerplate)) {
	$boilerplate[$row_rsLaBoilerplate['name']] = $row_rsLaBoilerplate['la_boilerplate_text'];
}



$query_rsLaCodeMenus = "SELECT * FROM la_code_menus";
$rsLaCodeMenus = mysql_query($query_rsLaCodeMenus, $Assessment) or die(mysql_error());
$row_rsLaCodeMenus = mysql_fetch_assoc($rsLaCodeMenus);
$totalRows_rsLaCodeMenus = mysql_num_rows($rsLaCodeMenus);


$query_rsDemogsManLevelGeneral = "SELECT * FROM demogs_man_level_general";
$rsDemogsManLevelGeneral = mysql_query($query_rsDemogsManLevelGeneral, $Assessment) or die(mysql_error());
$row_rsDemogsManLevelGeneral = mysql_fetch_assoc($rsDemogsManLevelGeneral);
$totalRows_rsDemogsManLevelGeneral = mysql_num_rows($rsDemogsManLevelGeneral);


$query_rsScaleLdmaPc = " SELECT * FROM la_comments_scales 
WHERE scale_name = 'perspective coordination' ORDER BY score_low ";
$rsScaleLdmaPc = mysql_query($query_rsScaleLdmaPc, $Assessment) or die(mysql_error());

$query_rsScaleLdmaCt = " SELECT * FROM la_comments_scales 
WHERE scale_name = 'contextual thinking' ORDER BY score_low ";
$rsScaleLdmaCt = mysql_query($query_rsScaleLdmaCt, $Assessment) or die(mysql_error());

$query_rsScaleLdmaDmp = " SELECT * FROM la_comments_scales 
WHERE scale_name = 'decision-making process' ORDER BY score_low ";
$rsScaleLdmaDmp = mysql_query($query_rsScaleLdmaDmp, $Assessment) or die(mysql_error());

$query_rsScaleLdmaCc = " SELECT * FROM la_comments_scales 
WHERE scale_name = 'collaborative capacity' ORDER BY score_low ";
$rsScaleLdmaCc = mysql_query($query_rsScaleLdmaCc, $Assessment) or die(mysql_error());




// Prepare the LLRA QUALITIES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('llra_qualities')) {
	// A quality will be included on this summary report if 1 or more person selected it and was coded for it (resulting in an average score). The only data drawn from individual records is the average score for that quality.
	
	// write the column snippets for the query, for each potential qualities average.
	// Also fetch the labels and boilerplate for each quality, in case it's needed
	$llra_qual_avgs_sql = "  ";
	$llra_qual_labels = array();
	$llra_qual_boilerplate = array();
	
	// go through each code slot for leadership qualities
	for ($a = 461; $a <= 480; $a ++) {
		// Prepare this part of the query for the charts
		$llra_qual_avgs_sql .= " ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0, 1, 0)),2) AS avg_".$a.",
		ROUND(100 * (SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0, 1, 0)) - 10) / (12.5 - 10)) 
			AS avg_old_".$a.", 
		SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Locate one of the CODE slots for the codes associated with this AVERAGE quality score.
		// The qualities' text info can only be looked up starting from those code slots.
		// However for the purposes of this page, store text in the array location based on the avgs slot.
		$c = ($a - 460) * 2;
		
		// Prepare the text for tab titles and boilerplate
		$row_rsQualLabel = mysql_fetch_assoc(mysql_query("SELECT m.menu_item_name, b.la_boilerplate_text 
			FROM la_rubrics r 
			JOIN la_menus m ON r.theme_menukey = m.menukey
			JOIN la_boilerplate b ON b.name = CONCAT('client_report_llra_', m.menukey)
			WHERE r.code_number = ".$c));
		$llra_qual_labels[$a] = $row_rsQualLabel['menu_item_name'];
		$llra_qual_boilerplate[$a] = $row_rsQualLabel['la_boilerplate_text'];
		
		$llra_qual_labels[$a] = str_replace("ability to work with diverse perspectives", 
																				"working with perspectives", $llra_qual_labels[$a]);
		// $llra_qual_labels[$a] = str_replace("ability to share", "sharing", $llra_qual_labels[$a]);
	}
	
	// Query for determining which specific qualities have code data
	
	$query_rsLlraQualCounts = sprintf("SELECT {$llra_qual_avgs_sql} 1 AS `one`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey {$scores_nojournal}
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) %s %s ", 
			$filter_instrument_id,
			$filter_demog);
	$rsLlraQualCounts = mysql_query($query_rsLlraQualCounts, $Assessment)
		or die("rsLlraQualCounts: ".mysql_error());
	$row_rsLlraQualCounts = mysql_fetch_assoc($rsLlraQualCounts);
	
	// Queries for the 2 charts
	
	$query_rsChartLlraQualByManLevel = sprintf("SELECT {$llra_qual_avgs_sql}
			ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_quals, 
			SUM(IF(c.code491 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE ({$finalized}) %s %s
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartLlraQualByManLevel = mysql_query($query_rsChartLlraQualByManLevel, $Assessment) or die("rsChartLlraQualByManLevel: ".mysql_error());
	// topher($query_rsChartLlraQualByManLevel); topher();
	
	$query_rsChartLlraQualByGroup = sprintf("SELECT {$llra_qual_avgs_sql} 
			ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_quals, 
			SUM(IF(c.code491 > 0,1,0)) AS N, r.group AS `GROUP`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE ({$finalized}) AND r.group <> '' %s %s
		GROUP BY r.group ORDER BY r.group", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartLlraQualByGroup = mysql_query($query_rsChartLlraQualByGroup, $Assessment) or die("rsChartArgByGroup: ".mysql_error());
	$totalRows_rsChartLlraQualByGroup = mysql_num_rows($rsChartLlraQualByGroup);
	
}

// Prepare the LLRA THEMES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('llra_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 7 themes are likely to be present). The only data drawn from individual records is the average score for that theme.
	
	// write the column snippets for the query, for each potential themes average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$llra_theme_avgs_sql = "  ";
	$llra_theme_labels = array();
	$llra_theme_boilerplate = array();
	
	// Go through each code slot for leadership themes
	for ($a = 481; $a <= 490; $a ++) {
		
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$llra_theme_avgs_sql .= " ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
		ROUND(100 * (SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0, 1, 0)) - 10) / (12.5 - 10)) 
			AS avg_old_".$a.", 
		SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Locate one of the CODE slots for the codes associated with this AVERAGE score for the theme.
		// The themes' text info can only be looked up starting from those code slots.
		// However for the purposes of this page, store text in the array location based on the avgs slot.
		$c = (($a - 480) * 3) + 100;
		$c = str_pad($c, 3, '0', STR_PAD_LEFT);
		
		// Prepare the text for tab titles and boilerplate
		$row_rsThemeLabel = mysql_fetch_assoc(mysql_query("SELECT r.theme_name, b.la_boilerplate_text 
			FROM la_rubrics r 
			JOIN la_boilerplate b ON b.name = CONCAT('client_report_llra_theme_', r.theme_name)
			WHERE r.code_number = ".$c));
		$llra_theme_labels[$a] = $row_rsThemeLabel['theme_name'];
		$llra_theme_boilerplate[$a] = $row_rsThemeLabel['la_boilerplate_text'];
		
	}
	
	// Query for determining which qualities have code data
	
	$query_rsLlraThemeCounts = sprintf("SELECT {$llra_theme_avgs_sql} 1 AS `one`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) %s %s ", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	// topher($query_rsLlraThemeCounts); 
	$rsLlraThemeCounts = mysql_query($query_rsLlraThemeCounts, $Assessment)
		or die("rsLlraThemeCounts: ".mysql_error());
	$row_rsLlraThemeCounts = mysql_fetch_assoc($rsLlraThemeCounts);
	
	// Queries for the 2 charts
	
	$query_rsChartLlraThemeByManLevel = sprintf("SELECT {$llra_theme_avgs_sql}
			ROUND(SUM(c.code492) / SUM(IF(c.code492 > 0,1,0)),2) AS avg_themes, 
			SUM(IF(c.code492 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE ({$finalized}) %s %s 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartLlraThemeByManLevel = mysql_query($query_rsChartLlraThemeByManLevel, $Assessment) or die("rsChartLlraThemeByManLevel: ".mysql_error());
	
	$query_rsChartLlraThemeByGroup = sprintf("SELECT {$llra_theme_avgs_sql} 
			ROUND(SUM(c.code492) / SUM(IF(c.code492 > 0,1,0)),2) AS avg_themes, 
			SUM(IF(c.code492 > 0,1,0)) AS N, r.group AS `GROUP`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE ({$finalized}) AND r.group <> '' %s %s 
		GROUP BY r.group ORDER BY r.group", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartLlraThemeByGroup = mysql_query($query_rsChartLlraThemeByGroup, $Assessment) or die("rsChartLlraThemeByGroup: ".mysql_error());
	$totalRows_rsChartLlraThemeByGroup = mysql_num_rows($rsChartLlraThemeByGroup);
	// topher($query_rsChartLlraThemeByGroup);
	
}




// Prepare the LRJA THEMES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('lrja_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 5 themes are likely to be present). The only data drawn from individual records is the average score for that theme.
	
	// write the SQL select-column code snippets for the query, for each theme's average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$lrja_theme_avgs_sql = "  ";
	$lrja_theme_labels = array();
	$lrja_theme_boilerplate = array();
	
	// Go through each RJ theme, writing a query to fetch that theme's code averages and 
	// prepare a space for that theme in the report tabs.
	for ($a = 481; $a <= 490; $a ++) {
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$lrja_theme_avgs_sql .= " 
			ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
			SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Look up the theme name based on this average code.
		$row_rsThemeName = mysql_fetch_assoc(mysql_query("SELECT theme_name FROM la_rubrics
			WHERE instrument_id = 'LRJA' AND code_number = ".SQLstr($a, "int")));
		$theme_name = $row_rsThemeName['theme_name'];
		// Add this theme's label to the list of themes, if it exists
		if ($row_rsThemeName['theme_name'] <> "") { 
			$lrja_theme_labels[$a] = $row_rsThemeName['theme_name'];
		}
	}
	
	// Query for determining which qualities have code data
	
	$query_rsLrjaThemeCounts = sprintf("SELECT ".$lrja_theme_avgs_sql." 1 AS `one`
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey 
	WHERE ({$finalized}) %s %s ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsLrjaThemeCounts = mysql_query($query_rsLrjaThemeCounts, $Assessment)
		or die("rsLrjaThemeCounts: ".mysql_error());
	$row_rsLrjaThemeCounts = mysql_fetch_assoc($rsLrjaThemeCounts);
	
	// Query for the manlevel charts. For each manlevel, this query fetches both the columns for
	// specific theme averages, and the column for the global avg (across all themes).
	$sql = sprintf("SELECT {$lrja_theme_avgs_sql}
	ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
	SUM(IF(c.code491 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey
	JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
	WHERE ({$finalized}) %s %s 
	GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLrjaThemeByManLevel = mysql_query($sql, $Assessment) or 
		die("rsChartLrjaThemeByManLevel: ".mysql_error());
	
	// topher($sql);
	
	$sql = sprintf("SELECT {$lrja_theme_avgs_sql} 
		ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
		SUM(IF(c.code491 > 0,1,0)) AS N, a.assign_group AS `GROUP`
	FROM la_data d 
		JOIN la_codes c ON d.lakey = c.lakey
		LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
		JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
		JOIN registrants r ON d.userkey = r.userkey
		LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
	WHERE ({$finalized})
		AND a.assign_group <> '' %s %s 
	GROUP BY a.assign_group ORDER BY a.assign_group", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLrjaThemeByGroup = mysql_query($sql, $Assessment) or 
		die("rsChartLrjaThemeByGroup: ".mysql_error());
	
}

if (checkModule('lrja_scales')) {
	/* The logic for presenting the LRJA scale results: 
	for each code slot,
		fetch from la_codes -> la_rubrics, grouped by the rubric selection, with N counts
		dump results into a 3-dim array:
			$lrja_scale_freq[the scale rubric name][the stem text to show][test time]
		track the highest # of test times for determining table structure
	*/
	
	$lrjascale_numtesttimes = 0;
	$lrjascale_ns = array();	// the total N of test takers, for each test time
	
	// **** look up the total N of test takers and find out how many test times there are
	$sql = sprintf("");
	$rsLrjaScaleTotals = mysql_query($sql) or die("LRJA scale total Ns: ".mysql_error());
	
	// The frequencies will be looked up on a per-rubric basis, in the in-page code.
	
}






// Prepare the LERA THEMES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('lera_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 5 themes are likely to be present). The only data drawn from individual records is the average score for that theme.
	
	// write the SQL select-column code snippets for the query, for each theme's average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$lera_theme_avgs_sql = "  ";
	$lera_theme_labels = array();
	$lera_theme_boilerplate = array();
	
	// Go through each Ethics theme, writing a query to fetch that theme's code averages and 
	// prepare a space for that theme in the report tabs.
	for ($a = 481; $a <= 490; $a ++) {
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$lera_theme_avgs_sql .= " 
			ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
			SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Look up the theme name based on this average code.
		$row_rsThemeName = mysql_fetch_assoc(mysql_query("SELECT theme_name FROM la_rubrics
			WHERE instrument_id = 'LERA' AND code_number = ".SQLstr($a, "int")));
		$theme_name = $row_rsThemeName['theme_name'];
		// Add this theme's label to the list of themes, if it exists
		if ($row_rsThemeName['theme_name'] <> "") { 
			$lera_theme_labels[$a] = $row_rsThemeName['theme_name'];
		}
	}
	
	// Query for determining which qualities have code data
	
	$query_rsLeraThemeCounts = sprintf("SELECT {$lera_theme_avgs_sql} 1 AS `one`
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey 
	WHERE ({$finalized}) %s %s ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsLeraThemeCounts = mysql_query($query_rsLeraThemeCounts, $Assessment)
		or die("rsLeraThemeCounts: ".mysql_error());
	$row_rsLeraThemeCounts = mysql_fetch_assoc($rsLeraThemeCounts);
	
	// Query for the manlevel charts. For each manlevel, this query fetches both the columns for
	// specific theme averages, and the column for the global avg (across all themes).
	$query_rsChartLeraThemeByManLevel = sprintf("SELECT {$lera_theme_avgs_sql}
		ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
		SUM(IF(c.code491 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
	FROM la_data d 
		JOIN la_codes c ON d.lakey = c.lakey 
		LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
		JOIN registrants r ON d.userkey = r.userkey
		JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
	WHERE ({$finalized}) %s %s 
	GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLeraThemeByManLevel = mysql_query($query_rsChartLeraThemeByManLevel, $Assessment) or 
		die("rsChartLeraThemeByManLevel: ".mysql_error());
	
	// topher($query_rsChartLeraThemeByManLevel);
	
	$sql = sprintf("SELECT {$lera_theme_avgs_sql}
		ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
		SUM(IF(c.code491 > 0,1,0)) AS N, a.assign_group AS `GROUP`
	FROM la_data d 
		JOIN la_codes c ON d.lakey = c.lakey
		LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
		JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
		JOIN registrants r ON d.userkey = r.userkey
		LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
	WHERE ({$finalized})
		AND a.assign_group <> '' %s %s 
	GROUP BY a.assign_group ORDER BY a.assign_group", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLeraThemeByGroup = mysql_query($sql, $Assessment) or 
		die("rsChartLeraThemeByGroup: ".mysql_error());
	
}




// Prepare the LDPA THEMES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('ldpa_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 6 themes are likely to be present, except that most people don't discuss the Theory and Practice theme). The only data drawn from individual records is the average score for that theme.
	
	// write the SQL select-column code snippets for the query, for each theme's average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$ldpa_theme_avgs_sql = "  ";
	$ldpa_theme_labels = array();
	// Map a shortened title for each theme (full theme name text is too long for the tabs)
	$ldpa_theme_titles = array(481 => "psychological structures", 
														  482 => "developmental dynamics",
															483 => "developmental pedagogy", 
															484 => "methodology",
															485 => "developmental psychology", 
															486 => "theory and practice", 
															487 => "learning", 
															488 => "curricula", 
															489 => "assessment");
	$ldpa_theme_boilerplate = array();
	
	// Go through each DP theme, writing a query to fetch that theme's code averages and 
	// prepare a space for that theme in the report tabs.
	for ($a = 481; $a <= 490; $a ++) {
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$ldpa_theme_avgs_sql .= " 
			ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
			SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Look up the theme name based on this average code.
		$row_rsThemeName = mysql_fetch_assoc(mysql_query("SELECT theme_name FROM la_rubrics
			WHERE instrument_id = 'LDPA' AND code_number = ".SQLstr($a, "int")));
		$theme_name = $row_rsThemeName['theme_name'];
		// Add this theme's label to the list of themes, if it exists
		if ($row_rsThemeName['theme_name'] <> "") { 
			$ldpa_theme_labels[$a] = $row_rsThemeName['theme_name'];
		}
	}
	
	// Query for determining which qualities have code data
	
	$query_rsLdpaThemeCounts = sprintf("SELECT ".$ldpa_theme_avgs_sql." 1 AS `one`
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey 
	WHERE ({$finalized}) %s %s ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsLdpaThemeCounts = mysql_query($query_rsLdpaThemeCounts, $Assessment)
		or die("rsLdpaThemeCounts: ".mysql_error());
	$row_rsLdpaThemeCounts = mysql_fetch_assoc($rsLdpaThemeCounts);
	
	// Query for the manlevel charts. For each manlevel, this query fetches both the columns for
	// specific theme averages, and the column for the global avg (across all themes).
	$query_rsChartLdpaThemeByManLevel = sprintf("SELECT {$ldpa_theme_avgs_sql}
		ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
		SUM(IF(c.code491 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
	FROM la_data d 
		JOIN la_codes c ON d.lakey = c.lakey 
		LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
		JOIN registrants r ON d.userkey = r.userkey
		JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
	WHERE ({$finalized}) %s %s 
	GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLdpaThemeByManLevel = mysql_query($query_rsChartLdpaThemeByManLevel, $Assessment) or 
		die("rsChartLdpaThemeByManLevel: ".mysql_error());
	
	// topher($query_rsChartLdpaThemeByManLevel);
	
	# Artificially putting everyone in the "FOLA" group.
	$query_rsChartLdpaThemeByGroup = sprintf("SELECT {$ldpa_theme_avgs_sql}
		ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
		SUM(IF(c.code491 > 0,1,0)) AS N, 'FOLA_2012' AS `GROUP`
	FROM la_data d 
		JOIN la_codes c ON d.lakey = c.lakey
		LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
		JOIN registrants r ON d.userkey = r.userkey
		LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
	WHERE ({$finalized}) %s %s 
	 ORDER BY `GROUP` ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLdpaThemeByGroup = mysql_query($query_rsChartLdpaThemeByGroup, $Assessment) or 
		die("rsChartLdpaThemeByGroup: ".mysql_error());
	$totalRows_rsChartLdpaThemeByGroup = mysql_num_rows($rsChartLdpaThemeByGroup);
	
}






// Prepare the LIMA THEMES TABS
// I can't prepare the tab content here, because the tab content is mostly the charts and the charts need to be constructed within the tab itself.

if (checkModule('lima_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 6 themes are likely to be present, except that most people don't discuss the Theory and Practice theme). The only data drawn from individual records is the average score for that theme.
	
	// write the SQL select-column code snippets for the query, for each theme's average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$lima_theme_avgs_sql = "  ";
	$lima_theme_labels = array();
	// Map a shortened title for each theme (full theme name text is too long for the tabs)
	$lima_theme_titles = array( 
		471 => "quadrants as tools", 
		472 => "quadrants as perspectives",
		473 => "quadrants as methods", 
		474 => "quadrants as constructs",
		481 => "levels as constructs", 
		482 => "developmental change", 
		483 => "evolving worldviews", 
		486 => "levels and lines as tools");
	$lima_theme_boilerplate = array();
	
	// Go through each LIMA theme, writing a query to fetch that theme's code averages and 
	// prepare a space for that theme in the report tabs.
	for ($a = 471; $a <= 490; $a ++) {
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$lima_theme_avgs_sql .= " 
			ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
			SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Look up the theme name based on this average code.
		$row_rsThemeName = mysql_fetch_assoc(mysql_query("SELECT theme_name FROM la_rubrics
			WHERE instrument_id = 'LIMA' AND code_number = ".SQLstr($a, "int")));
		$theme_name = $row_rsThemeName['theme_name'];
		// Add this theme's label to the list of themes, if it exists
		if ($row_rsThemeName['theme_name'] <> "") { 
			$lima_theme_labels[$a] = $row_rsThemeName['theme_name'];
		}
	}
	
	// Query for determining which qualities have code data
	
	$query_rsLimaThemeCounts = sprintf("SELECT {$lima_theme_avgs_sql} 1 AS `one`
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey 
	WHERE ({$finalized}) %s %s ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsLimaThemeCounts = mysql_query($query_rsLimaThemeCounts, $Assessment)
		or die("rsLimaThemeCounts: ".mysql_error());
	$row_rsLimaThemeCounts = mysql_fetch_assoc($rsLimaThemeCounts);
	
	// Query for the manlevel charts. For each manlevel, this query fetches both the columns for
	// specific theme averages, and the column for the global avg (across all themes).
	$query_rsChartLimaThemeByManLevel = sprintf("SELECT {$lima_theme_avgs_sql}
	ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
	SUM(IF(c.code491 > 0,1,0)) AS N, mlg.man_level_general_name AS MAN_LEVEL
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey
	JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
	WHERE ({$finalized}) %s %s 
	GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartLimaThemeByManLevel = mysql_query($query_rsChartLimaThemeByManLevel) or 
		die("rsChartLimaThemeByManLevel: ".mysql_error());
	
	// topher($query_rsChartLimaThemeByManLevel);
	
	# Artificially putting everyone in the "FOLA" group.
	$query_rsChartLimaThemeByGroup = sprintf("SELECT {$lima_theme_avgs_sql} 
	ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
	SUM(IF(c.code491 > 0,1,0)) AS N, r.group AS `GROUP`
	FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	JOIN registrants r ON d.userkey = r.userkey
	LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
	WHERE ({$finalized})
		AND r.group <> '' %s %s 
	GROUP BY r.group ORDER BY r.group ", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	// echo str_replace("\n", "<br>", $query_rsChartLimaThemeByGroup);
	$rsChartLimaThemeByGroup = mysql_query($query_rsChartLimaThemeByGroup) or 
		die("rsChartLimaThemeByGroup: ".mysql_error());
	$totalRows_rsChartLimaThemeByGroup = mysql_num_rows($rsChartLimaThemeByGroup);
	
}





if (checkModule('sma_themes')) {
	// A theme will be included on this summary report if 1 or more person has been coded for it (meaning that all 5 themes are likely to be present). The only data drawn from individual records is the average score for that theme.
	
	// write the SQL select-column code snippets for the query, for each theme's average.
	// Also fetch the labels and boilerplate for each theme, in case it's needed
	$sma_theme_avgs_sql = "  ";
	$sma_theme_labels = array();
	$sma_theme_boilerplate = array();
	
	// Go through each Ethics theme, writing a query to fetch that theme's code averages and 
	// prepare a space for that theme in the report tabs.
	for ($a = 481; $a <= 490; $a ++) {
		// Prepare this part of the query for the charts. This snippet creates 2 columns:
		// the GROUP AVG for this code column (sum / count of the theme's avg for each person),
		// and the COUNT of records where there was an average for this theme.
		$sma_theme_avgs_sql .= " 
			ROUND(SUM(c.code".$a.") / SUM(IF(c.code".$a." > 0,1,0)),2) AS avg_".$a.",
			SUM(IF(c.code".$a." > 0, 1, 0)) AS n_".$a.", ";
		
		// Look up the theme name based on this average code.
		$row_rsThemeName = mysql_fetch_assoc(mysql_query("SELECT theme_name FROM la_rubrics
			WHERE instrument_id = 'SMA' AND code_number = ".SQLstr($a, "int")));
		$theme_name = $row_rsThemeName['theme_name'];
		// echo "THEME {$a}: ".$theme_name."<br>";
		// Add this theme's label to the list of themes, if it exists
		if ($row_rsThemeName['theme_name'] <> "") { 
			$sma_theme_labels[$a] = $row_rsThemeName['theme_name'];
		}
	}
	
	// Query for determining which qualities have code data
	
	$query_rsSmaThemeCounts = sprintf("SELECT {$sma_theme_avgs_sql} 1 AS `one`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE ({$finalized}) %s %s ", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	// echo "RSthemecounts: ".$query_rsSmaThemeCounts."<br>";
	$rsSmaThemeCounts = mysql_query($query_rsSmaThemeCounts) or die("rsSmaThemeCounts: ".mysql_error());
	$row_rsSmaThemeCounts = mysql_fetch_assoc($rsSmaThemeCounts);
	
	// LSMA theme by group
	$sql = sprintf("SELECT {$sma_theme_avgs_sql} 
			ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
			SUM(IF(c.code491 > 0,1,0)) AS N, a.assign_group AS `GROUP`
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) AND a.assign_group <> '' %s %s 
		GROUP BY a.assign_group ORDER BY a.assign_group", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartSmaThemeByGroup = mysql_query($sql) or die("rsChartSmaThemeByGroup: ".mysql_error());
	// echo str_replace("\n", "<br>", $sql);
	
	// LSMA theme by time
	$sql = sprintf("SELECT {$sma_theme_avgs_sql} 
			ROUND(SUM(c.code491) / SUM(IF(c.code491 > 0,1,0)),2) AS avg_themes, 
			SUM(IF(c.code491 > 0,1,0)) AS N, d.test_time AS TEST_TIME
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) %s %s 
		GROUP BY d.test_time ORDER BY d.test_time ", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartSmaThemeByTime = mysql_query($sql) or die("rsChartSmaThemeByTime: ".mysql_error());
	// echo str_replace("\n", "<br>", $sql);

	// die();
	
}




if (checkModule('cheating')) {
	
	// people who referenced outside sources, plagiarized etc: la_menus menukey = 81
	
	$sql = sprintf("SELECT r.firstname, r.lastname, d.lakey
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) AND special_comment = 81 %s %s 
		ORDER BY date_completed ASC",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsCheaters = mysql_query($sql) or die("rsCheaters: ".mysql_error());
	
	$cheater_name = array();
	$cheater_lakey = array();
	while ($row_rsCheaters = mysql_fetch_assoc($rsCheaters)) {
		if ($row_rsCheaters['firstname'] <> $row_rsCheaters['lastname']) {
		$cheater_name[] = $row_rsCheaters['firstname']." ".$row_rsCheaters['lastname'];
		} else { $cheater_name[] = $row_rsCheaters['lastname']; }
		$cheater_lakey[] = $row_rsCheaters['lakey'];
	}
	
	// people who didn't take the assignment very seriously: la_menus menukey = 80
	
	$sql = sprintf("SELECT r.firstname, r.lastname, d.lakey
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE ({$finalized}) AND c.special_comment = 80 %s %s 
		ORDER BY date_completed ASC",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsApathetes = mysql_query($sql) or die("rsApathetes: ".mysql_error());
	
	$apathete_name = array();
	$apathete_lakey = array();
	while ($row_rsApathetes = mysql_fetch_assoc($rsApathetes)) {
		$apathete_name[] = $row_rsApathetes['firstname']." ".$row_rsApathetes['lastname'];
		$apathete_lakey[] = $row_rsApathetes['lakey'];
	}
	
	// people who haven't given the client permission to view their report
	
	$sql = sprintf("SELECT r.firstname, r.lastname, d.lakey
		FROM la_data d 
			LEFT JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE bc_allowedtoview = 0 %s %s 
		ORDER BY date_completed ASC",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsSecretive = mysql_query($sql) or die("rsApathetes: ".mysql_error());
	
	$secretive_name = array();
	$secretive_lakey = array();
	while ($row_rsSecretive = mysql_fetch_assoc($rsSecretive)) {
		$secretive_name[] = $row_rsSecretive['firstname']." ".$row_rsSecretive['lastname'];
		$secretive_lakey[] = $row_rsSecretive['lakey'];
	}
}





// 				CURRENT STRENGTHS / POTENTIAL STRENGTHS FREQUENCIES
// **** It would be easy to add per-test-time functionality to the SWR code frequencies query.
if (checkModule('strengths_written')) {
	
	/* 
	For each strengths code 
		IN the specified ranges
		THAT HAS a la_code_descriptions tag,
	Add a line to a query which will count the # of times that code was marked. */
	
	$codes_start = 1;
	$codes_end = 100; 
	$codes_to_skip = " 050, 100 ";
	$counts_codes = array();
	$query_rsCountStr = " SELECT d.test_time, COUNT(DISTINCT d.lakey) AS N";
	
	$i = $codes_start;  
	// For each code in this range
	while ($i <= $codes_end) {
		$i_pad = str_pad($i, 3, '0', STR_PAD_LEFT);
		if (strpos($codes_to_skip, $i_pad)) 
		{ $i ++;  $i_pad = str_pad($i, 3, '0', STR_PAD_LEFT); }
		// if this code is labelled in la_codes_descriptions
		if ($row_rsLaCodeDescriptions['code_name'.$i_pad] <> "") {
			// add a SELECT column to the query for this code.
			$query_rsCountStr .= ", 
				SUM( IF( c.code{$i_pad} > 0, 1, 0 ) ) AS code{$i_pad}";
		}
		$i ++;
	} 
	
	// Write the rest of the query.
	$query_rsCountStr .= sprintf(" FROM la_data d 
	JOIN la_codes c ON d.lakey = c.lakey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s
	LEFT JOIN registrants r ON d.userkey = r.userkey 
	WHERE {$finalized} %s %s 
	GROUP BY d.test_time ORDER BY d.test_time ",
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	//die($query_rsCountStr);
	
	
	// Run the query.
	$rsCountStr = mysql_query($query_rsCountStr, $Assessment) or die("rsCountStr: ".mysql_error());
	// $row_rsCountStr = mysql_fetch_assoc($rsCountStr); <-- DO NOT initialize the result row. This happens down below in each while loop, so to do it here would mean a row would be skipped the first time.
	$totalRows_rsCountStr = mysql_num_rows($rsCountStr);
	
	
	// At this point, we have a single row of result which lists all the code counts for the strengths. Now we need to run a query fetching all of the current and potential strengths. In the respective tabs on the report, I go through the list of strengths (which is sorted by theme then by Lectical level) and look up the count for that code from the rsCountStr results.  
	
	
	$query_rsCurrentStrengths = sprintf(" SELECT currentstrengthkey AS `key`, code_number, current_strength_theme AS theme, current_strength AS title, position3phrasing AS final
	FROM la_codes_strengths_current WHERE instrument_id = %s AND code_number > 0
	ORDER BY theme, las_number_low ", 
			SQLstr($instrument_id_base, "text"));
	$rsCurrentStrengths = mysql_query($query_rsCurrentStrengths, $Assessment) or die("rsCurrentStrengths: ".mysql_error());
	//die($query_rsStrengths);
	$row_rsCurrentStrengths = mysql_fetch_assoc($rsCurrentStrengths);
	$totalRows_rsCurrentStrengths = mysql_num_rows($rsCurrentStrengths);
	
	$query_rsPotentialStrengths = sprintf(" SELECT potentialstrengthkey AS `key`, code_number, potential_strength_theme AS theme, potential_strength AS title, position2phrasing AS final
	FROM la_codes_strengths_potential WHERE instrument_id = %s AND code_number > 0
	ORDER BY theme, las_number_low ", 
			SQLstr($instrument_id_base, "text"));
	$rsPotentialStrengths = mysql_query($query_rsPotentialStrengths, $Assessment) or die("rsPotentialStrengths: ".mysql_error());
	//die($query_rsStrengths);
	$row_rsPotentialStrengths = mysql_fetch_assoc($rsPotentialStrengths);
	$totalRows_rsPotentialStrengths = mysql_num_rows($rsPotentialStrengths);
	
} // END IF checkModule "strengths_written" condition






// --------------------- CHART QUERIES --------------------- //
/**** I could eventually consolidate these queries more. You can include multiple X and Y column definitions in a single query - and just use different ones depending on which aspects you want a given chart to look at -- but you can only GROUP and ORDER a chart in one specific way, so we'll need different queries per "grouping of data" required.
	Currently, there are certain requirements for the queries.
	In order for the search to not break the query, all tables which the search functions might reference need to be mentioned in the FROM clause. (LEFT JOIN is acceptable - this allows a matching for that table to be null, but if a search column belonging to that table is activated, then results with no match for that table will be excluded.) 
	Tables that are required for the search columns to work include la_data, registrants (for group), and la_scores (Lectical range).
 */

if (checkModule('lectical')) {
	
	// Test time queries are harrowing when done right. You only want to show records where 
	// multiple test times exist, even if one of those alternate test times is a journal entry.
	// ** Edit for Joel: This query also needs to work if the client wants to show just one test time.
	
	$sql = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( {$sql_score} ), 2) AS LASNUMBER 
		FROM la_data d 
			LEFT JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time 
				AND d2.finalized >= 1 AND d2.scored_1 = 1
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_scores s2 ON d2.lakey = s2.lakey AND d2.instrument_id NOT LIKE %s
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND {$sql_score} IS NOT NULL
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL' OR d2.instrument_id IS NULL)
			%s %s 
		GROUP BY d.test_time 
		ORDER BY d.test_time",
			$scores_nojournal,
			SQLstr("%JOURNAL", "text"),
			$filter_instrument_id,
			$filter_demog);
	$rsChartLectByTestTime = mysql_query($sql) or die("rsChartLectByTestTime: ".mysql_error());
	$totalRows_rsChartLectByTestTime = mysql_num_rows($rsChartLectByTestTime);
	// echo str_replace("\n", "<br>", $sql); 
	
	$query_chartLectByManLevel = sprintf("SELECT MAN_LEVEL, man_level_number, 
			MAX(N) AS N, MAX(LASNUMBER) AS LASNUMBER 
		FROM (
			SELECT mlg.man_level_general_name AS MAN_LEVEL, 
				mlg.man_level_number, COUNT(DISTINCT d.lakey) AS N, 
				ROUND( AVG( s.lasnumber_1 ), 2) AS LASNUMBER 
			FROM la_data d 
				JOIN la_scores s ON d.lakey = s.lakey %s 
				LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
				JOIN registrants r ON d.userkey = r.userkey
				JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
			WHERE {$finalized} %s %s
			GROUP BY man_level_number 
			UNION ALL
			SELECT mlg.man_level_general_name AS MAN_LEVEL, mlg.man_level_number, 0 AS N, 0 AS LASNUMBER
			FROM demogs_man_level_general mlg WHERE mlg.man_level_number > 0
		) t
		GROUP BY man_level_number 
		ORDER BY man_level_number", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	// echo $query_chartLectByManLevel;
	$rsChartLectByManLevel = mysql_query($query_chartLectByManLevel, $Assessment) 
		or die("rsChartLectByManLevel: ".mysql_error());
	
	
	// Old as in earlier data, not old as in deprecated. 
	$query_rsChartOldLect = sprintf("SELECT man_level AS MAN_LEVEL, n AS N, lasnumber AS LASNUMBER 
	FROM la_ldma_olddata ", 
			SQLstr($userkey, "int"));
	$rsChartOldLect = mysql_query($query_rsChartOldLect, $Assessment) or 
		die("rsChartOldLect: ".mysql_error());
	
}


if (checkModule('argumentation')) {
	
	$query_chartArgByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.argumentation_overall ), 1) AS ARG_OVERALL 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
		WHERE {$finalized} AND c.argumentation_overall > 0 %s %s  
		GROUP BY LAS_RANGE 
		ORDER BY LAS_RANGE", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartArgByLasRange = mysql_query($query_chartArgByLasRange, $Assessment) 
		or die("rsChartArgByLasRange: ".mysql_error());
	
	$query_chartArgByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.argumentation_overall ), 1) AS ARG_OVERALL,
			ROUND( AVG( c.argumentation_scale_mechanics ), 1) AS ARG_SCALE_MECHANICS
		FROM  la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s 
		GROUP BY d.test_time 
		ORDER BY d.test_time", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	// topher($query_chartArgByTestTime);
	$rsChartArgByTestTime = mysql_query($query_chartArgByTestTime, $Assessment) 
		or die("rsChartArgsByTestTime: ".mysql_error());
	$totalRows_rsChartArgByTestTime = mysql_num_rows($rsChartArgByTestTime);
	
	$query_chartArgByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.argumentation_overall ), 1) AS ARG_OVERALL 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE {$finalized} AND c.argumentation_overall > 0 %s %s 
		GROUP BY mlg.man_level_number 
		ORDER BY mlg.man_level_number", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartArgByManLevel = mysql_query($query_chartArgByManLevel) 
		or die("rsChartArgByManLevel: ".mysql_error());
	
	$query_rsChartArgByGroup = sprintf("SELECT a.assign_group AS `GROUP`, COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.argumentation_overall ), 1) AS ARG_OVERALL, 
			ROUND( AVG( c.argumentation_scale_mechanics ), 1) AS ARG_SCALE_MECHANICS
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey
			LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE {$finalized} AND c.argumentation_overall > 0 
			AND a.assign_group <> '' %s %s 
		GROUP BY a.assign_group 
		ORDER BY a.assign_group", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	// echo str_replace("\n", "<br>", $query_rsChartArgByGroup);
	$rsChartArgByGroup = mysql_query($query_rsChartArgByGroup) 
		or die("rsChartArgByGroup: ".mysql_error());
	$totalRows_rsChartArgByGroup = mysql_num_rows($rsChartArgByGroup);

}


if (checkModule('perspectives')) {

	$query_chartPQualityByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.code451 ) ) AS QUALITY_P_TAKEN, 
			ROUND( AVG( c.code452 ) ) AS QUALITY_P_SOUGHT 
		FROM la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s 
		GROUP BY d.test_time ORDER BY d.test_time",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPQualityByTestTime = mysql_query($query_chartPQualityByTestTime, $Assessment) 
		or die("rsChartPQualityByTestTime: ".mysql_error());
	$totalRows_rsChartPQualityByTestTime = mysql_num_rows($rsChartPQualityByTestTime);
	
	
	$query_chartPQualityByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.code451 ) ) AS QUALITY_P_TAKEN, 
			ROUND( AVG( c.code452 ) ) AS QUALITY_P_SOUGHT  
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPQualityByManLevel = mysql_query($query_chartPQualityByManLevel, $Assessment) 
		or die("rsChartPQualityByManLevel: ".mysql_error());
	
	
	$query_chartPQualityByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( c.code451 ) ) AS QUALITY_P_TAKEN, 
			ROUND( AVG( c.code452 ) ) AS QUALITY_P_SOUGHT  
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY LAS_RANGE ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPQualityByLasRange = mysql_query($query_chartPQualityByLasRange, $Assessment) 
		or die("rsChartPQualityByLasRange: ".mysql_error());

}


if (checkModule('p_coordination')) {
	
	$query_rsChartPCoordByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG(c.code453), 1) AS P_COORD 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY LAS_RANGE ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPCoordByLasRange = mysql_query($query_rsChartPCoordByLasRange, $Assessment) 
		or die("rsChartPCoordByLasRange: ".mysql_error());
	
	$query_rsChartPCoordByGroup = sprintf("SELECT a.assign_group AS `GROUP`, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG(c.code453), 1) AS P_COORD 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND a.assign_group <> '' %s %s 
		GROUP BY a.assign_group ORDER BY a.assign_group ",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPCoordByGroup = mysql_query($query_rsChartPCoordByGroup, $Assessment) 
		or die("rsChartPCoordByGroup: ".mysql_error());
	
	$query_rsChartPCoordByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code453), 1) AS P_COORD 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number ",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPCoordByManLevel = mysql_query($query_rsChartPCoordByManLevel, $Assessment) 
		or die("rsChartPCoordByManLevel: ".mysql_error());
	
	$query_rsChartPCoordByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code453), 1) AS P_COORD 
		FROM  la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s  
		GROUP BY TEST_TIME ORDER BY TEST_TIME",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartPCoordByTestTime = mysql_query($query_rsChartPCoordByTestTime, $Assessment) 
		or die("rsChartPCoordByLasRange: ".mysql_error());

}


if (checkModule('dm_process')) {
	
	$query_rsChartDmpByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG(c.code455), 1) AS DM_SCORE 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s  
		GROUP BY LAS_RANGE ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartDmpByLasRange = mysql_query($query_rsChartDmpByLasRange, $Assessment) 
		or die("rsChartDmpByLasRange: ".mysql_error());
	
	$query_rsChartDmpByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code455), 1) AS DM_SCORE
		FROM la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s  
		GROUP BY TEST_TIME ORDER BY TEST_TIME",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartDmpByTestTime = mysql_query($query_rsChartDmpByTestTime, $Assessment) 
		or die("rsChartDmpByTestTime: ".mysql_error());
	
	$query_rsChartDmpByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG(c.code455), 1) AS DM_SCORE
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE {$finalized} AND d.coded_1 = 1 %s %s  
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartDmpByManLevel = mysql_query($query_rsChartDmpByManLevel, $Assessment) 
		or die("rsChartDmpByManLevel: ".mysql_error());
	
	$query_rsChartDmpByGroup = sprintf("SELECT a.assign_group AS `GROUP`, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code455), 1) AS DM_SCORE
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND a.assign_group <> '' %s %s 
		GROUP BY a.assign_group ORDER BY a.assign_group",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartDmpByGroup = mysql_query($query_rsChartDmpByGroup, $Assessment) 
		or die("rsChartDmpByGroup: ".mysql_error());

}


if (checkModule('collab')) {
	
	$query_rsChartCollabByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code456), 1) AS COLLAB 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY LAS_RANGE ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartCollabByLasRange = mysql_query($query_rsChartCollabByLasRange, $Assessment) 
		or die("rsChartCollabByLasRange: ".mysql_error());

	$query_rsChartCollabByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code456), 1) AS COLLAB 
		FROM  la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s   
		GROUP BY TEST_TIME ORDER BY TEST_TIME",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartCollabByTestTime = mysql_query($query_rsChartCollabByTestTime, $Assessment) 
		or die("rsChartCollabByTestTime: ".mysql_error());
	
	$query_rsChartCollabByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code456), 1) AS COLLAB 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s  
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartCollabByManLevel = mysql_query($query_rsChartCollabByManLevel, $Assessment) 
		or die("rsChartCollabByManLevel: ".mysql_error());
	
	$query_rsChartCollabByGroup = sprintf("SELECT a.assign_group AS `GROUP`, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code456), 1) AS COLLAB 
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
			AND a.assign_group <> ''
		GROUP BY a.assign_group ORDER BY a.assign_group",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartCollabByGroup = mysql_query($query_rsChartCollabByGroup, $Assessment) 
		or die("rsChartCollabByGroup: ".mysql_error());

}


if (checkModule('context')) {

	$query_chartContextByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE 
		FROM  la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s 
		GROUP BY d.test_time ORDER BY d.test_time",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartContextByTestTime = mysql_query($query_chartContextByTestTime, $Assessment) 
		or die("rsChartContextByTestTime: ".mysql_error());
	$totalRows_rsChartContextByTestTime = mysql_num_rows($rsChartContextByTestTime);
	
	
	$query_chartContextByGroup = sprintf("SELECT a.assign_group AS `GROUP`, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE 
		FROM  la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON d.userkey = r.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
			AND a.assign_group <> ''
		GROUP BY a.assign_group ORDER BY a.assign_group",
			$scores_nojournal,
			$filter_instrument_id, 
			$filter_demog);
	$rsChartContextByGroup = mysql_query($query_chartContextByGroup, $Assessment) 
		or die("rsChartContextByGroup: ".mysql_error());
	
	
	$query_chartContextByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE 
		FROM  la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON d.userkey = r.userkey 
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartContextByManLevel = mysql_query($query_chartContextByManLevel, $Assessment) 
		or die("rsChartContextByManLevel: ".mysql_error());
	$totalRows_rsChartContextByManLevel = mysql_num_rows($rsChartContextByManLevel);
	
	
	$query_chartContextByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE 
		FROM  la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s  
		GROUP BY LAS_RANGE 
		ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartContextByLasRange = mysql_query($query_chartContextByLasRange, $Assessment) 
		or die("rsChartContextByTestTime: ".mysql_error());
	$totalRows_rsChartContextByLasRange = mysql_num_rows($rsChartContextByLasRange);

}

//					ALL OF THE SCALES TOGETHER NOW!
if (checkModule('summary')) {
	
	$query_rsChartEverythingByLasRange = sprintf("SELECT {$query_column_las_range}, 
			COUNT(DISTINCT d.lakey) AS N, 
			(ROUND( AVG( c.argumentation_overall ), 1) * 20) AS ARG_OVERALL, 
			ROUND( AVG(c.code451)) AS QUALITY_P_TAKEN, 
			ROUND( AVG(c.code452)) AS QUALITY_P_SOUGHT, 
			ROUND( AVG(c.code453), 1) AS P_COORD, 
			ROUND( AVG(c.code455), 1) AS DM_SCORE,
			ROUND(AVG(c.code456), 1) AS COLLAB,
			ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE
		FROM la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 %s %s  
		GROUP BY LAS_RANGE 
		HAVING CONTEXT_SCORE > 0 
		ORDER BY LAS_RANGE",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartEverythingByLasRange = mysql_query($query_rsChartEverythingByLasRange, $Assessment) 
		or die("rsChartContextByTestTime: ".mysql_error());
	$totalRows_rsChartEverythingByLasRange = mysql_num_rows($rsChartEverythingByLasRange);
	
	$query_rsChartEverythingByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			(ROUND( AVG( c.argumentation_overall ), 1) * 20) AS ARG_OVERALL, 
			ROUND( AVG(c.code451)) AS QUALITY_P_TAKEN, 
			ROUND( AVG(c.code452)) AS QUALITY_P_SOUGHT, 
			ROUND( AVG(c.code453), 1) AS P_COORD, 
			ROUND( AVG(c.code455), 1) AS DM_SCORE,
			ROUND( AVG(c.code456), 1) AS COLLAB,
			ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE
		FROM la_data d 
			JOIN la_data d2 ON d2.userkey = d.userkey AND d2.lakey <> d.lakey AND d.test_time <> d2.test_time
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.coded_1 = 1 AND d2.finalized >= 1 AND d2.coded_1 = 1
			AND (d.instrument_id = '{$instrument_id_base}'
			 OR d.instrument_id = '{$instrument_id_base}_JOURNAL') 
			AND (d2.instrument_id = '{$instrument_id_base}'
			 OR d2.instrument_id = '{$instrument_id_base}_JOURNAL')
			%s %s  
		GROUP BY test_time 
		ORDER BY test_time",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartEverythingByTestTime = mysql_query($query_rsChartEverythingByTestTime, $Assessment) 
		or die("rsChartEverythingByTestTime: ".mysql_error());
	$totalRows_rsChartEverythingByTestTime = mysql_num_rows($rsChartEverythingByTestTime);
	
	$query_rsChartEverythingByManLevel = sprintf("SELECT 
			mlg.man_level_general_name AS MAN_LEVEL, COUNT(DISTINCT d.lakey) AS N, 
			(ROUND( AVG( c.argumentation_overall ), 1) * 20) AS ARG_OVERALL, 
			ROUND( AVG(c.code451)) AS QUALITY_P_TAKEN, 
			ROUND( AVG(c.code452)) AS QUALITY_P_SOUGHT, 
			ROUND( AVG(c.code453), 1) AS P_COORD, 
			ROUND( AVG(c.code455), 1) AS DM_SCORE,
			ROUND( AVG(c.code456), 1) AS COLLAB,
			ROUND( AVG(c.code454), 1) AS CONTEXT_SCORE
		FROM  la_data d 
			JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
			JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
		WHERE {$finalized} AND d.coded_1 = 1 %s %s 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number",
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsChartEverythingByManLevel = mysql_query($query_rsChartEverythingByManLevel, $Assessment) 
		or die("rsChartEverythingByManLevel: ".mysql_error());
	$totalRows_rsChartEverythingByManLevel = mysql_num_rows($rsChartEverythingByManLevel);
	
}

if (checkModule('levels_tasks')) {
	
	// Query for old NSA complexity gap results
	$query_rsChartOldLect = sprintf("SELECT man_level AS MAN_LEVEL, n AS N, lasnumber AS LASNUMBER 
		FROM la_ldma_olddata ORDER BY man_level_number ", 
			SQLstr($userkey, "int"));
	$rsChartOldLect = mysql_query($query_rsChartOldLect, $Assessment) or 
		die("rsChartOldLect: ".mysql_error());
	
	// Query for all live complexity gap results
	$query_chartAllLectByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
		COUNT(d.lakey) AS N, 
		ROUND( AVG( s.lasnumber_1 ), 2) AS LASNUMBER 
		FROM la_data d 
		JOIN la_scores s ON d.lakey = s.lakey
		JOIN registrants r ON d.userkey = r.userkey
		JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		WHERE d.finalized >= 1 
		GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
				SQLstr($userkey, "int"));
	$rsChartAllLectByManLevel = mysql_query($query_chartAllLectByManLevel) or die("ERROR loading rsChartLectByManLevel");
}





if (checkModule('lsua_surveys')) {
	
	$query_rsOptimismByTestTime = sprintf("SELECT 
	d.test_time AS TEST_TIME, COUNT(DISTINCT d.lakey) AS N_total, 
	SUM(IF(o.optimismaverage BETWEEN 0 AND 1.24, 1, 0)) AS N_low,
	SUM(IF(o.optimismaverage BETWEEN 1.25 AND 2.49, 1, 0)) AS N_lmid,
	SUM(IF(o.optimismaverage BETWEEN 2.5 AND 3.74, 1, 0)) AS N_hmid,
	SUM(IF(o.optimismaverage BETWEEN 3.75 AND 5, 1, 0)) AS N_high,
	ROUND( AVG( o.optimismaverage ), 1) AS OVERALL_OPTIMISM
	FROM la_data d 
	JOIN la_data d2 ON d2.userkey = d.userkey AND 
		d2.instrument_id = d.instrument_id AND d2.lakey <> d.lakey AND 
		d2.finalized >= 1 AND d2.finalized <> 3 AND d.test_time <> d2.test_time
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN registrants r ON d.userkey = r.userkey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s 
	GROUP BY d.test_time ORDER BY d.test_time",
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsOptimismByTestTime = mysql_query($query_rsOptimismByTestTime, $Assessment) 
		or die("rsOptimismByTestTime: ".mysql_error());
	$totalRows_rsOptimismByTestTime = mysql_num_rows($rsOptimismByTestTime);
	
	
	$query_rsOptimismOverall = sprintf("SELECT COUNT(DISTINCT d.lakey) AS N_total, 
	ROUND( AVG( o.optimismaverage ), 1) AS OVERALL_OPTIMISM
	FROM la_data d 
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN registrants r ON d.userkey = r.userkey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s ",
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsOptimismOverall = mysql_query($query_rsOptimismOverall, $Assessment) 
		or die("rsOptimismByTestTime: ".mysql_error());
	$row_rsOptimismOverall = mysql_fetch_assoc($rsOptimismOverall);
	$totalRows_rsOptimismOverall = mysql_num_rows($rsOptimismOverall);
	//topher($query_rsOptimismOverall);
	
	
	$query_rsChartOptByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
	COUNT(DISTINCT d.lakey) AS N, 
	ROUND( AVG( o.optimismaverage ), 1) AS OPT_OVERALL 
	FROM la_data d 
	JOIN la_data d2 ON d2.userkey = d.userkey AND 
		d2.instrument_id = d.instrument_id AND d2.lakey <> d.lakey AND 
		d2.finalized >= 1 AND d2.finalized <> 3 AND d.test_time <> d2.test_time
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN registrants r ON d.userkey = r.userkey  
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s  
	GROUP BY d.test_time ORDER BY d.test_time", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartOptByTestTime = mysql_query($query_rsChartOptByTestTime, $Assessment) 
		or die("rsChartOptByTestTime: ".mysql_error());
	$totalRows_rsChartOptByTestTime = mysql_num_rows($rsChartOptByTestTime);
	
	
	$query_rsChartOptByManLevel = sprintf("SELECT mlg.man_level_general_name AS MAN_LEVEL, 
	COUNT(DISTINCT d.lakey) AS N, 
	ROUND( AVG( o.optimismaverage ), 1) AS OPT_OVERALL 
	FROM la_data d 
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN registrants r ON d.userkey = r.userkey
	JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s  
	GROUP BY mlg.man_level_number ORDER BY mlg.man_level_number", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartOptByManLevel = mysql_query($query_rsChartOptByManLevel, $Assessment) 
		or die("rsChartOptByManLevel: ".mysql_error());
	
	
	$query_rsChartOptByLasRange = sprintf("SELECT ".$query_column_las_range.", 
	COUNT(DISTINCT d.lakey) AS N, 
	ROUND( AVG( o.optimismaverage ), 1) AS OPT_OVERALL 
	FROM la_data d 
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN la_scores s ON d.lakey = s.lakey
	JOIN registrants r ON d.userkey = r.userkey
	WHERE {$finalized} %s %s 
	GROUP BY LAS_RANGE ORDER BY LAS_RANGE", 
		$filter_instrument_id,
		$filter_demog);
	$rsChartOptByLasRange = mysql_query($query_rsChartOptByLasRange, $Assessment) 
		or die("rsChartOptByLasRange: ".mysql_error());
	
	
	$query_rsChartOptByGroup = sprintf("SELECT r.group AS `GROUP`, COUNT(DISTINCT d.lakey) AS N, 
	ROUND( AVG( o.optimismaverage ), 1) AS OPT_OVERALL 
	FROM la_data d 
	JOIN optimismsurvey o ON d.lakey = o.lsuakey 
	JOIN registrants r ON d.userkey = r.userkey
	LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} AND r.group <> '' %s %s 
	GROUP BY r.group ORDER BY r.group", 
		$scores_nojournal,
		$filter_instrument_id,
		$filter_demog);
	$rsChartOptByGroup = mysql_query($query_rsChartOptByGroup, $Assessment) 
		or die("rsChartOptByLasRange: ".mysql_error());
	$totalRows_rsChartOptByGroup = mysql_num_rows($rsChartOptByGroup);
	
	$query_rsCharacterOverTime = sprintf("SELECT d.test_time, 
	AVG(ch.persistenceaverage) AS persistence, 
	AVG(ch.learneraverage) AS learner, 
	AVG(ch.integrityaverage) AS integrity, 
	AVG(ch.emotionaverage) AS emotion, 
	AVG(ch.challengeaverage) AS challenge
	FROM  la_data d 
	JOIN la_data d2 ON d2.userkey = d.userkey AND 
		d2.instrument_id = d.instrument_id AND d2.lakey <> d.lakey AND 
		d2.finalized >= 1 AND d2.finalized <> 3 AND d.test_time <> d2.test_time
	JOIN charactersurvey ch ON d.lakey = ch.lsuakey
	JOIN registrants r ON d.userkey = r.userkey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s  
	GROUP BY d.test_time ORDER BY d.test_time", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsCharacterOverTime = mysql_query($query_rsCharacterOverTime, $Assessment) 
		or die("rsCharacterOverTime: ".mysql_error());
	$row_rsCharacterOverTime = mysql_fetch_assoc($rsCharacterOverTime);
	$totalRows_rsCharacterOverTime = mysql_num_rows($rsCharacterOverTime);
	
	
	$query_rsCharOverall = sprintf("SELECT 
	ROUND( AVG(ch.persistenceaverage), 1) AS persistence, 
	ROUND( AVG(ch.learneraverage), 1) AS learner, 
	ROUND( AVG(ch.integrityaverage), 1) AS integrity, 
	ROUND( AVG(ch.emotionaverage), 1) AS emotion, 
	ROUND( AVG(ch.challengeaverage), 1) AS challenge
	FROM  la_data d 
	JOIN charactersurvey ch ON d.lakey = ch.lsuakey
	JOIN registrants r ON d.userkey = r.userkey 
	LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
	WHERE {$finalized} %s %s ", 
			$scores_nojournal,
			$filter_instrument_id,
			$filter_demog);
	$rsCharOverall = mysql_query($query_rsCharOverall, $Assessment) 
		or die("rsCharacterOverTime: ".mysql_error());
	$row_rsCharOverall = mysql_fetch_assoc($rsCharOverall);
	$totalRows_rsCharOverall = mysql_num_rows($rsCharOverall);
	
}




if (checkModule('sms_score')) {
	
	$sql_rsChartSmsByTime = sprintf("SELECT d.test_time AS TEST_TIME, 
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( sd.result_avg_page1 ), 1) AS SMS_SCORE 
		FROM  la_data d 
			LEFT JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN la_survey_data sd ON d.lakey = sd.lakey
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.instrument_id = %s %s %s 
		GROUP BY d.test_time ORDER BY d.test_time",
			$scores_nojournal,
			SQLstr($instrument_id, 'text'),
			$filter_instrument_id,
			$filter_demog);
	$rsChartSmsByTime = mysql_query($sql_rsChartSmsByTime) or die("rsChartSmsByTime: ".mysql_error());
	// topher($sql_rsChartSmsByTime); topher();
	
	$sql_rsChartSmsByGroup = sprintf("SELECT a.assign_group AS `GROUP`,
			COUNT(DISTINCT d.lakey) AS N, 
			ROUND( AVG( sd.result_avg_page1 ), 1) AS SMS_SCORE 
		FROM  la_data d 
			LEFT JOIN la_codes c ON d.lakey = c.lakey 
			LEFT JOIN la_scores s ON d.lakey = s.lakey %s 
			JOIN la_survey_data sd ON d.lakey = sd.lakey
			LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
			JOIN registrants r ON r.userkey = d.userkey 
		WHERE {$finalized} AND d.instrument_id = %s %s %s 
		GROUP BY a.assign_group ORDER BY a.assign_group",
			$scores_nojournal,
			SQLstr($instrument_id, 'text'),
			$filter_instrument_id,
			$filter_demog);
	$rsChartSmsByGroup = mysql_query($sql_rsChartSmsByGroup) or die("rsChartSmsByGroup: ".mysql_error());
	// topher($sql_rsChartSmsByGroup); topher();
	
}







/**** 		 						DOWNLOAD LINK			
	Downloads all (incl. journals) data to a CSV file. */

if ( isset($_GET['download']) && $_GET['download'] == "all" ) {
	
	$extra_cols_demogs = "";
	$extra_cols_scores = "";
	
	if ($userkey == 2021) { $extra_cols_demogs = " r.alt_userid AS user_id, d.decimal, "; }
	if ($instrument_id_base == "LDMA") { $extra_cols_scores .= "
			ROUND( AVG(c.code451)) AS perspective_taking_score, 
			ROUND( AVG(c.code452)) AS perspective_seeking_score, 
			ROUND( AVG(c.code453), 1) AS perspective_coordination, 
			ROUND( AVG(c.code455), 1) AS decision_making_score,
			ROUND( AVG(c.code456), 1) AS collab_capacity_score,
			ROUND( AVG(c.code454), 1) AS context_thinking_score, ";
	}
	if (strpos(" LDMA LDMA_JOURNAL LSUA_JOURNAL LLRA_JOURNAL LRJA_JOURNAL LERA_JOURNAL", 
			$instrument_id)) { 
		$extra_cols_demogs .= " m.man_level AS 'management level', 
			mlg.man_level_general_name AS 'adjusted man level', d.edukey, edu.edu_level, ";
	}
	if (strpos(" LDMA LDMA_JOURNAL LLRA_JOURNAL LRJA_JOURNAL LERA_JOURNAL SMA SMJ ", 
			$instrument_id)) { 
		$extra_cols_scores .= " ROUND(c.argumentation_overall, 1) AS argumentation, ";
	}
	if ($instrument_id == "SMJ") { 
		$extra_cols_scores .= " 
			ROUND(IF(c.code481 > 0, c.code481, NULL), 1) AS score_student_mindfulness, 
			ROUND(IF(c.code482 > 0, c.code482, NULL), 1) AS score_teacher_mindfulness, 
			ROUND(IF(c.code483 > 0, c.code483, NULL), 1) AS score_teacher_connect_wellbeing, ";
	}
	
	// Decide where the Score column value should come from
	$scorecol = "";
	if ($instrument_id == "LDMA") { $scorecol = "s.lasnumber_1"; }
	if ($instrument_id == "LLRA_JOURNAL" OR $instrument_id == "LIMA") { $scorecol = "c.code493"; }
	if ($instrument_id == "LERA_JOURNAL" OR $instrument_id == "LRJA_JOURNAL" 
			OR $instrument_id == "SMA") { $scorecol = "c.code491"; }
	if ($instrument_id == "SMS") { $scorecol = "sd.result_avg_page1"; }
	if ($scorecol <> "") { $extra_cols_scores .= "ROUND({$scorecol}, 2) AS 'overall_score', "; }
	
	// now run the download query (inserting the prepared SQL).
	$sql_see_all = sprintf("d.resellerkey = %s AND ", SQLstr($userkey, "int"));
	if ($see_all) { $sql_see_all = ""; }
	$query_rsDownload = sprintf("SELECT 
		r.firstname, r.lastname, r.group AS current_group,
		{$extra_cols_demogs} 
		d.instrument_id, d.test_time, COUNT(DISTINCT d_all.lakey) AS num_test_times_taken,
		d.date_completed, a.assign_group AS group_when_taken,
		IF(d.bc_allowedtoview = 1, 'yes', 'Permission denied') AS 'permission to view', 
		{$extra_cols_scores} ''
	FROM la_data d
		JOIN registrants r 						ON d.userkey = r.userkey
		LEFT JOIN la_codes c 					ON d.lakey = c.lakey AND d.bc_allowedtoview = 1
		LEFT JOIN la_scores s 				ON d.lakey = s.lakey AND d.bc_allowedtoview = 1 {$scores_nojournal}
		LEFT JOIN la_survey_data sd 	ON d.lakey = sd.lakey AND d.bc_allowedtoview = 1
		LEFT JOIN la_assignments a    ON d.assignmentkey = a.assignmentkey
		LEFT JOIN demogs_man_level m 	ON d.manlevelkey = m.manlevelkey
		LEFT JOIN demogs_man_level_general mlg ON d.manlevel_gen_adjusted = mlg.manlevelgeneralkey 
		LEFT JOIN demogs_edu edu ON d.edukey = edu.edukey
		LEFT JOIN la_data d_all ON d.userkey = d_all.userkey AND d_all.finalized IN (1, 2)
			AND d_all.instrument_id LIKE %s
	WHERE %s d.userkey = r.userkey 
		AND %s %s %s
	GROUP BY d.lakey 
	ORDER BY r.group ",
		SQLstr("{$instrument_id_base}%", 'text'),
		$sql_see_all,
		$finalized, 
		$filter_instrument_id, 
		$filter_demog);
	
	// topher("= ".$query_rsDownload); topher();
	$rsDownload = mysql_query($query_rsDownload) or die("rsDownload: ".mysql_error());
	downloadData($rsDownload, date('Y-m-d')."_".$instrument_id."_results" );
	
}


if ( isset($_GET['download']) && $_GET['download'] == "alleight" ) {
	
	mysql_select_db($database_Assessment, $Assessment);
	$query_rsDownload = sprintf("SELECT r.userkey, r.firstname, r.lastname, r.group, 
			s1.lasnumber_1 AS ldma_1, 
			c4.code493 AS llra, 
			c5.code491 AS lrja, 
			c6.code491 AS lera, 
			s8.lasnumber_1 AS ldma_4
		FROM registrants r
			LEFT JOIN la_data d1 ON d1.userkey = r.userkey AND d1.instrument_id = 'LDMA' 
				AND d1.test_time = 1 AND d1.finalized > 0 AND d1.bc_allowedtoview = 1
			LEFT JOIN la_scores s1 ON d1.lakey = s1.lakey 
			# LSUA (#2) is out
			# LDMA_JOURNAL (#3) is out
			LEFT JOIN la_data d4 ON r.userkey = d4.userkey AND d4.instrument_id = 'LLRA_JOURNAL' 
				AND d4.finalized > 0 AND d4.bc_allowedtoview = 1
			LEFT JOIN la_codes c4 ON d4.lakey = c4.lakey
			LEFT JOIN la_data d5 ON r.userkey = d5.userkey AND d5.instrument_id = 'LRJA_JOURNAL' 
				AND d5.finalized > 0 AND d5.bc_allowedtoview = 1
			LEFT JOIN la_codes c5 ON d5.lakey = c5.lakey
			LEFT JOIN la_data d6 ON r.userkey = d6.userkey AND d6.instrument_id = 'LERA_JOURNAL' 
				AND d6.finalized > 0 AND d6.bc_allowedtoview = 1
			LEFT JOIN la_codes c6 ON d6.lakey = c6.lakey
			# LDMA_JOURNAL (#7) is out
			LEFT JOIN la_data d8 ON d8.userkey = r.userkey AND d8.instrument_id = 'LDMA' 
				AND d8.test_time = 4 AND d8.finalized > 0 AND d8.bc_allowedtoview = 1
			LEFT JOIN la_scores s8 ON d8.lakey = s8.lakey 
		WHERE %s AND d8.finalized > 0
		GROUP BY r.userkey
		ORDER BY r.group, r.lastname",
			($see_all == true ? "1=1" : "d1.resellerkey = ".SQLstr($userkey, 'int')));
	
	// topher("= ".$query_rsDownload); topher();
	$rsDownload = mysql_query($query_rsDownload) or die("rsDownload: ".mysql_error());
	downloadData($rsDownload, date('Y-m-d')."_all8_results" );
	
}











?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/assess3.dwt.php" codeOutsideHTMLIsLocked="false" -->

<head>

<link href='https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic' rel='stylesheet' type='text/css'>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- InstanceBeginEditable name="doctitle" -->
<title>DTS: <?php echo $instrument_id_name; ?> summary report</title>
<!-- InstanceEndEditable -->
<!-- InstanceBeginEditable name="head" -->



<script src="../includes/jquery.js" type="text/javascript"></script>
<script src="../includes/jquery.ui.js" type="text/javascript"></script>
<link href="../includes/js_res/jquery.ui.smoothness.css" rel="stylesheet" type="text/css" />
<script src="../includes/jquery.dotimeout.js" type="text/javascript"></script>
<script src="../includes/highcharts.js" type="text/javascript"></script>
<script src="../includes/highcharts_export.js" type="text/javascript"></script>

<script src="../SpryAssets/SpryTabbedPanels.js" type="text/javascript"></script>
<script src="../SpryAssets/SpryValidationSelect.js" type="text/javascript"></script>
<script src="../SpryAssets/SpryCollapsiblePanel.js" type="text/javascript"></script>
<link href="../SpryAssets/SpryTabbedPanelsVertical.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssets/SpryValidationSelect.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
$(document).ready(function() {
	
	$('#filter_header').click(function(){
		$('#filter_box').toggle(200).doTimeout('animate', 250, function(){
			$(window).scroll();
		});
	});
	
	// Add instrument-specific class to each <a> link
	$('a').addClass('a-<?php echo strtolower($instrument_id_base); ?>');
	
	$('.date').datepicker({ 
		dateFormat: 'yy-mm-dd', 
		numberOfMonths: 1,
		showOtherMonths: true,
		selectOtherMonths: true
	});
	
});
</script>

<style type="text/css">

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table {
	margin-top: 0px;
}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 h2 {
	margin-top: 0px;
}

/* TableBarGraph = for the horizontal HTML bar graphs. */

.TableBarGraph {
	line-height: 0px;
	margin-bottom: 0px;
	padding-bottom: 4px;
	width: 100%;
}

.TableBarGraph tr {
	padding-top: 4px;
	padding-bottom: 4px;
}

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel2 {
	margin-right: 0px;
	margin-left: 0px;
}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td h2 {
	margin-top: 0px;
}


.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel2 {
	margin-top: 40px;
	margin-bottom: 30px;
}

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel3 {
	margin-top: 40px;
	margin-bottom: 30px;
}

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel4 {
	margin-top: 40px;
	margin-bottom: 30px;
}

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel5 {
	margin-top: 40px;
	margin-bottom: 30px;
}

.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel6 {
	margin-top: 40px;
	margin-bottom: 30px;
}







.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td table tr td h4 {
	margin-top: 8px;
	margin-bottom: 0px;
}

.TabbedPanelsContent {
	width: 570px; 
}


/* Colors for H2 and the tabbed panel background */
<?php 
$instrColor = $chart_colors[$instrument_id_base];
$instrColor = substr($instrColor, 0, strpos($instrColor, " "));
if ($instrColor <> "") { 
	?>
	
	.TabbedPanelsContent h2 {
		color: #<?php echo $instrColor; ?>;
	}
	
	.VTabbedPanels .TabbedPanelsTabSelected {
		background-color: #<?php echo $instrColor; ?>;
	}

	<?php 
} ?>


</style>





<link href="../SpryAssets/SpryCollapsiblePanel.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssets/SpryValidationTextField.css" rel="stylesheet" type="text/css" />
<!-- InstanceEndEditable -->

<?php
$img_header = "DTSheader880.jpg";
if (isset($_SESSION['instrument_id'])) { $img_header = $_SESSION['instrument_id']."header880.jpg"; }
?>

<style type="text/css"> 
<!-- 
body  {
	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0; /* this centers the container in IE 5* browsers. The text is then set to the left aligned default in the #container selector */
	color: #333333;
	background-color: #FFF;
}
.twoColFixRtHdr #header {
	background-image: url(/_images/skin/backgrounds/<?php echo $_SESSION['instrument_id']; ?>_background.png);
	background-repeat: repeat;
	background-color: #93CCCB;
	height: 74px;
} 
--> 
--> 
</style>
<!--[if IE 5]>
<style type="text/css"> 
/* place css box model fixes for IE 5* in this conditional comment */
.twoColFixRtHdr #sidebar1 { width: 220px; }
</style>
<![endif]--><!--[if IE]>

<style type="text/css"> 
/* place css fixes for all versions of IE in this conditional comment */
.twoColFixRtHdr #sidebar1 { padding-top: 30px; }
.twoColFixRtHdr #mainContent { zoom: 1; }
/* the above proprietary zoom property gives IE the hasLayout it needs to avoid several bugs */
</style>
<![endif]-->

<link href="/_css/template.css" rel="stylesheet" type="text/css" />
<link href="/_css/template_assess3.css" rel="stylesheet" type="text/css" />

</head>

<body class="twoColFixRtHdr">

<div id="header">
	<?php if (isset($_SESSION['instrument_id'])) { ?>
    <div id="header_logo">
      <p class="uppercase"><?php echo str_replace("_", " ", $_SESSION['instrument_id']); ?></p>
    </div>
	<?php } else { ?>
  	<div class="header1_column1"></div>
  <?php } ?>
</div>

<div id="menu1">
  <h3>
				<?php include("../_includes/navigation/header_1a.html"); ?>
				<!-- InstanceBeginEditable name="ExtraMenuItem1" --><!-- InstanceEndEditable -->&nbsp;
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
					<?php if (isset($_SESSION['log_firstname'])) {  ?>
  					You are logged in as <?php echo $_SESSION['log_firstname']." ".$_SESSION['log_lastname'];  } ?></h3>
</div>
	
<div id="container">
<p><!-- InstanceBeginEditable name="menu3" -->
  <?php include 'bc_links.php'; ?>
  <!-- InstanceEndEditable --></p>
<div id="mainContent"> <!-- InstanceBeginEditable name="main" -->
  
    <h1><? echo $instrument_id_base; ?> RESULTS: 
      <? 
			if ($see_all) { ?>ALL CLIENTS
      <? } 
			else if ($row_rsBulkCustomerInfo['company'] <> "") 
			{ echo strtoupper($row_rsBulkCustomerInfo['company']); } 
			else { echo "(Unknown bulk customer)"; } ?>
		</h1>
    	

    <? // **** TURN OFF LDMA REPORTS
    // (REMOVED this for now.)
		if ($instrument_id_base == 'LDMA' AND !WA_Auth_RulePasses('Logged in as coder') AND false) { ?>
			<div class="box width-600">
			  <span class='red'>The LDMA is down for maintenance.</span> 
			  We're sorry for the inconvenience. We expect to be back online on Monday.
	    </div>
			<?
			$instrument_id = '';
			$instrument_id_base = '';
			$module = array(); die();
		} ?>



    <div id="CollapsiblePanel8" class="CollapsiblePanel">
      <div class="CollapsiblePanelTab">DOWNLOADS</div>
      	<div class="CollapsiblePanelContent">
      
      		<div width="600px">
      
        <h3><a href="report_bulkcustomer.php?download=all&filter_demog=<? 
        	echo preg_replace("/\s+/", "^", $filter_demog); ?>">
        <? 
				if ($filter_humanReadable == "") { ?>
        	download all <? echo $instrument_id_name; ?> results <? 
				} else { ?>
        	download results for this search <? 
				} ?></a></strong></h3>
        <p>This link downloads  a .csv spreadsheet of results for <? echo $row_rsImportantResults['count']; ?> records<? echo $filter_humanReadable; ?>. To download only the data from a particular group, first make selections from the options in this box and click &quot;SEARCH&quot;. Then click on this download link.<br />
          The columns in this 
        spreadsheet are:</p>
        <ul>
          <li>The assessment taken</li>
          <li>Test time (for this assessment)</li>
          <li>Date completed</li>
          <li>First name</li>
          <li>Last name </li>
          <li>Management level</li>
          <li>Group (&quot;session&quot;)</li>
          <li>Whether you have permission to view their results</li>
          <li>Lectical score</li>
          <li>Quality of perspective taking</li>
          <li>Quality of perspective seeking</li>
          <li>Argumentation quality</li>
          <li>Contextual thinking score</li>
        </ul>
        
        <? if ($userkey == 1000001053) { ?>
	        <h3><a href="report_bulkcustomer.php?download=alleight">
	        	download scores for all test times</a></strong></h3>
	        <p>This link downloads a .csv file of scores from all 8 test times. 
	        	The columns in this spreadsheet are:</p>
	        <ul>
	          <li>Group</li>
	          <li>First name</li>
	          <li>Last name</li>
	          <li>LDMA 1 score</li>
	          <li>LLRA score</li>
	          <li>LRJA score</li>
	          <li>LERA score</li>
	          <li>LDMA 4 score</li>
	        </ul>
        <? } // ?>
        
        <h3><a href="bc_select.php?download=all">download all test taker status</a></h3>
        <p> This downloads a .csv file of all test takers' completion status. This download does not contain results. <br />
          The columns in this spreadsheet are: </p>
        <ul>
          <li>First name</li>
          <li>Last name</li>
          <li>Group (&quot;session&quot;) </li>
          <li>Branch</li>
          <li>Department</li>
          <li>Supervisor</li>
          <li>Management  level</li>
          <li>Assigned to (which assessment)</li>
          <li>Assignment start date</li>
          <li>Assignment end date</li>
          <li>Existing record found (if any)</li>
          <li>Date the existing record was created</li>
          <li>This person's completion status for this assignment </li>
          </ul>
        <p>&nbsp;</p>
        </div>
      
      </div>
    </div>
    <p>
      <? /**** Commenting out the instrument_id-switch link, since we'll only have 1 report.
		 | <a href="../set_session_var_instrument.php?link_id=la_reports/report_bulkcustomer.php&sessionVarName=instrument_id&amp;sessionVarValue=<? 
		if ($type == "test") { 
			echo $instrument_id."_JOURNAL"; ?>">VIEW REPORT ON <? 
			echo $instrument_id; ?> JOURNALS</a><? 
		} else { 
			echo $instrument_id_base; ?>">VIEW REPORT ON SCORED <? 
			echo $instrument_id; ?>S</a><? 
		} */ ?>
    
    
    
    
    
    <h3><a id="filter_header" style="cursor:pointer; ">FILTER RESULTS</a></h3>
      
      <div id="filter_box" style="display: none; ">
      <table border="0">
    <form id="form1" name="form1" method="post" action="?q=1<? 
			if (isset($_GET['userkey'])) { echo "&userkey=".$_GET['userkey']; } 
      if (isset($_GET['printerv']) AND $_GET['printerv'] == "yes") { 
      	echo "&printerv=yes"; } ?>">
      
      <? // initialize all POST values to avoid errors
			$post_items = array("resellerkey", "projectkey", "assignmentkey", 
				"date_completed_gt", "date_completed_lt",
				"las_range_low", "las_range_high", "test_time", "all_times_present",
				"assessments_taken_min", "assessments_taken_max", "management_level_select",
				"group", "sexkey");
			for ($i = 0; isset($post_items[$i]); $i ++) { 
				if (!isset($_POST[$post_items[$i]])) { $_POST[$post_items[$i]] = ""; }
			} ?>
      
        <? if ($see_all) { ?>
        <tr>
          <td>Client</td>
          <td>
            <select name="resellerkey" class="pulldown_width_150" id="resellerkey">
              <option value="" <? if($_POST['resellerkey'] == "") 
							{ echo "selected='selected'"; } ?>> - view all - </option>
              <? while ($row = mysql_fetch_assoc($rsFilterBc)) { ?>
              <option value="<? echo $row['bulkuserkey']?>" 
								<? if($_POST['resellerkey'] == $row['bulkuserkey']) 
                { echo "selected='selected'"; } ?>><? 
                echo $row['bulkcustomer'].
                " &nbsp; (".$row['numpeople'].")"; ?></option>
              <? } ?>
            </select>
          </td>
        </tr>
        <? } // ?>
        <? if (mysql_num_rows($rsFilterProjects) > 0) { ?>
        <tr>
          <td>Project</td>
          <td>
          	<select name="projectkey" class="pulldown_width_150" id="projectkey">
	            <option value="" <? if($_POST['projectkey'] == "") 
								{ echo "selected=\"selected\""; } ?>> - view all - </option>
	            <? while ($row = mysql_fetch_assoc($rsFilterProjects)) { ?>
	            <option value="<? echo $row['projectkey']?>" 
	          	<? if($_POST['projectkey'] == $row['projectkey']) 
							{ echo "selected=\"selected\""; } ?>><? 
								echo $row['company']." → ".$row['projectid'].
							" &nbsp; (".$row['numpeople'].")"; ?></option>
	            <? } ?>
          </select></td>
        </tr>
        <? } // ?>
        <tr>
          <td>Assignment</td>
          <td>
            <select name="assignmentkey" class="pulldown_width_150" id="assignmentkey">
              <option value="" <? if($_POST['assignmentkey'] == "") 
							{ echo "selected='selected'"; } ?>> - view all - </option>
              <? while ($row = mysql_fetch_assoc($rsFilterAssn)) { ?>
              <option value="<? echo $row['assignmentkey']?>" 
								<? if($_POST['assignmentkey'] == $row['assignmentkey']) 
                { echo "selected='selected'"; } ?>><? 
                if ($see_all) { echo $row['company']." → "; }
								$date_start = strtotime($row['date_start']);
								$date_end = strtotime($row['date_end']);
								echo $row['assign_group'].", ".$row['instrument_id'].
									" from ".date('M jS', $date_start).
									(date('Y', $date_start) <> date('Y') ? ", ".date('Y', $date_start) : "").
									" to ".date('M jS', $date_end).
									(date('Y', $date_end) <> date('Y') ? ", ".date('Y', $date_end) : "").
                	" &nbsp; (".$row['numpeople'].")"; ?></option>
              <? } ?>
            </select>
          </td>
        </tr>

        <? if ($userkey == 1000000083) { ?>
        	<tr>
        		<td></td>
        		<td>
        			<input type='checkbox' name='limit_to_solloway_groups' value='1'
        				<? if (isset($_POST['limit_to_solloway_groups'])) { echo "checked='checked'"; } ?> />
        			Only show students from my classes (summer, fall, or spring 2012 or 2013)<br>
        			<input type='checkbox' name='limit_to_not_solloway_groups' value='1'
        				<? if (isset($_POST['limit_to_not_solloway_groups'])) { echo "checked='checked'"; } ?> />
        			Only show students from OTHER teachers' classes (summer, fall, or spring 2012 or 2013)<br>
        		</td> 
        	</tr>
        <? } ?>

        <? if (mysql_num_rows($rsFilterLas) > 1) { ?>
	        <tr>
	          <td>Lectical range</td>
	          <td>
		          <select name="las_range_low" id="las_range_low">
		            <option value="">---</option>
		            <? while ($row = mysql_fetch_assoc($rsFilterLas)) { ?>
		            	<option value="<? echo $row['lasnumber_1']?>" <? 
										if ($_POST['las_range_low'] == $row['lasnumber_1']) { echo "selected='selected'"; } 
										?>><? echo $row['lasnumber_1'];?></option>
		            <? } 
								mysql_data_seek($rsFilterLas, 0); ?>
		          </select>
	          	to 
		          <select name="las_range_high" id="las_range_high">
		            <option value="">---</option>
		            <? while ($row = mysql_fetch_assoc($rsFilterLas)) { ?>
		              <option value="<? echo $row['lasnumber_1']?>" <? 
		                if ($_POST['las_range_low'] == $row['lasnumber_1']) { echo "selected='selected'"; } 
		                ?>><? echo $row['lasnumber_1'];?></option>
		            <? } 
		            mysql_data_seek($rsFilterLas, 0); ?>
		          </select>
	          </td>
	        </tr>
	      <? } ?>
	      
        <tr>
          <td>Date completed</td>
          <td>
          	from 
	          <input type="text" class='date' id="date_completed_gt" name="date_completed_gt" size="11" 
	          	value="<? echo $_POST['date_completed_gt']; ?>" />
	          to 
	          <input type="text" class='date' id="date_completed_lt" name="date_completed_lt" size="11"
	          	value="<? echo $_POST['date_completed_lt']; ?>" />
          </td>
        </tr>
        <tr>
        	<td>Test time(s)</td>
          <td>
          	<input name="test_time" type="text" id="test_time" size="11"
            	value="<? echo $_POST['test_time']; ?>" />
          </td>
        </tr>
        <tr>
        	<td></td>
          <td>
          	<input type="checkbox" name="all_times_present" value="1"
            	<? if ($_POST['all_times_present'] == 1) { echo "checked='checked'"; } ?> />
            	all test times must be present
          </td>
        </tr>
        <tr>
        	<td>total # assessments taken</td>
          <td>
          	from <input name="assessments_taken_min" type="text" size="3"
          		value="<? echo $_POST['assessments_taken_min']; ?>" />
          	to <input name="assessments_taken_max" type="text" size="3" 
            	value="<? echo $_POST['assessments_taken_max']; ?>" /></td>
        </tr>
        <tr>
          <td>Management level</td>
          <td>
	          <select name="management_level_select" class="pulldown_width_150" id="management_level_select">
	            <option value="">- select one -</option>
	            <? while ($row = mysql_fetch_assoc($rsFilterManLevels)) { ?>
	            	<option value="<? echo $row['manlevelkey']; ?>" 
	              	<? if ($_POST['management_level_select'] == $row['manlevelkey']) 
										{ echo "selected='selected'"; } ?>>
									<? echo $row['man_level']." &nbsp; (".$row['numpeople'].")";?></option>
	            <? } ?>
	          </select>
          </td>
        </tr>
        <tr>
          <td>Group </td>
          <td>
	          <select name="group" class="pulldown_width_080" id="group">
	            <option value="">---</option>
	            <? while ($row = mysql_fetch_assoc($rsFilterGroup)) { ?>
	              <option value="<? echo $row['group']?>"
	              	<? if ($_POST['group'] == $row['group']) { echo "selected='selected'"; } ?>>>
	              <? echo $row['group']." &nbsp; (".$row['numpeople'].")";?></option>
	            <? } ?>
	          </select>
          </td>
        </tr>
        <tr>
          <td>Sex</td>
          <td>
          <select name="sexkey" class="pulldown_width_080" id="sexkey">
            <option value="">---</option>
            <option value="1" <? if ($_POST['sexkey'] == 1) { echo "selected='selected'"; } ?>>
            	male</option>
            <option value="2" <? if ($_POST['sexkey'] == 2) { echo "selected='selected'"; } ?>>
            	female</option>
          </select>
          </td>
        </tr>
        <tr>
        	<td></td>
          <td align="right">
          <? if ($filter_humanReadable <> "") { ?><a href="report_bulkcustomer.php<? echo (isset($_GET['userkey']) ? "?userkey=".$_GET['userkey'] : ""); ?>">clear search</a>&nbsp;&nbsp; <? } ?>
            <input type="submit" name="SUBMIT" id="SUBMIT" value="SEARCH" />
            <input name="MM_FILTER" type="hidden" value="MM_FILTER" />
          </td>
        </tr>
    </form>
      </table>
      </div>
      
    
    
    
    <p><? 
		
		if ($row_rsImportantResults['count'] < 1) {
			if ($filter_humanReadable == "") {
				?>You do not currently have any finalized records to view. 
        Click on "select reports" above to view unfinalized assessments.<?
			} else {
				?><strong>Your search returned no results.</strong> 
				<a href="report_bulkcustomer.php">clear search</a><?
			}
			
		} else if ($filter_humanReadable == "") { 
    	?>You are viewing information on all <? echo $row_rsImportantResults['count']; ?> records for <? echo $totalRows_rsNumTestTakers; ?> test takers. Click on a tab to view results.<? 
		} else { ?>Your search returned <? echo $row_rsImportantResults['count']; ?> results for 
		<? echo $totalRows_rsNumTestTakers; ?> test takers. 
    Showing results <? echo $filter_humanReadable; ?>.
		<a href="report_bulkcustomer.php">clear search</a><? 
		} ?>
    
    <!-- Dynamic link into / out of printer-friendly page -->
    <p><? 
      if (isset($_GET['printerv']) AND $_GET['printerv'] == "yes") { 
        ?><a href="report_bulkcustomer.php?<? echo $_SERVER['QUERY_STRING']; ?>&printerv=no">
        page by sections</a>
    <? } else { 
        ?><a href="report_bulkcustomer.php?<? echo $_SERVER['QUERY_STRING']; ?>&printerv=yes">
        printer-friendly page</a>
    <? } ?></p>


    
    <div id="TabbedPanels1" class="VTabbedPanels">
      <? /* If you block out the <ul> which serves as the TabbedPanel table of contents, the entire TabbedPanels widget breaks gracefully and the page unfolds in nice printer-friendly format. */
			if (!isset($_GET['printerv']) OR $_GET['printerv'] == "no") { ?>
      <ul class="TabbedPanelsTabGroup">
      	<? if ($boilerplate['client_report_about_'.strtolower($instrument_id_base)] <> "") { ?>
        	<li class="TabbedPanelsTab">About the <? echo $instrument_id_base; ?></li>
				<? } if (checkModule('lectical')) { ?>
        	<li class="TabbedPanelsTab">Lectical levels</li>
        <? } if (checkModule('strengths_written')) { ?>
        	<li class="TabbedPanelsTab">Current strengths</li>
        <? } if (checkModule('strengths_written')) { ?>
        	<li class="TabbedPanelsTab">Potential strengths</li>
        <?	} if (checkModule('llra_qualities')) { ?>
        	<li class="TabbedPanelsTab">Leader qualities</li>
					<? // WRITE THE TAB FOR EACH LEADER QUALITY
					$a = 461; // the starting code slot for leadership qualities
					while ($a <= 480) {
						// If this quality was coded any # of times, then make a tab for it.
						if ($row_rsLlraQualCounts['n_'.$a] > 0) {
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $llra_qual_labels[$a]; 
							if (0) { ?><em>(LLRA QUALITIES tabs)</em><? } 
							?></li><? 
						}
						$a ++;
					}
				?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
        <? } if (checkModule('llra_themes')) { ?>
					<li class="TabbedPanelsTab">Leadership themes</li>
          <? // WRITE THE TAB FOR EACH LEADERSHIP THEME
					$a = 481;
					while ($a <= 490) {
						// If this quality was coded any # of times, then make a tab for it.
						if ($row_rsLlraThemeCounts['n_'.$a] > 0) {
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $llra_theme_labels[$a]; 
							if (0) { ?><em>(LLRA THEMES tabs)</em><? } 
							?></li><?
							
						}
						$a ++;
					}
					?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
        <? } if (checkModule('lrja_themes')) { ?>
					<li class="TabbedPanelsTab">Reflective judgment themes</li>
          <? // WRITE THE TAB FOR EACH RJ THEME
					for ($a = 481; $a <= 490; $a ++) { 
						// If this RJ theme was coded any # of times, then make a tab for it.
						if ($row_rsLrjaThemeCounts['n_'.$a] > 0) {
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $lrja_theme_labels[$a]; 
							if (0) { ?><em>(LRJA THEMES tabs)</em><? } 
							?></li><? 
						}
					}
					?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
        <? } if (checkModule('lrja_scales')) { ?>
        	<li class="TabbedPanelsTab">Reflective judgment scales</li>
          
         <? } if (checkModule('lera_themes')) { ?>
					<li class="TabbedPanelsTab">Ethics themes</li>
          <? // WRITE THE TAB FOR EACH LERA THEME
					for ($a = 481; $a <= 490; $a ++) { 
						// If this LERA theme was coded any # of times, then make a tab for it.
						if ($row_rsLeraThemeCounts['n_'.$a] > 0) {
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $lera_theme_labels[$a]; 
							if (0) { ?><em>(LERA THEMES tabs)</em><? } 
							?></li><? 
						}
					} ?>
          <li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
          
         <? } if (checkModule('ldpa_themes')) { ?>
					<li class="TabbedPanelsTab">DP themes</li>
          <? // WRITE THE TAB FOR EACH DP THEME
					for ($a = 481; $a <= 490; $a ++) { 
						// If this LDPA theme was coded any # of times, then make a tab for it.
						if ($ldpa_theme_titles[$a] <> "") { // $row_rsLdpaThemeCounts['n_'.$a] > 0
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $ldpa_theme_titles[$a]; 
							if (0) { ?><em>(LDPA THEMES tabs)</em><? } 
							?></li><? 
						}
					} ?>
          <li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
          
         <? } if (checkModule('lima_themes')) { ?>
					<li class="TabbedPanelsTab">LIMA themes</li>
          <? // WRITE THE TAB FOR EACH LIMA THEME
					for ($a = 471; $a <= 490; $a ++) { 
						// Add a tab for this theme even if no one was coded for it. 
						// $row_rsLimaThemeCounts['n_'.$a] > 0
						if ($lima_theme_titles[$a] <> "") { 
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $lima_theme_titles[$a]; 
							if (0) { ?><em>(LIMA THEMES tabs)</em><? } 
							?></li><? 
						}
					} ?>
          <li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
          
         <? } if (checkModule('sma_themes')) { ?>
					<li class="TabbedPanelsTab">Mindfulness themes</li>
          <? // WRITE THE TAB FOR EACH SMA THEME
					for ($a = 481; $a <= 490; $a ++) { 
						// If this SMA theme was coded any # of times, then make a tab for it.
						if ($row_rsSmaThemeCounts['n_'.$a] > 0) {
							?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- <? echo $sma_theme_labels[$a]; 
							if (0) { ?><em>(SMA THEMES tabs)</em><? } 
							?></li><? 
						}
					}
					?><li class="TabbedPanelsTab"> &nbsp; &nbsp;- summary</li>
        
        <? } if (checkModule('smj_scores')) { ?>
        	<li class="TabbedPanelsTab">SMJ scores</li>
        <? } if (checkModule('lera_scales')) { ?>
        	<li class="TabbedPanelsTab">Ethics scales</li>
        <? } if (checkModule('perspectives')) { ?>
        	<li class="TabbedPanelsTab">Perspective taking & seeking</li>
        <? } if (checkModule('p_coordination')) { ?>
        	<li class="TabbedPanelsTab">Perspective coordination</li>
        <? } if (checkModule('dm_process')) { ?>
        	<li class="TabbedPanelsTab">Decision-making process</li>
        <? } if (checkModule('collab')) { ?>
        	<li class="TabbedPanelsTab">Collaborative capacity</li>
        <? } if (checkModule('context')) { ?>
        	<li class="TabbedPanelsTab">Contextual thinking</li>
				<? } if (checkModule('lsua_surveys')) { ?>
        	<li class="TabbedPanelsTab">Optimism survey</li>
        <? } if (checkModule('lsua_surveys')) { ?>
        	<li class="TabbedPanelsTab">Character survey</li>
        <? } if (checkModule('sms_score')) { ?>
        	<li class="TabbedPanelsTab">SMS scores</li>
        <? } if (checkModule('argumentation')) { ?>
        	<li class="TabbedPanelsTab">Argumentation</li>
        <? } if (checkModule('levels_tasks')) { ?>
        	<li class="TabbedPanelsTab">Levels and tasks</li>
        <? } if (checkModule('cheating') 
										AND (count($cheater_name) > 0 OR 
												 count($apathete_name) > 0 OR 
												 count($secretive_name) > 0)) { ?>
        	<li class="TabbedPanelsTab">Flagged assessments</li>
        <? } ?>
  		<? } // END IF: if page is NOT in printer-friendly mode ?>
      </ul>
      
      
        <div class="TabbedPanelsContentGroup">
        
      	<? if ($boilerplate['client_report_about_'.strtolower($instrument_id_base)] <> "") { ?>
        <div class="TabbedPanelsContent">												<!-- ABOUT THIS INSTRUMENT -->
					<? echo $boilerplate['client_report_about_'.strtolower($instrument_id_base)]; ?>
    		</div>
        


        <? } if (checkModule('lectical')) { ?>
        <div class="TabbedPanelsContent">												<!-- LECTICAL SCORE RESULTS -->
        	
					<? echo $boilerplate['client_report_lectical_intro']; ?>
        
          <? // CHART: Lectical scores by test time
          
          if ($totalRows_rsChartLectByTestTime > 0) { 
            highchart($rsChartLectByTestTime, "Lectical scores by test time", "", 
                    "Test time", "Lectical score", "Time ", 
                    array("TEST_TIME", "N", "LASNUMBER"), "", 10, 13,
        		"https://www.devtestservice.org/images/backgrounds/la_perspective_manlevel_chart_legend.png");
          } ?>
          
          
          <div id="CollapsiblePanel4" class="CollapsiblePanel">
          <? if (checkModule('management')) { ?>
            <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
            <div class="CollapsiblePanelContent">
              <? echo $boilerplate['report_client_manlevel_desc']; ?>
            </div>
          <? } ?>
          </div>
        
					<script type="text/javascript">
          var CollapsiblePanel4 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel4");
          </script>
            
            
          <? 
          if (checkModule('management')) { 
          highchart($rsChartLectByManLevel, "Lectical scores by management level", 
            ($filter_humanReadable == "" ? "Data from all test takers" : "Data from current search"), 
                    "Management level", "Lectical score", "", 
                    array("MAN_LEVEL", "N", "LASNUMBER"), "", 10, 13,
          "https://www.devtestservice.org/images/backgrounds/la_perspective_manlevel_chart_legend.png"); 
          } ?>  
          
          
          <? /* 
          if (mysql_num_rows($rsChartLectByManLevel) > 0) { 
          highchart($rsChartLectByManLevel, "Lectical scores by management level with job complexity", 
            ($filter_humanReadable == "" ? "Data from all test takers" : "Data from current search"), 
                    "Management level", "Lectical score", "", 
                    array("MAN_LEVEL", "N", "LASNUMBER"), "", 10, 13, "https://www.devtestservice.org/images/backgrounds/la_chart_bg_manlevel_task_demands.png");
          } ?>
           
             
             
          <? 
          highchart($rsChartOldLect, "Lectical scores by management level", 
            "Original data from the 2002-2006 NSA study", 
            "Management level", "Lectical score", "", 
            array("MAN_LEVEL", "N", "LASNUMBER"), "", 10, 13, "https://www.devtestservice.org/images/backgrounds/la_chart_bg_manlevel_task_demands.png", 
            "column"); 
					 */ ?>
          
        </div>
        
        <? } if (checkModule('strengths_written')) { ?>
        <div class="TabbedPanelsContent">												<!-- CURRENT STRENGTHS (WRITTEN) -->
        
        <h2> Current strengths</h2>
        
        <? echo $boilerplate['report_bc_sr_intro_lsua']; ?>
        
        <table> 
          <tr class="tablehead_knockout">
            <td align="center">Current strength</td>
            <? // For each result row, print a "Time X" column header.
            while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { ?>
              <td align="center" width="70">Time <? echo $row_rsCountStr['test_time']; ?></td> <? 
            } 
            // then reset the result recordset - re-used 2 more times.
            if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); } ?>
          </tr>
        
        <? 
        // Go through each strength, look up its code frequency
        $total_n = array();
        $currentTheme = ""; // before each group of codes, the theme title is stated.
        ?>
        
          <tr>
            <td></td>
            <? 
            // for each result row (each test time), print the N of total records found
            while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { 
              $total_n[$row_rsCountStr['test_time']] = $row_rsCountStr['N'];
              ?>
              <td align="center">N = <? echo $total_n[$row_rsCountStr['test_time']]; ?></td>
              <? 
            } 
            if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); }
            ?>
          </tr>
        
        <? 
        do { 
          
          // la_codes slot for this code. Used to fetch the count for this code, from the code counts recordset.
          $code_number = str_pad($row_rsCurrentStrengths['code_number'], 3, '0', STR_PAD_LEFT);
          $coded_n = array();	// will be the count for this code, per test time (array slot).
          // for each test time row, get the count for this code.
          while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { 
            $coded_n[$row_rsCountStr['test_time']] = $row_rsCountStr['code'.$code_number];
          }
          if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); }
          
          // to ensure that next($) and current($) work properly
          reset($total_n); reset($coded_n);
          
          // (CANCEL) only show this code row if this code has been coded at some test time
          //if (array_sum($coded_n) > 0) { 
          
          // if there's a new theme, display it first.
          if ($currentTheme <> $row_rsCurrentStrengths['theme']) {
            $currentTheme = $row_rsCurrentStrengths['theme']; ?>
            <tr>
              <td>
                <h4><? echo $currentTheme; ?></h4>
              </td>
            </tr><?
          }
          
          ?>
          <tr>
            <td><? echo str_replace (",", "", $row_rsCurrentStrengths['title']); ?></td> <? 
            do { ?> 
              <td align="center"> <? 
              $this_n = current($coded_n);
              $this_total = current($total_n);
              if ($this_n > 0) { 
                // show the frequency as %, then as N
                echo str_pad(round($this_n*100/$this_total), 2,'0', STR_PAD_LEFT); ?>% 
                (<? echo str_pad($this_n, 2,'0', STR_PAD_LEFT); ?>) <?
              } ?> </td> <? 
              // WHILE loop condition both checks and cycles to the next code values. 
            } while (next($coded_n) AND next($total_n)); ?>
          </tr> <? 
          //}
        } while ($row_rsCurrentStrengths = mysql_fetch_assoc($rsCurrentStrengths)); 
        ?>
        </table>
          
        </div>
          
        <? } if (checkModule('strengths_written')) { ?>
        <div class="TabbedPanelsContent">												<!-- POTENTIAL STRENGTHS (WRITTEN) -->
              
        <h2>Potential strengths</h2>
        
        <? echo $boilerplate['report_bc_sr_intro_lsua']; ?>
        
        <table> 
          <tr class="tablehead_knockout">
            <td align="center">Potential strength</td>
            <? // For each result row, print a "Time X" column header.
            while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { ?>
              <td align="center" width="70">Time <? echo $row_rsCountStr['test_time']; ?></td> <? 
            } 
            // then reset the result recordset - re-used 2 more times.
            if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); } ?>
          </tr>
        
        <? 
        // Go through each strength, look up its code frequency
        $total_n = array();
        $currentTheme = ""; // before each group of codes, the theme title is stated.
        ?>
        
          <tr>
            <td></td>
            <? 
            // for each result row (each test time), print the N of total records found
            while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { 
              $total_n[$row_rsCountStr['test_time']] = $row_rsCountStr['N'];
              ?>
              <td align="center">N = <? echo $total_n[$row_rsCountStr['test_time']]; ?></td>
              <? 
            } 
            if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); }
            ?>
          </tr>
        
        <?
        
        do { 
          
          // la_codes slot for this code. Used to fetch the count for this code, from the code counts recordset.
          $code_number = str_pad($row_rsPotentialStrengths['code_number'], 3, '0', STR_PAD_LEFT);
          $coded_n = array();	// will be the count for this code, per test time (array slot).
          // for each test time row, get the count for this code.
          while ($row_rsCountStr = mysql_fetch_assoc($rsCountStr)) { 
            $coded_n[$row_rsCountStr['test_time']] = $row_rsCountStr['code'.$code_number];
          }
          if ($totalRows_rsCountStr > 0) { mysql_data_seek($rsCountStr, 0); }
          
          // to ensure that next($) and current($) work properly
          reset($total_n); reset($coded_n);
          
          // if there's a new theme, display it first.
          if ($currentTheme <> $row_rsPotentialStrengths['theme']) {
            $currentTheme = $row_rsPotentialStrengths['theme']; ?>
            <tr>
              <td>
                <h4><? echo $currentTheme; ?></h4>
              </td>
            </tr><?
          }
          
          // (CANCEL) only show this code row if this code has been coded at some test time
          //if (array_sum($coded_n) > 0) { ?>
          <tr>
            <td><? echo str_replace (",", "", $row_rsPotentialStrengths['title']); ?></td> <? 
            do { ?>
              <td align="center"> <? 
              $this_n = current($coded_n);
              $this_total = current($total_n);
              if ($this_n > 0) { 
                // show the frequency as %, then as N
                echo str_pad(round($this_n*100/$this_total), 2,'0', STR_PAD_LEFT); ?>% 
                (<? echo str_pad($this_n, 2,'0', STR_PAD_LEFT); ?>) <? 
              } ?> </td> <? 
              // WHILE loop condition both checks and cycles to the next code values. 
            } while (next($coded_n) AND next($total_n)); ?>
          </tr> <? 
          //}
        } while ($row_rsPotentialStrengths = mysql_fetch_assoc($rsPotentialStrengths)); 
        ?>
        </table>
    
        </div>
				
        <? } if (checkModule('llra_qualities')) {							// 	LLRA LEADER QUALITIES TABS
					?>
					<div class="TabbedPanelsContent">											<!-- OVERVIEW TAB: LLRA QUALITIES -->
						
            <? echo $boilerplate['client_report_llra_qual_overview']; ?>
          
          </div> <?
				
					$a = 461; // the starting code slot for the lead. qual. AVERAGES
					while ($a <= 480) {
						// If this quality was coded, then set up the panel for it (BP, charts etc.)
						if ($row_rsLlraQualCounts['n_'.$a] > 0) { ?>
							<div class="TabbedPanelsContent">											<!-- TAB FOR THIS LLRA QUALITY -->
								
								<? echo $llra_qual_boilerplate[$a]; ?> &nbsp;
                
                <? 
                if (mysql_num_rows($rsChartLlraQualByManLevel) > 0) { 
                highchart($rsChartLlraQualByManLevel, 
                    "Score for ".$llra_qual_labels[$a]." by management level", "", 
                    "Management level", "Score for this leader quality (average)", "", 
                    array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
                } ?>
                
                <? 
                if (mysql_num_rows($rsChartLlraQualByGroup) > 0) { 
                highchart($rsChartLlraQualByGroup, 
                    "Score for ".$llra_qual_labels[$a]." by group", "", 
                    "Group", "Score for this leader quality (average)", "", 
                    array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
                } ?>
                
                <? // Fetch the level descriptions for this quality only
                $c = ($a - 460) * 2;
                $rsLlraQualScores = mysql_query("SELECT 
                  las_number_low AS score_low, 
                  las_number_high AS score_high,
                  client_definition 
                  FROM la_rubrics WHERE type = 'leader qualities' AND code_number = {$c}
                    AND client_definition <> ''
                  ORDER BY las_number_low ");
                
                if (mysql_num_rows($rsLlraQualScores) > 0) { ?>
                
                <div class="box">
                  <h3 align="center">Scores for <? echo $llra_qual_labels[$a]; ?></h3>
                  <table>
                    <tr>
                      <td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
                      <td class="tablehead_border" align="center"><strong>Description</strong></td>
                    </tr>
                    <? while ($row_rsLlraQualScores = mysql_fetch_assoc($rsLlraQualScores)) {  ?>
                      <tr>
                        <td align="center"><? 
                          echo $row_rsLlraQualScores['score_low']." - ".
                            $row_rsLlraQualScores['score_high']; ?></td>
                        <td><? echo $row_rsLlraQualScores['client_definition']; ?></td>
                      </tr><?
                    } ?>
                  </table>
                </div> 
                
                <? } ?>
							
							</div>
							<? 
						}
						$a ++;	// increment up to the next leader quality code.
					} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL LLRA QUALITIES -->
					
					<? echo $boilerplate['client_report_llra_qual_summary'];
					
					$llra_qual_chart_series = array("[whatever grouping column]", "N");
					$llra_qual_chart_labels = array();
					
					$a = 461;
					while ($a <= 480) { 
						if ($row_rsLlraQualCounts['n_'.$a] > 0) { 
							$llra_qual_chart_series[] = "avg_".$a;
							$llra_qual_chart_labels[] = ucfirst($llra_qual_labels[$a]);
						}
						$a ++;
					}
					
					// print_r($llra_qual_chart_series);
					// echo "\n";
					// print_r($llra_qual_chart_labels);
					
					$llra_qual_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLlraQualByManLevel) > 0) { 
						highchart($rsChartLlraQualByManLevel, 
							"All leader qualities by management level", "", 
							"Management level", "Score", "", 
							$llra_qual_chart_series,
							$llra_qual_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					}
					
					$llra_qual_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLlraQualByGroup) > 0) { 
						highchart($rsChartLlraQualByGroup, 
							"All leader qualities by group", "", 
							"Group", "Score", "", 
							$llra_qual_chart_series,
							$llra_qual_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} 
					
					
					if (mysql_num_rows($rsChartLlraQualByManLevel) > 0) { 
            highchart($rsChartLlraQualByManLevel, 
                "Leader qualities overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_quals"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} 
					
					if (mysql_num_rows($rsChartLlraQualByGroup) > 0) { 
            highchart($rsChartLlraQualByGroup, 
                "Leader qualities overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_quals"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?> &nbsp;
                
    </div>
					
				
				<? } if (checkModule('llra_themes')) {							// 	LLRA LEADERSHIP THEMES TABS
					?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: LEADERSHIP THEMES -->
						
						<? echo $boilerplate['client_report_llra_theme_overview']; ?>  &nbsp;
             
          </div>
					<?
				
					$a = 481; // the starting code slot for the lead. theme AVERAGES
					while ($a <= 490) {
						// If this quality was coded, then set up the panel for it (BP, charts etc.)
						if ($row_rsLlraThemeCounts['n_'.$a] > 0) { ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS LEADERSHIP THEME -->
								
								<? echo $boilerplate['client_report_llra_theme_'.$llra_theme_labels[$a]]; ?> &nbsp;
                
                <? 
                if (mysql_num_rows($rsChartLlraThemeByManLevel) > 0) { 
                  highchart($rsChartLlraThemeByManLevel, 
                    "Score for ".$llra_theme_labels[$a]." by management level", "", 
                    "Management level", "Score for this theme (average)", "", 
                    array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
                } ?>
                
                <? 
                if (mysql_num_rows($rsChartLlraThemeByGroup) > 0) { 
                  highchart($rsChartLlraThemeByGroup, 
                    "Score for ".$llra_theme_labels[$a]." by group", "", 
                    "Group", "Score for this theme (average)", "", 
                    array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
                } ?>
                
                <? // Fetch the level descriptions for this theme only
                $c = (($a - 480) * 3) + 100;
                $c = str_pad($c, 3, '0', STR_PAD_LEFT);
                
                $rsLlraThemeScores = mysql_query("SELECT 
                  las_number_low AS score_low, 
                  las_number_high AS score_high,
                  client_definition 
                  FROM la_rubrics WHERE type = 'leadership themes' AND code_number = {$c}
                    AND client_definition <> ''
                  ORDER BY las_number_low ");
                
                if (mysql_num_rows($rsLlraThemeScores) > 0) { ?>
                
                <div class="box">
                  <h3 align="center">Scores for <? echo $llra_theme_labels[$a]; ?></h3>
                  <table>
                    <tr>
                      <td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
                      <td class="tablehead_border" align="center"><strong>Description</strong></td>
                    </tr>
                    <? while ($row_rsLlraThemeScores = mysql_fetch_assoc($rsLlraThemeScores)) { ?>
                      <tr>
                        <td align="center"><? 
                          echo $row_rsLlraThemeScores['score_low']." - ".
                            $row_rsLlraThemeScores['score_high']; ?></td>
                        <td><? echo $row_rsLlraThemeScores['client_definition']; ?></td>
                      </tr>
                      <?
                    } ?>
                  </table>
                </div> 
                
                <? } ?>
							
							</div>
							<? 
						}
						$a ++;	// increment up to the next leadership theme average.
					} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL LLRA THEMES -->
					
					<? echo $boilerplate['client_report_llra_theme_summary'];
					
					$llra_theme_chart_series = array("[whatever grouping column]", "N");
					$llra_theme_chart_labels = array();
					
					$a = 481;
					while ($a <= 490) { 
						if ($row_rsLlraThemeCounts['n_'.$a] > 0) { 
							$llra_theme_chart_series[] = "avg_".$a;
							$llra_theme_chart_labels[] = ucfirst($llra_theme_labels[$a]);
						}
						$a ++;
					}
					
					// print_r($llra_theme_chart_series);
					// echo "\n";
					// print_r($llra_theme_chart_labels);
					
					$llra_theme_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLlraThemeByManLevel) > 0) { 
						highchart($rsChartLlraThemeByManLevel, 
							"All leadership themes by management level", "", 
							"Management level", "Score", "", 
							$llra_theme_chart_series,
							$llra_theme_chart_labels, 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", 
				"line");
					}
					
					$llra_theme_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLlraThemeByGroup) > 0) { 
						highchart($rsChartLlraThemeByGroup, 
							"All leadership themes by group", "", 
							"Group", "Score", "", 
							$llra_theme_chart_series,
							$llra_theme_chart_labels, 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} 
					
					
					if (mysql_num_rows($rsChartLlraThemeByManLevel) > 0) {
            highchart($rsChartLlraThemeByManLevel, 
                "Leadership themes overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_themes"), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} 
					
					
					if (mysql_num_rows($rsChartLlraThemeByGroup) > 0) {
            highchart($rsChartLlraThemeByGroup, 
                "Leadership themes overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_themes"), "", 10, 13,
        "https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>  &nbsp;
          
    </div>
				
        
        
        <? } if (checkModule('lrja_themes')) {							// 	REFLECTIVE JUDGMENT THEMES TABS
					?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: RJ THEMES -->
						
            <? echo $boilerplate['client_report_lrja_theme_overview']; ?> &nbsp;
            
          </div>
					<?
				
					// go through the code slots for each RJ theme AVERAGE
					for ($a = 481; $a <= 490; $a ++) { 
						// If this theme was coded, then set up the panel for it (BP, charts etc.)
						if ($row_rsLrjaThemeCounts['n_'.$a] > 0) { ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS RJ THEME -->
								
						<? echo $boilerplate['client_report_lrja_theme_'.
																		str_replace(array(" ", "&"), "", $lrja_theme_labels[$a])]; ?>
             &nbsp;
            
            <? 
						if (mysql_num_rows($rsChartLrjaThemeByManLevel) > 0) {
            	highchart($rsChartLrjaThemeByManLevel, 
                "Score for ".$lrja_theme_labels[$a]." by management level", "", 
                "Management level", "Score for this theme (average)", "", 
                array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						if (mysql_num_rows($rsChartLrjaThemeByGroup) > 0) {
            	highchart($rsChartLrjaThemeByGroup, 
                "Score for ".$lrja_theme_labels[$a]." by group", "", 
                "Group", "Score for this theme (average)", "", 
                array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						// Fetch the level descriptions for this theme 
						$sql = sprintf("SELECT * FROM la_rubrics 
							WHERE instrument_id = %s AND type = 'theme feedback' AND code_number = %s
							ORDER BY las_number_low ",
								SQLstr($instrument_id_base, "text"),
								SQLstr($a, "int"));
						$rsLrjaThemeScores = mysql_query($sql);
						
						if (0) { 
							?>
							
							<div class="box">
								<h3 align="center">Scores for <? echo $lrja_theme_labels[$a]; ?></h3>
								<table>
									<tr>
										<td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
										<td class="tablehead_border" align="center"><strong>Description</strong></td>
									</tr>
									<? while ($row_rsLrjaThemeScores = mysql_fetch_assoc($rsLrjaThemeScores)) { 
										if ($row_rsLrjaThemeScores['client_definition'] <> "") { ?>
										<tr>
											<td align="center"><? 
												echo $row_rsLrjaThemeScores['las_number_low']." - ".
													$row_rsLrjaThemeScores['las_number_high']; ?></td>
											<td><? echo $row_rsLrjaThemeScores['client_definition']; ?></td>
										</tr>
										<?
										}
									} ?>
								</table>
							</div>
               
              <? 
						} ?>
            
            <div id="CollapsiblePanel<? echo $a; ?>" class="CollapsiblePanel">
						<? if (checkModule('management')) { ?>
              <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
              <div class="CollapsiblePanelContent">
               <? echo $boilerplate['report_client_manlevel_desc']; ?>
              </div>
            <? } ?>
            </div>
            
            <script type="text/javascript">
						var CollapsiblePanel<? echo $a; ?> = 
							new Spry.Widget.CollapsiblePanel("CollapsiblePanel<? echo $a; ?>");
						</script>
							
							</div>
							<? 
						}
					} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL RJ THEMES -->
					
					
					<? 
					
					echo $boilerplate['client_report_lrja_theme_summary'];
					
					// Prepare the arrays of column names and series labels for the multi-series charts.
					$lrja_theme_chart_series = array("[whatever grouping column]", "N");
					$lrja_theme_chart_labels = array();
					
					for ($a = 481; $a <= 490; $a ++) {
						if ($row_rsLrjaThemeCounts['n_'.$a] > 0) { 
							$lrja_theme_chart_series[] = "avg_".$a;
							$lrja_theme_chart_labels[] = ucfirst($lrja_theme_labels[$a]);
						}
					}
					
					// print_r($lrja_theme_chart_series);
					// echo "\n";
					// print_r($lrja_theme_chart_labels);
					
					$lrja_theme_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLrjaThemeByManLevel) > 0) {
						highchart($rsChartLrjaThemeByManLevel, 
							"All RJ themes by management level", "", 
							"Management level", "Score", "", 
							$lrja_theme_chart_series,
							$lrja_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					}
					
					$lrja_theme_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLrjaThemeByGroup) > 0) {
						highchart($rsChartLrjaThemeByGroup, 
							"All RJ themes by group", "", 
							"Group", "Score", "", 
							$lrja_theme_chart_series,
							$lrja_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} ?>
          
          <? 
					if (mysql_num_rows($rsChartLrjaThemeByManLevel) > 0) {
            highchart($rsChartLrjaThemeByManLevel, 
                "RJ themes overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
            
          <? 
					if (mysql_num_rows($rsChartLrjaThemeByGroup) > 0) {
            highchart($rsChartLrjaThemeByGroup, 
                "RJ themes overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
          
          &nbsp; 
          
          <div id="CollapsiblePanel11" class="CollapsiblePanel">
					<? if (checkModule('management')) { ?>
            <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
            <div class="CollapsiblePanelContent">
             <? echo $boilerplate['report_client_manlevel_desc']; ?>
            </div>
          <? } ?>
          </div>
          
          <script type="text/javascript">
          var CollapsiblePanel11 = 
            new Spry.Widget.CollapsiblePanel("CollapsiblePanel11");
          </script>
          
                
    </div>
				
        
        
        <? } if (checkModule('lrja_scales')) { ?>
        <div class="TabbedPanelsContent">													<!-- REFLECTIVE JUDGMENT SCALES -->
          <table width="570">
         		<tr>
            	<td>
    
		<? echo $boilerplate['client_report_lrja_scales_intro']; ?> &nbsp;
    
    <? 
		/* The logic for presenting the LRJA scale results: 
		for each code slot,
			fetch from la_codes -> la_rubrics, grouped by the rubric selection, with N counts
			dump results into a 3-dim array:
				$lrja_scale_freq[the scale rubric name][the stem text to show][test time]
			track the highest # of test times for determining table structure
		*/
		
		?>
    
    <table> 
    
    	<?
			// In the header code, 2 pieces of info were pulled: 
			// 1) the # of test times ($lrjascale_numtesttimes), and 
			// 2) the totals count for each of those test times ($lrjascale_ns).
			
			$cur_theme = "";
			
			for ($code = 101; $code <= 110; $code ++) {
				// Fetch rubric choices (including theme name etc.) for this code slot
				$sql = sprintf("SELECT r.*, COUNT(DISTINCT c.lakey) AS n FROM la_rubrics r 
					LEFT JOIN la_codes c ON r.rubrickey = c.code{$code}
					LEFT JOIN la_data d ON c.lakey = d.lakey
					LEFT JOIN la_scores s ON c.lakey = s.lakey {$scores_nojournal}
					WHERE r.code_number = {$code} AND {$finalized} AND r.instrument_id = %s
						{$filter_instrument_id} {$filter_demog}
					GROUP BY r.rubrickey, d.test_time ORDER BY d.test_time, r.item_order",
						SQLstr($instrument_id_base, "text"));
				$rsScale = mysql_query($sql) or 
					error_log("Bulk customer report page - LRJA scale results: ".mysql_error(), 1, 
										"service@lectica.org");
				$row_rsScale = mysql_fetch_assoc($rsScale);
				
				// Add a divider row between different themes, plus test time counts
				if ($row_rsScale['theme_name'] <> $cur_theme) { 
					$cur_theme = $row_rsScale['theme_name'];
					?><tr class="tablehead_knockout">
          	<td><? echo ucfirst($cur_theme); ?></td>
            <? // for each test time, display a column header.
						for ($i = 1; $i <= $lrjascale_numtesttimes; $i ++) { ?>
            	<td>Time <? echo $i; ?></td><?
						} ?>
          </tr>
          <tr><td></td><?
						// for each test time, display the totals count
						for ($i = 1; $i <= $lrjascale_numtesttimes; $i ++) { ?>
            	<td>N = <? echo $lrjascale_ns[$i]; ?></td><?
						} ?>
          </tr><?
				}
				
				// display title for this rubric 
				?><tr>
        	<td><strong><? echo $row_rsScale['rubric_name']; ?></strong></td>
        </tr><?
				
				// use an infinite loop to list each stem
				while (1) { ?>
					<tr>
          	<td><? echo $row_rsScale['rubric_item']; ?></td><?
						// then print out frequency for each test time that exists in results.
						
						// **** NOT FINISHED YET
						
						
						?>
          </tr><?
				} 
				
			}
			
			?>
      
      
      
      
      <? } if (checkModule('lera_themes')) {							// 	ETHICS THEMES TABS
					?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: LERA THEMES -->
						
                
                <? echo $boilerplate['client_report_lera_theme_overview']; ?>
                &nbsp;
                
                
          </div>
					<?
				
					// go through the code slots for each LERA theme AVERAGE
					for ($a = 481; $a <= 490; $a ++) { 
						// If this theme was coded, then set up the panel for it (BP, charts etc.)
						if ($row_rsLeraThemeCounts['n_'.$a] > 0) { ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS LERA THEME -->
								
							
						<? echo $boilerplate['client_report_lera_theme_'.
																		str_replace(array(" ", "&"), "", $lera_theme_labels[$a])]; ?>
             &nbsp;
            
            <? 
						if (mysql_num_rows($rsChartLeraThemeByManLevel) > 0) {
            	highchart($rsChartLeraThemeByManLevel, 
                "Score for ".$lera_theme_labels[$a]." by management level", "", 
                "Management level", "Score for this theme (average)", "", 
                array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						if (mysql_num_rows($rsChartLeraThemeByGroup) > 0) {
            	highchart($rsChartLeraThemeByGroup, 
                "Score for ".$lera_theme_labels[$a]." by group", "", 
                "Group", "Score for this theme (average)", "", 
                array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						// Fetch the level descriptions for this theme 
						$sql = sprintf("SELECT * FROM la_rubrics 
							WHERE instrument_id = %s AND type = 'theme feedback' AND code_number = %s
							ORDER BY las_number_low ",
								SQLstr($instrument_id_base, "text"),
								SQLstr($a, "int"));
						$rsLeraThemeScores = mysql_query($sql);
						
						if (0) { 
							?>
							
							<div class="box">
								<h3 align="center">Scores for <? echo $lera_theme_labels[$a]; ?></h3>
								<table>
									<tr>
										<td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
										<td class="tablehead_border" align="center"><strong>Description</strong></td>
									</tr>
									<? while ($row_rsLeraThemeScores = mysql_fetch_assoc($rsLeraThemeScores)) { 
										if ($row_rsLeraThemeScores['client_definition'] <> "") { ?>
										<tr>
											<td align="center"><? 
												echo $row_rsLeraThemeScores['las_number_low']." - ".
													$row_rsLeraThemeScores['las_number_high']; ?></td>
											<td><? echo $row_rsLeraThemeScores['client_definition']; ?></td>
										</tr>
										<?
										}
									} ?>
								</table>
							</div>
               
              <? 
						} ?>
            
            <div id="CollapsiblePanel<? echo $a; ?>" class="CollapsiblePanel">
						<? if (checkModule('management')) { ?>
              <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
              <div class="CollapsiblePanelContent">
               <? echo $boilerplate['report_client_manlevel_desc']; ?>
              </div>
            <? } ?>
            </div>
            
            <script type="text/javascript">
						var CollapsiblePanel<? echo $a; ?> = 
							new Spry.Widget.CollapsiblePanel("CollapsiblePanel<? echo $a; ?>");
						</script>
							
										
							</div>
							<? 
						}
					} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL LERA THEMES -->
					
					
					<? 
					
					echo $boilerplate['client_report_lera_theme_summary'];
					
					// Prepare the arrays of column names and series labels for the multi-series charts.
					$lera_theme_chart_series = array("[whatever grouping column]", "N");
					$lera_theme_chart_labels = array();
					
					for ($a = 481; $a <= 490; $a ++) {
						if ($row_rsLeraThemeCounts['n_'.$a] > 0) { 
							$lera_theme_chart_series[] = "avg_".$a;
							$lera_theme_chart_labels[] = ucfirst($lera_theme_labels[$a]);
						}
					}
					
					// print_r($lera_theme_chart_series);
					// echo "\n";
					// print_r($lera_theme_chart_labels);
					
					$lera_theme_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLeraThemeByManLevel) > 0) {
						highchart($rsChartLeraThemeByManLevel, 
							"All ethics themes by management level", "", 
							"Management level", "Score", "", 
							$lera_theme_chart_series,
							$lera_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					}
					
					$lera_theme_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLeraThemeByGroup) > 0) {
						highchart($rsChartLeraThemeByGroup, 
							"All ethics themes by group", "", 
							"Group", "Score", "", 
							$lera_theme_chart_series,
							$lera_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} ?>
          
          <? 
					if (mysql_num_rows($rsChartLeraThemeByManLevel) > 0) {
            highchart($rsChartLeraThemeByManLevel, 
                "Ethics themes overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
            
          <? 
					if (mysql_num_rows($rsChartLeraThemeByGroup) > 0) {
            highchart($rsChartLeraThemeByGroup, 
                "Ethics themes overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
          
          &nbsp; 
          
          <div id="CollapsiblePanel11" class="CollapsiblePanel">
					<? if (checkModule('management')) { ?>
            <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
            <div class="CollapsiblePanelContent">
             <? echo $boilerplate['report_client_manlevel_desc']; ?>
            </div>
          <? } ?>
          </div>
          
          <script type="text/javascript">
          var CollapsiblePanel11 = 
            new Spry.Widget.CollapsiblePanel("CollapsiblePanel11");
          </script>
          
                
          </div>
				
        
      
      
      
      <? } if (checkModule('ldpa_themes')) {							// 	DP THEMES TABS ?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: LDPA THEMES -->
						<? echo $boilerplate['client_report_ldpa_theme_overview']; ?>
            &nbsp; 
          </div>
					<?
					// go through the code slots for each LDPA theme AVERAGE
					for ($a = 481; $a <= 490; $a ++) { 
						// If this theme was coded, then set up the panel for it (BP, charts etc.)
						if ($ldpa_theme_titles[$a] <> "") { // $row_rsLdpaThemeCounts['n_'.$a] > 0 ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS LDPA THEME -->
								
						<? echo $boilerplate['client_report_ldpa_theme_'.
																		str_replace(array(" ", "&"), "", $ldpa_theme_labels[$a])]; ?>
            
            <? if ($row_rsLdpaThemeCounts['n_'.$a] == 0) { ?>
            	<p>No test takers addressed this theme in their responses.</p>
            <? } ?>
            
             &nbsp;
            <? 
						if (mysql_num_rows($rsChartLdpaThemeByManLevel) > 0) {
            	highchart($rsChartLdpaThemeByManLevel, 
                "Score for ".$ldpa_theme_labels[$a]." by management level", "", 
                "Management level", "Score for this theme (average)", "", 
                array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						if (mysql_num_rows($rsChartLdpaThemeByGroup) > 0) {
            	highchart($rsChartLdpaThemeByGroup, 
                "Score for ".$ldpa_theme_labels[$a]." by group", "", 
                "Group", "Score for this theme (average)", "", 
                array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						// Fetch the level descriptions for this theme 
						$sql = sprintf("SELECT * FROM la_rubrics 
							WHERE instrument_id = %s AND type = 'theme feedback' AND code_number = %s
							ORDER BY las_number_low ",
								SQLstr($instrument_id_base, "text"),
								SQLstr($a, "int"));
						$rsLdpaThemeScores = mysql_query($sql);
						
						if (0) { 
							?>
							
							<div class="box">
								<h3 align="center">Scores for <? echo $ldpa_theme_labels[$a]; ?></h3>
								<table>
									<tr>
										<td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
										<td class="tablehead_border" align="center"><strong>Description</strong></td>
									</tr>
									<? while ($row_rsLdpaThemeScores = mysql_fetch_assoc($rsLdpaThemeScores)) { 
										if ($row_rsLdpaThemeScores['client_definition'] <> "") { ?>
										<tr>
											<td align="center"><? 
												echo $row_rsLdpaThemeScores['las_number_low']." - ".
													$row_rsLdpaThemeScores['las_number_high']; ?></td>
											<td><? echo $row_rsLdpaThemeScores['client_definition']; ?></td>
										</tr>
										<?
										}
									} ?>
								</table>
							</div>
               
              <? 
						} ?>
            				
							</div>
							<? 
						}
					} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL LDPA THEMES -->
					
					
					<? 
					
					echo $boilerplate['client_report_ldpa_theme_summary'];
					
					// Prepare the arrays of column names and series labels for the multi-series charts.
					$ldpa_theme_chart_series = array("[whatever grouping column]", "N");
					$ldpa_theme_chart_labels = array();
					
					for ($a = 481; $a <= 490; $a ++) {
						if ($row_rsLdpaThemeCounts['n_'.$a] > 0) { 
							$ldpa_theme_chart_series[] = "avg_".$a;
							$ldpa_theme_chart_labels[] = ucfirst($ldpa_theme_labels[$a]);
						}
					}
					
					// print_r($ldpa_theme_chart_series);
					// echo "\n";
					// print_r($ldpa_theme_chart_labels);
					
					$ldpa_theme_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLdpaThemeByManLevel) > 0) {
						highchart($rsChartLdpaThemeByManLevel, 
							"All DP themes by management level", "", 
							"Management level", "Score", "", 
							$ldpa_theme_chart_series,
							$ldpa_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					}
					
					$ldpa_theme_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLdpaThemeByGroup) > 0) {
						highchart($rsChartLdpaThemeByGroup, 
							"All DP themes by group", "", 
							"Group", "Score", "", 
							$ldpa_theme_chart_series,
							$ldpa_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} ?>
          
          <? 
					if (mysql_num_rows($rsChartLdpaThemeByManLevel) > 0) {
            highchart($rsChartLdpaThemeByManLevel, 
                "DP themes overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
            
          <? 
					if (mysql_num_rows($rsChartLdpaThemeByGroup) > 0) {
            highchart($rsChartLdpaThemeByGroup, 
                "DP themes overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
          
          &nbsp; 
          
          </div>
				
        
      	
        
        
        
      
      <? } if (checkModule('lima_themes')) {							// 	LIMA THEMES TABS ?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: LIMA THEMES -->
						<? echo $boilerplate['client_report_lima_theme_overview']; ?>
            &nbsp; 
          </div>
					<?
					// go through the code slots for each LIMA theme AVERAGE
					for ($a = 471; $a <= 490; $a ++) { 
						// If this theme was coded, then set up the panel for it (BP, charts etc.)
						if ($lima_theme_titles[$a] <> "") { // $row_rsLimaThemeCounts['n_'.$a] > 0 ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS LIMA THEME -->
								
						<? $theme = str_replace(array(" ", "&"), "", $lima_theme_labels[$a]);
						echo $boilerplate['client_report_lima_theme_'.$theme]; ?>
            
            <? if ($row_rsLimaThemeCounts['n_'.$a] == 0) { ?>
            	<p>No test takers addressed this theme in their responses.</p>
            <? } ?>
            
             &nbsp;
            <? 
						if (mysql_num_rows($rsChartLimaThemeByManLevel) > 0) {
            	highchart($rsChartLimaThemeByManLevel, 
                "Score for ".$lima_theme_labels[$a]." by management level", "", 
                "Management level", "Score for this theme (average)", "", 
                array("MAN_LEVEL", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						if (mysql_num_rows($rsChartLimaThemeByGroup) > 0) {
            	highchart($rsChartLimaThemeByGroup, 
                "Score for ".$lima_theme_labels[$a]." by group", "", 
                "Group", "Score for this theme (average)", "", 
                array("GROUP", "n_".$a, "avg_".$a), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
						} ?>
            
            <? 
						// Fetch the level descriptions for this theme 
						$sql = sprintf("SELECT * FROM la_rubrics 
							WHERE instrument_id = %s AND type = 'theme feedback' AND code_number = %s
							ORDER BY las_number_low ",
								SQLstr($instrument_id_base, "text"),
								SQLstr($a, "int"));
						$rsLimaThemeScores = mysql_query($sql);
						
						?>
            </div><? 
						}
					} ?>
				
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL LIMA THEMES -->
					
					<? 
					echo $boilerplate['client_report_lima_theme_summary'];
					
					// Prepare the arrays of column names and series labels for the multi-series charts.
					$lima_theme_chart_series = array("[whatever grouping column]", "N");
					$lima_theme_chart_labels = array();
					
					for ($a = 481; $a <= 490; $a ++) {
						if ($row_rsLimaThemeCounts['n_'.$a] > 0) { 
							$lima_theme_chart_series[] = "avg_".$a;
							$lima_theme_chart_labels[] = ucfirst($lima_theme_labels[$a]);
						}
					}
					
					// print_r($lima_theme_chart_series);
					// echo "\n";
					// print_r($lima_theme_chart_labels);
					
					$lima_theme_chart_series[0] = "MAN_LEVEL";
					
					if (mysql_num_rows($rsChartLimaThemeByManLevel) > 0) {
						highchart($rsChartLimaThemeByManLevel, 
							"All Integral model themes by management level", "", 
							"Management level", "Score", "", 
							$lima_theme_chart_series,
							$lima_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					}
					
					$lima_theme_chart_series[0] = "GROUP";
					
					if (mysql_num_rows($rsChartLimaThemeByGroup) > 0) {
						highchart($rsChartLimaThemeByGroup, 
							"All Integral model themes by group", "", 
							"Group", "Score", "", 
							$lima_theme_chart_series,
							$lima_theme_chart_labels, 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png", "line");
					} ?>
          
          <? 
					if (mysql_num_rows($rsChartLimaThemeByManLevel) > 0) {
            highchart($rsChartLimaThemeByManLevel, 
                "Integral model themes overall average by management level", "", 
                "Management level", "Average score", "", 
                array("MAN_LEVEL", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
            
          <? 
					if (mysql_num_rows($rsChartLimaThemeByGroup) > 0) {
            highchart($rsChartLimaThemeByGroup, 
                "Integral model themes overall average by group", "", 
                "Group", "Average score", "", 
                array("GROUP", "N", "avg_themes"), "", 10, 13,
		"https://www.devtestservice.org/images/backgrounds/la_chart_bg_lect_manlevel.png"); 
					} ?>
          
          &nbsp; 
          </div>
				
        
        
        
        
        
        
        
        
        
      
      <? } if (checkModule('sma_themes')) {							// 	SMA THEMES TABS ?>
					<div class="TabbedPanelsContent">										<!-- OVERVIEW TAB: SMA THEMES -->
            <? echo $boilerplate['client_report_sma_themes_overview']; ?> &nbsp;
          </div>
					<?
				
					// go through the code slots for each SMA theme AVERAGE
					for ($a = 481; $a <= 490; $a ++) { 
						// If this theme was coded, then set up the panel for it (BP, charts etc.)
						if ($row_rsSmaThemeCounts['n_'.$a] > 0) { ?>
							<div class="TabbedPanelsContent">								<!-- TAB FOR THIS SMA THEME -->
								
							
							<? echo $boilerplate['client_report_sma_theme_'.
								str_replace(array(" ", "&"), "", $sma_theme_labels[$a])]; ?>
	             &nbsp;
	            
	            <? 
							if (mysql_num_rows($rsChartSmaThemeByTime) > 0) {
	            	highchart($rsChartSmaThemeByTime, 
	                "Score for {$sma_theme_labels[$a]} by test time", "", 
	                "Test time", "Score for this theme (average)", "Time ", 
	                array("TEST_TIME", "n_".$a, "avg_".$a), "", 10.3, 10.7, ""); 
							} ?>
	            
	            <? 
							if (mysql_num_rows($rsChartSmaThemeByGroup) > 0) {
	            	highchart($rsChartSmaThemeByGroup, 
	                "Score for {$sma_theme_labels[$a]} by group", "", 
	                "Group", "Score for this theme (average)", "", 
	                array("GROUP", "n_".$a, "avg_".$a), "", 10.3, 10.7, ""); 
							} ?>
            
            
										
								</div>
								<? 
							} // End tab for this theme
						} ?>
				
        
				<div class="TabbedPanelsContent">											<!-- SUMMARY OF ALL SMA THEMES -->
					
				<? echo $boilerplate['client_report_sma_themes_summary'];
        
        // Prepare the arrays of column names and series labels for the multi-series charts.
        $sma_theme_chart_series = array("[whatever grouping column]", "N");
        $sma_theme_chart_labels = array();
        
        for ($a = 481; $a <= 490; $a ++) {
          if ($row_rsSmaThemeCounts['n_'.$a] > 0) { 
            $sma_theme_chart_series[] = "avg_".$a;
            $sma_theme_chart_labels[] = ucfirst($sma_theme_labels[$a]);
          }
        }
        
        // print_r($sma_theme_chart_series);
        // echo "\n";
        // print_r($sma_theme_chart_labels);
        
        $sma_theme_chart_series[0] = "TEST_TIME";
        
        if (mysql_num_rows($rsChartSmaThemeByTime) > 0) {
          highchart($rsChartSmaThemeByTime, 
            "All SMA themes by test time", "", 
            "Test time", "Score", "Time ", 
            $sma_theme_chart_series,
            $sma_theme_chart_labels, 10.3, 10.7, "", "line");
        }
        
        $sma_theme_chart_series[0] = "GROUP";
        
        if (mysql_num_rows($rsChartSmaThemeByGroup) > 0) {
          highchart($rsChartSmaThemeByGroup, 
            "All SMA themes by group", "", 
            "Group", "Score", "", 
            $sma_theme_chart_series,
            $sma_theme_chart_labels, 10.3, 10.7, "", "line");
        } ?>
        
        <? 
        if (mysql_num_rows($rsChartSmaThemeByTime) > 0) {
          highchart($rsChartSmaThemeByTime, 
              "SMA themes overall average by test time", "", 
              "Test time", "Average score", "Time ", 
              array("TEST_TIME", "N", "avg_themes"), "", 10.3, 10.7, ""); 
        } ?>
          
        <? 
        if (mysql_num_rows($rsChartSmaThemeByGroup) > 0) {
          highchart($rsChartSmaThemeByGroup, 
              "SMA themes overall average by group", "", 
              "Group", "Average score", "", 
              array("GROUP", "N", "avg_themes"), "", 10.3, 10.7, ""); 
        } ?>
        
        </div>
				
        
        
        
        
        
        <? } if (checkModule('smj_scores')) { ?>
        <div class="TabbedPanelsContent">												<!-- SMJ SCORES -->
          
					<? 
          
          $sql_rsChartSmjByTestTime = sprintf("SELECT d.test_time AS TEST_TIME, 
							COUNT(DISTINCT d.lakey) AS N, 
	            ROUND(AVG(m001.item_value),2) AS T_BODY_SENSATIONS,
	            ROUND(AVG(m002.item_value),2) AS T_EMOTIONS,
	            ROUND(AVG(m003.item_value),2) AS T_BELIEFS,
	            ROUND(AVG(m004.item_value),2) AS T_THOUGHTS,
	            ROUND(AVG(m005.item_value),2) AS T_VALUES,
	            ROUND(AVG(m006.item_value),2) AS T_RELATIONSHIPS,
	            ROUND(AVG(m101.item_value),2) AS S_BODY_SENSATIONS,
	            ROUND(AVG(m102.item_value),2) AS S_EMOTIONS,
	            ROUND(AVG(m103.item_value),2) AS S_BELIEFS,
	            ROUND(AVG(m104.item_value),2) AS S_THOUGHTS,
	            ROUND(AVG(m105.item_value),2) AS S_VALUES,
	            ROUND(AVG(m106.item_value),2) AS S_RELATIONSHIPS,
							ROUND(AVG(c.code483),2) AS T_CONNWELLB,
							ROUND(AVG((m022.item_value + m023.item_value) / 2),2) AS T_CONTROL,
							ROUND(AVG((m021.item_value + m024.item_value + m025.item_value) / 3),2) AS T_CONNECTION,
							ROUND(AVG((m028.item_value + m029.item_value + m030.item_value) / 3),2) AS T_COMPASSION
	          FROM la_data d
							LEFT JOIN la_assignments a ON d.assignmentkey = a.assignmentkey
							JOIN registrants r ON r.userkey = d.userkey 
	            LEFT JOIN la_codes c ON d.lakey = c.lakey
	            LEFT JOIN la_menus m001 ON c.code001 = m001.menukey
	            LEFT JOIN la_menus m002 ON c.code002 = m002.menukey
	            LEFT JOIN la_menus m003 ON c.code003 = m003.menukey
	            LEFT JOIN la_menus m004 ON c.code004 = m004.menukey
	            LEFT JOIN la_menus m005 ON c.code005 = m005.menukey
	            LEFT JOIN la_menus m006 ON c.code006 = m006.menukey
	            LEFT JOIN la_menus m101 ON c.code101 = m101.menukey
	            LEFT JOIN la_menus m102 ON c.code102 = m102.menukey
	            LEFT JOIN la_menus m103 ON c.code103 = m103.menukey
	            LEFT JOIN la_menus m104 ON c.code104 = m104.menukey
	            LEFT JOIN la_menus m105 ON c.code105 = m105.menukey
	            LEFT JOIN la_menus m106 ON c.code106 = m106.menukey
	            LEFT JOIN la_menus m021 ON c.code021 = m021.menukey
	            LEFT JOIN la_menus m022 ON c.code022 = m022.menukey
	            LEFT JOIN la_menus m023 ON c.code023 = m023.menukey
	            LEFT JOIN la_menus m024 ON c.code024 = m024.menukey
	            LEFT JOIN la_menus m025 ON c.code025 = m025.menukey
	            LEFT JOIN la_menus m026 ON c.code026 = m026.menukey
	            LEFT JOIN la_menus m027 ON c.code027 = m027.menukey
	            LEFT JOIN la_menus m028 ON c.code028 = m028.menukey
	            LEFT JOIN la_menus m029 ON c.code029 = m029.menukey
	            LEFT JOIN la_menus m030 ON c.code030 = m030.menukey
						WHERE {$finalized} %s %s 
	          GROUP BY d.test_time 
	          ORDER BY d.test_time", 
							$filter_instrument_id,
							$filter_demog);
        $rsChartSmjByTestTime = mysql_query($sql_rsChartSmjByTestTime) or die(mysql_error());
				
				
				
				echo $boilerplate['client_report_smj_scores']; 
				
				echo $boilerplate['client_report_smj_scores_chart1']; 
				
				highchart($rsChartSmjByTestTime, 
					"Mindfulness scores - student codes", "", 
					"Test time", "Score", "Time ", 
					array("TEST_TIME", "", 
						"S_BODY_SENSATIONS", "S_EMOTIONS", "S_BELIEFS", "S_THOUGHTS", "S_VALUES", "S_RELATIONSHIPS"),
					array("Body sensations", "Emotions", "Beliefs", "Thoughts", "Values", "Relationships"), 
						0, 4.1, "", "line");
				
				echo $boilerplate['client_report_smj_scores_chart2'];
				
				highchart($rsChartSmjByTestTime, 
					"Mindfulness scores - teacher codes", "", 
					"Test time", "Score", "Time ", 
					array("TEST_TIME", "", 
						"T_BODY_SENSATIONS", "T_EMOTIONS", "T_BELIEFS", "T_THOUGHTS", "T_VALUES", "T_RELATIONSHIPS"),
					array("Body sensations", "Emotions", "Beliefs", "Thoughts", "Values", "Relationships"), 
					0, 4.1, "", "line"); 
				
				echo $boilerplate['client_report_smj_scores_chart3'];
				
				highchart($rsChartSmjByTestTime, "Average score for connectedness and wellbeing", "", 
						"Test time", "Score", "Time ", 
						array("TEST_TIME", "", "T_CONTROL", "T_CONNECTION", "T_COMPASSION"), 
						array("Control", "Connection", "Compassion"), 
						0, 4.1, "", "line");
				
				?>
           
        </div>
        
        
        
        
				
				<? } if (checkModule('perspectives')) { ?>
        <div class="TabbedPanelsContent">												<!-- PERSPECTIVE-TAKING AND -SEEKING -->
          
        	<? echo $boilerplate['client_report_ldma_perspective_taking_seeking']; ?>

          <? 
          if (mysql_num_rows($rsChartPQualityByLasRange) > 0) {
						highchart($rsChartPQualityByLasRange, 
										"Perspective taking and seeking by Lectical range", "", 
                    "Lectical range", "Perspective taking and seeking scores", "", 
                    array("LAS_RANGE", "N", "QUALITY_P_TAKEN", "QUALITY_P_SOUGHT"),
										array("Perspective taking", "Perspective seeking"), "", 80, ""); 
					} ?>
          
          <? 
          if (mysql_num_rows($rsChartPQualityByTestTime) > 0) {
						highchart($rsChartPQualityByTestTime, 
										"Perspective taking and seeking by test time", "", 
                    "Test time", "Perspective taking and seeking scores", "Time ", 
                    array("TEST_TIME", "N", "QUALITY_P_TAKEN", "QUALITY_P_SOUGHT"),
										array("Perspective taking", "Perspective seeking"), "", 80, ""); 	
					} ?>
          
          
          <div id="CollapsiblePanel6" class="CollapsiblePanel">
          <? if (checkModule('management')) { ?>
            <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
            <div class="CollapsiblePanelContent">
             <? echo $boilerplate['report_client_manlevel_desc']; ?>
            </div>
          <? } ?>
          </div>
          
          
          <? 
          if (mysql_num_rows($rsChartPQualityByManLevel) > 0) {
						highchart($rsChartPQualityByManLevel, 
										"Perspective taking and seeking by management level", "", 
                    "Management level", "Perspective taking and seeking scores", "", 
                    array("MAN_LEVEL", "N", "QUALITY_P_TAKEN", "QUALITY_P_SOUGHT"),
										array("Perspective taking", "Perspective seeking"), "", 80, ""); 
					} ?>
          
          
          <script type="text/javascript">
					var CollapsiblePanel6 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel6");
					</script>
          
          </div>
          
          
        <? } if (checkModule('p_coordination')) { ?>
        <div class="TabbedPanelsContent">												<!-- PERSPECTIVE COORDINATION -->
          
          <? echo $boilerplate['report_bc_pcoord']; ?>
          
          <? 
          if (mysql_num_rows($rsChartPCoordByTestTime) > 0) {
						highchart($rsChartPCoordByTestTime, 
										"Perspective coordination by test time", "", 
                    "Test time", "Perspective coordination scores", "", 
                    array("TEST_TIME", "N", "P_COORD"), "", "", 6, ""); 
					}
						
          if (mysql_num_rows($rsChartPCoordByLasRange) > 0) {
						highchart($rsChartPCoordByLasRange, 
										"Perspective coordination by Lectical level", "", 
                    "Lectical level", "Perspective coordination scores", "", 
                    array("LAS_RANGE", "N", "P_COORD"), "", "", 6, ""); 
					}
						
          if (mysql_num_rows($rsChartPCoordByGroup) > 0 AND !$see_all) {
						highchart($rsChartPCoordByGroup, 
											"Perspective coordination by group", "", 
											"Group", "Perspective coordination scores", "", 
											array("GROUP", "N", "P_COORD"), "", "", 6, ""); 
					}
						
          if (mysql_num_rows($rsChartPCoordByManLevel) > 0) {
						highchart($rsChartPCoordByManLevel, 
										"Perspective coordination by management level", "", 
                    "Management level", "Perspective coordination scores", "", 
                    array("MAN_LEVEL", "N", "P_COORD"), "", "", 6, 
		""); 
					} ?>
          
          <div class="box">
            <h3 align="center">Levels of perspective coordination</h3>
            <table>
              <tr>
                <td class="tablehead_border" width="90" align="center"><strong>Score range</strong></td>
                <td class="tablehead_border" align="center"><strong>Description</strong></td>
              </tr>
              <? while ($row_rsScaleLdmaPc = mysql_fetch_assoc($rsScaleLdmaPc)) { ?>
              <tr>
                <td align="center"><? 
                  echo $row_rsScaleLdmaPc['score_low']." - ".$row_rsScaleLdmaPc['score_high']; ?></td>
                <td><? echo $row_rsScaleLdmaPc['comment_bulk']; ?></td>
              </tr>
              <? } ?>
            </table>
          </div>            
          
          <p>&nbsp;</p>
          
          </div>
        
        <? } if (checkModule('dm_process')) { ?>
        <div class="TabbedPanelsContent">												<!-- DECISION-MAKING PROCESS SCALE -->
               
					<? echo $boilerplate['report_bc_dmprocess']; ?>
           
            
          <? 
          if (mysql_num_rows($rsChartDmpByTestTime) > 0) {
            highchart($rsChartDmpByTestTime, 
                  "Decision-making process by test time", "", 
                  "Test time", "Decision-making process score", "Time ", 
                  array("TEST_TIME", "N", "DM_SCORE"),
                  "", "", 7, "");
          }
          
          if (mysql_num_rows($rsChartDmpByLasRange) > 0) {
            highchart($rsChartDmpByLasRange, 
                  "Decision-making process by Lectical level", "", 
                  "Lectical score range", "Decision-making process score", "", 
                  array("LAS_RANGE", "N", "DM_SCORE"),
                  "", "", 7, "");
          }
          
          if (mysql_num_rows($rsChartDmpByGroup) > 0 AND !$see_all) {
            highchart($rsChartDmpByGroup, 
                    "Decision-making process by group", "", 
                    "Group", "Decision-making process score", "", 
                    array("GROUP", "N", "DM_SCORE"),
                    "", "", 7, "");
          }
            
          if (mysql_num_rows($rsChartDmpByManLevel) > 0) {
            highchart($rsChartDmpByManLevel, 
                  "Decision-making process by management level", "", 
                  "Management level", "Decision-making process score", "", 
                  array("MAN_LEVEL", "N", "DM_SCORE"),
                  "", "", 7, "");
          } ?>
          
          <div class="box">
            <h3 align="center">Levels of decision-making process</h3>
            <table>
              <tr>
                <td class="tablehead_border" width="100"><div align="center"><strong>Score range</strong></div></td>
                <td class="tablehead_border" align="center"><strong>Description</strong></td>
              </tr>
              <? while ($row_rsScaleLdmaDmp = mysql_fetch_assoc($rsScaleLdmaDmp)) { ?>
              <tr>
                <td align="center"><? 
                  echo $row_rsScaleLdmaDmp['score_low']." - ".$row_rsScaleLdmaDmp['score_high']; ?></td>
                <td><? echo $row_rsScaleLdmaDmp['comment_bulk']; ?></td>
              </tr>
              <? } ?>
            </table>
          </div>      
          
        </div>
            
            
        <? } if (checkModule('collab')) { ?>
          <div class="TabbedPanelsContent">												<!-- COLLABORATIVE CAPACITY SCALE -->
             
          <? echo $boilerplate['report_bc_collab']; ?>
          
          <? 
          if (mysql_num_rows($rsChartCollabByTestTime) > 0) {
            highchart($rsChartCollabByTestTime, 
                  "Collaborative capacity by test time", "", 
                  "Test time", "Collaborative capacity score", "Time ", 
                  array("TEST_TIME", "N", "COLLAB"),
                  "", "", 6, "");
          }
          
          if (mysql_num_rows($rsChartCollabByLasRange) > 0) {
            highchart($rsChartCollabByLasRange, 
                  "Collaborative capacity by Lectical level", "", 
                  "Lectical score range", "Collaborative capacity score", "", 
                  array("LAS_RANGE", "N", "COLLAB"),
                  "", "", 6, "");
          }
          
          if (mysql_num_rows($rsChartCollabByGroup) > 0 AND !$see_all) {
              highchart($rsChartCollabByGroup, 
                    "Collaborative capacity by group", "", 
                    "Group", "Collaborative capacity score", "", 
                    array("GROUP", "N", "COLLAB"),
                    "", "", 6, "");
          }
            
          if (mysql_num_rows($rsChartCollabByManLevel) > 0) {
            highchart($rsChartCollabByManLevel, 
                  "Collaborative capacity by management level", "", 
                  "Management level", "Collaborative capacity score", "", 
                  array("MAN_LEVEL", "N", "COLLAB"),
                  "", "", 6, "");
          } ?>
          
          <div class="box">
            <h3 align="center">Levels of collaborative capacity</h3>
            <table>
              <tr>
                <td class="tablehead_border" width="100"><div align="center"><strong>Score range</strong></div></td>
                <td class="tablehead_border" align="center"><strong>Description</strong></td>
              </tr>
              <? while ($row_rsScaleLdmaCc = mysql_fetch_assoc($rsScaleLdmaCc)) { ?>
              <tr>
                <td align="center"><? 
                  echo $row_rsScaleLdmaCc['score_low']." - ".$row_rsScaleLdmaCc['score_high']; ?></td>
                <td><? echo $row_rsScaleLdmaCc['comment_bulk']; ?></td>
              </tr>
              <? } ?>
            </table>
          </div>
      		
        </div>
          
        
        <? } if (checkModule('context')) { ?>
        <div class="TabbedPanelsContent">												<!-- CONTEXTUAL THINKING -->
        
			<? echo str_replace("[N]", $row_rsImportantResults['count'], 
															$boilerplate['report_bc_context_1']); ?>
                
      <? 
          
      // CONTEXTUAL THINKING BAR GRAPHS (THIS TIME) 
      // pulls from a special recordset with each time of test taken.
      
      $context_codes = array(342, 203, 226, 341, 406);
      // For each category of context rating...
      foreach ($context_codes as $code) {
        // if that rating has a valid result...
        if ($row_rsImportantResults["context".$code] > 0) {
          // Decide what to call this row...
          $label = ucfirst($row_rsLaCodeDescriptions['code_name'.$code]); 
          // Label on the right side of the bar
          $value = $row_rsImportantResults["context".$code];
          // Length of this graph bar
          $percentage = round($row_rsImportantResults["context".$code] * 100 / 6)+1;
          // Draw the row. (See the function code above - it's short and sweet.)
          echo htmlBarGraphRow($label, " ", $value, $percentage, 'c33c2c'); 
        }
        
      } ?>  
              
              
      <? echo $boilerplate['report_bc_context_2']; ?> 
       
        
      <? 
      if (mysql_num_rows($rsChartContextByLasRange) > 0) {
				highchart($rsChartContextByLasRange, 
							"Contextual thinking by Lectical level", "", 
							"Lectical score range", "Contextual thinking score", "", 
							array("LAS_RANGE", "N", "CONTEXT_SCORE"),
							"", "", 7, "");
			}
			
      if (mysql_num_rows($rsChartContextByTestTime) > 0) {
				highchart($rsChartContextByTestTime, 
							"Contextual thinking by test time", "", 
							"Test time", "Contextual thinking score", "Time ", 
							array("TEST_TIME", "N", "CONTEXT_SCORE"),
							"", "", 7, "");
			}
			
      if (mysql_num_rows($rsChartContextByGroup) > 0 AND !$see_all) {
				highchart($rsChartContextByGroup, 
								"Contextual thinking by group", "", 
								"Group", "Contextual thinking score", "", 
								array("GROUP", "N", "CONTEXT_SCORE"),
								"", "", 7, "");
			}
				
      if (mysql_num_rows($rsChartContextByManLevel) > 0) {
				highchart($rsChartContextByManLevel, 
							"Contextual thinking by management level", "", 
							"Management level", "Contextual thinking score", "", 
							array("MAN_LEVEL", "N", "CONTEXT_SCORE"),
							"", "", 7, "");
			} ?>
      
      
      <div class = "box">
      <h3 align="center">Levels of contextual thinking</h3>
      <table>
        <tr>
          <td class="tablehead_border" width="100"><div align="center"><strong>Score range</strong></div></td>
          <td class="tablehead_border" align="center"><strong>Description</strong></td>
        </tr>
        <? while ($row_rsScaleLdmaCt = mysql_fetch_assoc($rsScaleLdmaCt)) { ?>
        <tr>
          <td align="center"><? 
            echo $row_rsScaleLdmaCt['score_low']." - ".$row_rsScaleLdmaCt['score_high']; ?></td>
          <td><? echo $row_rsScaleLdmaCt['comment_bulk']; ?></td>
        </tr>
        <? } ?>
      </table>
          </div>
              
        </div>
        
        <? } if (checkModule('lsua_surveys')) { ?>
        <div class="TabbedPanelsContent">												<!-- LSUA OPTIMISM SURVEY -->
              
          <h2>Optimism survey</h2>
          
          <? echo $boilerplate['report_bc_dos_intro']; ?>
          
          
          <div id="CollapsiblePanel1" class="CollapsiblePanel">
            <div class="CollapsiblePanelTab">OPTIMISM LEVEL DESCRIPTIONS (click to view)</div>
            <div class="CollapsiblePanelContent">
              <h3>The average optimism survey score = 
                <? echo $row_rsOptimismOverall['OVERALL_OPTIMISM']; ?></h3>
              
              <? echo $boilerplate['report_bc_dos']; ?>
            </div>
          </div>
          
          <p>&nbsp;</p>
          
          
      <? 
			$opt_total = array();
			$opt_low = array();
			$opt_lmed = array();
			$opt_hmed = array();
			$opt_high = array();
				
			while ($row_rsOptimismByTestTime = mysql_fetch_assoc($rsOptimismByTestTime)) { 
				$t = $row_rsOptimismByTestTime['TEST_TIME'];
				$opt_low[$t] = $row_rsOptimismByTestTime['N_low'];
				$opt_lmid[$t] = $row_rsOptimismByTestTime['N_lmid'];
				$opt_hmid[$t] = $row_rsOptimismByTestTime['N_hmid'];
				$opt_high[$t] = $row_rsOptimismByTestTime['N_high'];
				$opt_total[$t] = $row_rsOptimismByTestTime['N_total'];
			} 
			
			if (isset($t)) {  ?>
			
			<table>
				<tr class="tablehead">
					<td class="tablehead_knockout">Level of optimism</td>
					<? $i = 1; 
					while ($i <= $t) { ?>
							<td width="75" class="tablehead_knockout">Time <? echo $i; ?></td>
						<?
						$i ++;
					} ?>
				</tr>
				<tr>
					<td>&nbsp;</td>
					<? $i = 1; 
					while ($i <= $t) { ?>
							<td align="center">N = <? echo $opt_total[$i]; ?></td>
						<?
						$i ++;
					} ?>
				</tr>
				<tr>
					<td>High level of pessimism</td>
					<? $i = 1;
					// make a column for each test time in existence
					while ($i <= $t) { ?>
							<td align="center"><? 
							if ($opt_low[$i] > 0) {
								echo str_pad(round($opt_low[$i]*100/$opt_total[$i],0), 2, '0', STR_PAD_LEFT); ?>% 
								(<? echo str_pad($opt_low[$i], 2, '0', STR_PAD_LEFT); ?>) <?
							} ?>
							</td>
						<?
						$i ++;
					} ?>
				</tr>
				<tr>
					<td>Moderate pessimism</td>
					<? $i = 1;
					// make a column for each test time in existence
					while ($i <= $t) { ?>
							<td align="center"><? 
							if ($opt_lmid[$i] > 0) {
								echo str_pad(round($opt_lmid[$i]*100/$opt_total[$i],0), 2, '0', STR_PAD_LEFT); ?>% 
								(<? echo str_pad($opt_lmid[$i], 2, '0', STR_PAD_LEFT); ?>) <? 
							} ?>
							</td>
						<?
						$i ++;
					} ?>
				</tr>
				<tr>
					<td>Moderate optimism</td>
					<? $i = 1;
					// make a column for each test time in existence
					while ($i <= $t) { ?>
							<td align="center"><? 
							if ($opt_hmid[$i] > 0) {
								echo str_pad(round($opt_hmid[$i]*100/$opt_total[$i],0), 2, '0', STR_PAD_LEFT); ?>% 
								(<? echo str_pad($opt_hmid[$i], 2, '0', STR_PAD_LEFT); ?>) <? 
							} ?>
							</td>
						<?
						$i ++;
					} ?>
				</tr>
				<tr>
					<td>High level of optimism</td>
					<? $i = 1;
					// make a column for each test time in existence
					while ($i <= $t) { ?>
							<td align="center"><? 
							if ($opt_high[$i] > 0) {
								echo str_pad(round($opt_high[$i]*100/$opt_total[$i],0), 2, '0', STR_PAD_LEFT); ?>% 
								(<? echo str_pad($opt_high[$i], 2, '0', STR_PAD_LEFT); ?>) <? 
							} ?>
							</td>
						<?
						$i ++;
					} ?>
				</tr>
			</table>
			<? } // close the table (only shows if there's data to show) ?>
			
			
			
			<h3>Optimism by demographic</h3>
			<p> The following charts show the relation between optimism and <em>test time</em>, <em>management level</em>, and <em>lectical level</em>. To learn more about management levels, click on &quot;About our general management levels&quot; below.</p>
                
                
			<? 
      if (mysql_num_rows($rsChartOptByGroup) > 0 AND !$see_all) {
        highchart($rsChartOptByGroup, 
          "Level of optimism by group", "", 
          "Group", "Optimism (average)", "", 
          array("GROUP", "N", "OPT_OVERALL"),
          "", 2, 5, "");
      } ?>
      
      <p>&nbsp;</p>
        
      <?  
      if (mysql_num_rows($rsChartOptByTestTime) > 0) { 
        highchart($rsChartOptByTestTime, 
          "Level of optimism by test time", "", 
          "Test time", "Optimism (average)", "Time ", 
          array("TEST_TIME", "N", "OPT_OVERALL"),
          "", 2, 5, "");
      } ?>
      
      <div id="CollapsiblePanelMOPT" class="CollapsiblePanel">
      <? if (checkModule('management')) { ?>
        <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
        <div class="CollapsiblePanelContent">
          <? echo $boilerplate['report_client_manlevel_desc']; ?>
        </div>
      <? } // END checkModule condition. ?>
      </div>
      
      
      <? 
      if (mysql_num_rows($rsChartOptByManLevel) > 0) { 
        highchart($rsChartOptByManLevel, 
          "Level of optimism by management level", "", 
          "Management level", "Optimism (average)", "", 
          array("MAN_LEVEL", "N", "OPT_OVERALL"),
          "", 2, 5, "");
      } ?>
      
      <p>&nbsp;</p>
        
      <? 
      if (mysql_num_rows($rsChartOptByManLevel) > 0 AND $type == "test") { 
        highchart($rsChartOptByLasRange, 
          "Level of optimism by Lectical range", "", 
          "Lectical range", "Optimism (average)", "", 
          array("LAS_RANGE", "N", "OPT_OVERALL"),
          "", 2, 5, "");
      } ?>
          
          
          <script type="text/javascript">
          var CollapsiblePanelMOPT = new Spry.Widget.CollapsiblePanel("CollapsiblePanelMOPT");
					var CollapsiblePanel1 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel1");
          </script>
          
          
          </div>
        
			<? } if (checkModule('lsua_surveys')) { ?>
      <div class="TabbedPanelsContent">												<!-- LSUA CHARACTER SURVEY -->
        
        <h2>Character survey</h2>
        
        <? echo $boilerplate['report_bc_dcs_intro']; ?>
        
        <div id="CollapsiblePanel7" class="CollapsiblePanel">
          <div class="CollapsiblePanelTab">CHARACTER LEVEL DESCRIPTIONS (click to view)</div>
          <div class="CollapsiblePanelContent">
          
          <? 
          $bp_character = $boilerplate['report_bc_dcs'];
          $bp_character = str_replace("[INTEGRITY_AVG]", 
																				$row_rsCharOverall['integrity'], $bp_character);
          $bp_character = str_replace("[PERSISTENCE_AVG]", 
																				$row_rsCharOverall['persistence'], $bp_character);
          $bp_character = str_replace("[LEARNER_AVG]", 
																				$row_rsCharOverall['learner'], $bp_character);
          $bp_character = str_replace("[CHALLENGE_AVG]", 
																				$row_rsCharOverall['challenge'], $bp_character);
          $bp_character = str_replace("[EMOTION_AVG]", 
																				$row_rsCharOverall['emotion'], $bp_character);
          echo $bp_character;
          ?>
          
          </div>
        </div>
        
        <p>&nbsp;</p>
        
        <p>
          <?
        // CHARACTER BAR GRAPHS (THIS TIME) 
        // pulls from a special recordset with each time of test taken.
        
        $character_criterion = array("persistence", "learner", "integrity", "emotion", "challenge");
        $character_prettytitles = array("Persistence", "Openness to learning", "Integrity", 
                                        "Emotional awareness", "Level of comfort with challenge");
        $count = 0;
        $i = 0;
        
        // For each category of argumentation rating...
        while (isset($character_criterion[$count])) {
          // if that rating has a valid result...
          if ($row_rsCharacterOverTime[$character_criterion[$count]] > 0) {
            // Decide what to call this row...
            $label = $character_prettytitles[$count]; 
            
            // Calculate length of this row...
            $rating = (100 * $row_rsCharacterOverTime[$character_criterion[$count]] / 5);
            
            // what to say on the right side of the bar
            $rounded = round($row_rsCharacterOverTime[$character_criterion[$count]], 1);
            $rounded .= (substr_count($rounded, ".") == 0 ? ".0" : "");
            
            // decide what color to use...
            $color = $htmlBarGraphColors[$i];
            if (isset($primaryColor[$instrument_id_base]) AND $primaryColor[$instrument_id_base] <> "") 
            {	$color = $primaryColor[$instrument_id_base]; }
            
            // Draw the row. (See the function code above - it's short and sweet.)
            echo htmlBarGraphRow($label, " ", $rounded, $rating, $color); 
            
          }
          
          $count ++; // move on to the next argumentation criterion... 
        } ?>
        </p>
              
        <div id="CollapsiblePanelChar" class="CollapsiblePanel">
          <div class="CollapsiblePanelTab">AVERAGE CHARACTER SCORES BY TEST TIME (click to view)</div>
        <div class="CollapsiblePanelContent">
        
        
            <? 
            // CHARACTER BAR GRAPHS OVER TIME
            // pulls from a special recordset with each time of test taken.
            
            $character_criterion = array("persistence", "learner", "integrity", "emotion", "challenge");
            $character_prettytitles = array("Persistence", "Openness to learning", "Integrity", 
                                            "Emotional awareness", "Level of comfort with challenge");
            $count = 0;
            
            // For each category of argumentation rating...
            while (isset($character_criterion[$count])) {
              // if that rating has a valid result...
              if ($row_rsCharacterOverTime[$character_criterion[$count]] > 0) {
                $i = 0;
                // Loop through each test time..
                do { 
                  // Decide what to call this row...
                  $label = "";
                  if ($i <> 0 ) {
                    $label = "";
                  } else {
                    
                    $label = $character_prettytitles[$count]; 
                  }
                  
                  // Calculate length of this row...
                  $rating = (100 * $row_rsCharacterOverTime[$character_criterion[$count]] / 5);
                  
                  // what to say on the right side of the bar
                  $rounded = round($row_rsCharacterOverTime[$character_criterion[$count]], 1);
                  $rounded .= (substr_count($rounded, ".") == 0 ? ".0" : "");
                  
                  // decide what color to use...
                  $color = $htmlBarGraphColors[$i];
                  
                  // Draw the row. (See the function code above - it's short and sweet.)
                  echo htmlBarGraphRow($label, "T ".$row_rsCharacterOverTime['test_time'], 
																			 $rounded, $rating, $color); 
                  $i ++;
                } while ($row_rsCharacterOverTime = mysql_fetch_assoc($rsCharacterOverTime));
                
                // Reset the recordset so that we can look in the next category...
                $rows = mysql_num_rows($rsCharacterOverTime);
                if ($rows > 0) 
                { mysql_data_seek($rsCharacterOverTime, 0);
                  $row_rsCharacterOverTime = mysql_fetch_assoc($rsCharacterOverTime); 
                }
              } 
              
              // Blank separator: one vertical bar-height?>
              <table class="TableBarGraph"><tr><th>&nbsp;</th></tr></table>
              <? 
              $count ++; // move on to the next argumentation criterion... 
            } ?>
        		
          </div>
        </div>
    		
				<script type="text/javascript">
          var CollapsiblePanelChar = new Spry.Widget.CollapsiblePanel("CollapsiblePanelChar");
          var CollapsiblePanel7 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel7");
        </script>
          
      </div>
          
        
        
			<? } if (checkModule('sms_score')) { ?>
      <div class="TabbedPanelsContent">												<!-- SMS SCORES -->
          
				<? echo $boilerplate['client_report_sms_scores_intro']; ?>
        
        <? 
          highchart($rsChartSmsByTime, "Mindfulness scores by test time", "", 
                  "Test time", "SMS score", "Time ", 
                  array("TEST_TIME", "N", "SMS_SCORE"), "", 1, 6);
        ?>
        
        <? 
          highchart($rsChartSmsByGroup, "Mindfulness scores by group", "", 
                  "Group", "SMS score", "", 
                  array("GROUP", "N", "SMS_SCORE"), "", 1, 6);
        ?>
            
      </div>
        
        
        
        
        
		<? } if (checkModule('argumentation')) { ?>
    <div class="TabbedPanelsContent">													<!-- ARGUMENTATION RESULTS -->
      
			<? 
      $arg = $boilerplate['client_report_argumentation']; 
      if ($instrument_id == "SMA" OR $instrument_id == "SMS" OR $instrument_id == "SMJ") { 
        $arg = $boilerplate['client_report_sm_argumentation']; 
      }
      $arg = explode("[PHP]", $arg); 
      
      echo $arg[0];
      
      // ARGUMENTATION BAR GRAPHS (THIS TIME) 
      // pulls from a special recordset with each time of test taken.
      $arg_aspects = array("probe", "framing", "clarity", "fragment", "persuasiveness");
      // Omitted: "relevance_scenario", "repetitive", "on_point", "conciseness", "jargon",
      
      $arg_labels = array();
      while ($row = mysql_fetch_assoc($rsArgumentation)) {
      	if ($row['argumentationkey'] == 9) { $arg_labels = $row; }
      }

      $i = 0;
      
      // For each category of argumentation rating...
      foreach ($arg_aspects as $aspect) { 
        // if that rating has a valid result...
        if ($row_rsImportantResults[$aspect] > 0) {
          // Decide what to call this row...
          // $label = getMenuText($row_rsLaArg, $rsLaArg, "argumentationkey", 9, $aspect); 
          $label = $arg_labels[$aspect];
          
          // Calculate length of this row...
          $rating = (100 * $row_rsImportantResults[$aspect] / 5);
          
          // what to say on the right side of the bar
          $rounded = round($row_rsImportantResults[$aspect], 1);
          $rounded .= (substr_count($rounded, ".") == 0 ? ".0" : "");
          
          // decide what color to use...
          $color = explode(' ', $chart_colors[$instrument_id_base]);
          $color = $color[0];
          
          // Draw the row. (See the function code above - it's short and sweet.)
          echo htmlBarGraphRow($label, " ", $rounded, $rating, $color);
        }
      } 
      
      echo $arg[1];
      
      ?>
      <div id="CollapsiblePanel2" class="CollapsiblePanel">
        <div class="CollapsiblePanelTab">ARGUMENTATION QUALITY OVER TIME (click to view)</div>
        <div class="CollapsiblePanelContent">
          <?
          // ARGUMENTATION BAR GRAPHS OVER TIME
          // pulls from a special recordset with each time of test taken.
          $arg_aspects = array("probe", "framing", "clarity", "fragment", "persuasiveness");
          // "relevance_scenario", "repetitive", "on_point", "conciseness", "jargon", 
          
          // For each category of argumentation rating...
          foreach ($arg_aspects as $aspect) { 
            // if that rating has a valid result...
            if ($row_rsLaDataOverTime[$aspect] > 0) {
              $i = 0;
              // Loop through each test time..
              do { 
                // Decide what to call this row...
                $label = "";
                if ($i == 0) { 
                  $label = $arg_labels[$aspect];
                }
                // Calculate length of this row...
                $rating = (100 * $row_rsLaDataOverTime[$aspect] / 5);
                // what to say on the right side of the bar
                $rounded = round($row_rsLaDataOverTime[$aspect], 1);
                $rounded .= (substr_count($rounded, ".") == 0 ? ".0" : "");
                // Draw the row. (See the function code above - it's short and sweet.)
                echo htmlBarGraphRow($label, "T ".$row_rsLaDataOverTime['test_time'], 
                  $rounded, $rating, $htmlBarGraphColors[$i]); 
                $i ++;
              } while ($row_rsLaDataOverTime = mysql_fetch_assoc($rsLaDataOverTime));
              
              // Reset the recordset so that we can look in the next category...
              if (mysql_num_rows($rsLaDataOverTime) > 0) { 
                mysql_data_seek($rsLaDataOverTime, 0);
                $row_rsLaDataOverTime = mysql_fetch_assoc($rsLaDataOverTime); 
              }
            } 
            
            // Blank separator: one vertical bar-height 
            ?><table class="TableBarGraph"><tr><th>&nbsp;</th></tr></table><? 
          } ?>
        </div>
      </div><?
      
      echo $arg[2];
      
      // 3 Highcharts (Javascript-based)
      
      if (mysql_num_rows($rsChartArgByTestTime) > 0) {
        
        // If there's a mechanics score, show mechanics results.
        if ($row_rsImportantResults['scale_mechanics'] > 0) { 
        
          highchart($rsChartArgByTestTime, 
                "Argument scale score by test time", "", 
                "Test time", "Quality of argument (average)", "Time ", 
                array("TEST_TIME", "N", "ARG_OVERALL"), "", 2, 5); 
        
          highchart($rsChartArgByTestTime, 
                "Mechanics scale score by test time", "", 
                "Test time", "Quality of mechanics (average)", "Time ", 
                array("TEST_TIME", "N", "ARG_SCALE_MECHANICS"), "", 2, 5); 
        
        } else {
          
          highchart($rsChartArgByTestTime, 
                "Quality of argumentation by test time", "", 
                "Test time", "Quality of argumentation (average)", "Time ", 
                array("TEST_TIME", "N", "ARG_OVERALL"), "", 2, 5); 
        
        }
      }
      
      if (mysql_num_rows($rsChartArgByLasRange) > 0) {
        highchart($rsChartArgByLasRange, 
                "Quality of argumentation by Lectical range", "", 
                "Lectical range", "Quality of argumentation (average)", "", 
                array("LAS_RANGE", "N", "ARG_OVERALL"), "", 2, 5); 
      }
      
			$allowed = " LIMA ";
      if (mysql_num_rows($rsChartArgByGroup) > 0 AND (!$see_all OR strpos($allowed, $instrument_id))) {
        
        if ($row_rsImportantResults['scale_mechanics'] > 0) { 
          
          highchart($rsChartArgByGroup, 
                  "Argument scale score by group", "", 
                  "Group", "Quality of argument (average)", "", 
                  array("GROUP", "N", "ARG_OVERALL"), "", 2, 5); 
        
          highchart($rsChartArgByGroup, 
                  "Mechanics scale score by group", "", 
                  "Group", "Quality of mechanics (average)", "", 
                  array("GROUP", "N", "ARG_SCALE_MECHANICS"), "", 2, 5); 
        
        } else {
          
          highchart($rsChartArgByGroup, 
                  "Quality of argumentation by group", "", 
                  "Group", "Quality of argumentation (average)", "", 
                  array("GROUP", "N", "ARG_OVERALL"), "", 2, 5); 
        
        }
      } 
      
      // "About our management levels" panel
      
      ?>
      <div id="CollapsiblePanel5" class="CollapsiblePanel">
      <? if (checkModule('management')) { ?>
        <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
        <div class="CollapsiblePanelContent">
          <? echo $boilerplate['report_client_manlevel_desc']; ?>
        </div>
      <? } // END checkModule condition. ?>
      </div>
      
      <? 
      if (mysql_num_rows($rsChartArgByManLevel) > 0) {
        highchart($rsChartArgByManLevel, 
              "Quality of argumentation by management level", "", 
              "Management level", "Quality of argumentation (average)", "", 
              array("MAN_LEVEL", "N", "ARG_OVERALL"), "", 2, 5); 
      } 
      
      echo $arg[3]; ?>
    	
			<script type="text/javascript">
				var CollapsiblePanel2 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel2");
				var CollapsiblePanel5 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel5");
      </script>
      
    </div>
    
    
    
    <? } if (checkModule('levels_tasks')) { ?>								<!-- LEVELS AND TASKS -->
    
    <div class="TabbedPanelsContent">
    
				<?
        $text = explode("[CHART]", $boilerplate['report_levelstasks']);
        echo linknewtab($text[0]);
        ?>
      
        <? 
        highchart($rsChartOldLect, "Lectical scores by management level", 
          "Original data from the 2002-2006 NSA study", 
          "Management level", "Lectical score", "", 
          array("MAN_LEVEL", "N", "LASNUMBER"), "", 10, 14, "https://www.devtestservice.org/images/backgrounds/la_chart_bg_manlevel_task_demands.png", 
          "column_small_left"); ?>
        
        <? echo linknewtab($text[1]); ?>
        
				<? 
        highchart($rsChartAllLectByManLevel, "Lectical scores by management level", 
          "Our current \"live\" data", 
          "Management level", "Lectical score", "", 
          array("MAN_LEVEL", "N", "LASNUMBER"), "", 10, 14, "https://www.devtestservice.org/images/backgrounds/la_chart_bg_manlevel_task_demands.png",
          "column_small_right"); ?>
          
       	<? echo linknewtab($text[2]); ?>  
          
        <div id="CollapsiblePanel95" class="CollapsiblePanel">
          <div class="CollapsiblePanelTab">ABOUT OUR GENERAL MANAGEMENT LEVELS (click to view)</div>
          <div class="CollapsiblePanelContent">
            <? echo $boilerplate['report_client_manlevel_desc']; ?>
          </div>
        </div>
        
        <script type="text/javascript">
						var CollapsiblePanel95 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel95"<? 
				// Have to manually set each collapsible panel to be open by default in print view. 
				if (isset($_GET['printerv']) AND $_GET['printerv'] == "yes") {
						?>, {contentIsOpen:true}<?
				} ?>);
				</script>
        
        <p>&nbsp;</p>
    
    </div>
    
      
		<? } if (checkModule('cheating') AND (count($cheater_name) > 0 
                                             OR count($apathete_name) > 0)
                                             OR count($secretive_name) > 0) { ?>
    <div class="TabbedPanelsContent">												<!-- LIST OF "CHEATERS" -->
      
      <? if (count($cheater_name) > 0) { ?>
        <h3>Individuals who appeared to make extensive use of outside sources</h3>
        <table>
          <?
          for ($i = 0; isset($cheater_name[$i]); $i ++) { ?>
            <tr>
              <td>
                <a href="report_individual.php?lakey=<? echo $cheater_lakey[$i]; ?>">
                <? echo $cheater_name[$i]; ?></a>
              </td>
            </tr><?
          } ?>
        </table>
      <? } ?>
      
      <? if (count($apathete_name) > 0) { ?>
        <h3>Individuals who did not appear to give their best effort</h3>
        <table>
          <?
          for ($i = 0; isset($apathete_name[$i]); $i ++) { ?>
            <tr>
              <td>
                <a href="report_individual.php?lakey=<? echo $apathete_lakey[$i]; ?>">
                <? echo $apathete_name[$i]; ?></a>
              </td>
            </tr><?
          } ?>
        </table>
      <? } ?>
      
      <? if (count($secretive_name) > 0) { ?>
        <h3>Individuals who did not give the client permission to view their report</h3>
        <table>
          <?
          for ($i = 0; isset($secretive_name[$i]); $i ++) { ?>
            <tr>
              <td>
                <a href="report_individual.php?lakey=<? echo $secretive_lakey[$i]; ?>">
                <? echo $secretive_name[$i]; ?></a>
              </td>
            </tr><?
          } ?>
        </table>
      <? } ?>
      
    </div>
        
        
      
      
      
      <? } // end the checkModule "if" statement ?>

      </div> <!-- close the tabbedPanels primary div -->
		<br class="clearfloat" />
    </div>
    
    
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    
    
<script type="text/javascript">
	// SPRY for the primary tabbed panel
	var TabbedPanels1 = new <?php ?>Spry.Widget.TabbedPanels("TabbedPanels1", {defaultTab:0});

	// All other SPRY elements, contained within the sections of the tabbed panel, are declared in mini-script at the end of the respective sections.
	var CollapsiblePanel8 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel8");
</script>



  <!-- InstanceEndEditable -->
  <!-- end #mainContent --></div>
  <!-- This clearing element should immediately follow the #mainContent div in order to force the #container div to contain all child floats --><br class="clearfloat" />
  <!-- end #container -->
</div>
</body>
<!-- InstanceEnd --></html>
