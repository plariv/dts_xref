<?php 
require_once('../Connections/Assessment.php'); 
require_once( "../WA_SecurityAssist/Helper_PHP.php" ); 
// General_custom_functions now includes SQLstr(), my safer version of GetSQLValueString().
include_once '../includes/dts_functions.php';	
mysql_select_db($database_Assessment, $Assessment);

if (!WA_Auth_RulePasses("Logged in as teacher")) { WA_Auth_RestrictAccess("../security/logIn.php"); } 
$userkey = $_SESSION['log_userkey'];

// if user hasn't chosen an instrument_id, force them to do so
if (!isset($_SESSION['instrument_id'])) { WA_Auth_RestrictAccess("../select_instrument.php"); }
$instrument_id = $_SESSION['instrument_id'];

$filter_instrument_id = " AND (d.instrument_id = ".
	SQLstr($instrument_id, "text").
	" OR d.instrument_id = ".
	SQLstr($instrument_id."_JOURNAL", "text").") ";

$emailkey = 0;
if (isset($_GET['emailkey'])) {
	$emailkey = $_GET['emailkey'];
}



// Modes: generic, account, assignment. By default, assume mode = 'generic'.
// When users are directed to this page, it should be with a URL mode variable: ?mode=assignment
$mode = "generic";
if (isset($_GET['mode'])) {
	$mode = $_GET['mode'];
} else if (isset($_POST['mode'])) {
	$mode = $_POST['mode'];
} else {
	$mode = "generic";
}

// Steps: create, preview, send. Assume step = CREATE until told otherwise.
$step = "create";
if (isset($_POST['step'])) {
	if ($_POST['step'] == "preview") {
		$step = "preview";
	}
	if ($_POST['step'] == "send") {
		if (isset($_POST['DRAFT'])) { $step = "preview"; }
		else { $step = "send"; }
	}
}


$group = (isset($_POST['group']) ? $_POST['group'] : "");
$assignment = (isset($_POST['assignment']) ? $_POST['assignment'] : "");
$message = (isset($_POST['email_message']) ? $_POST['email_message'] : "");

$currentPage = $_SERVER['PHP_SELF'];
$editFormAction = $_SERVER['PHP_SELF'];
if (isset($_SERVER['QUERY_STRING'])) {
  $editFormAction .= "?" . htmlentities($_SERVER['QUERY_STRING']);
}




// Fetch information on the logged-in bulkcustomer

$query_rsBC = sprintf("SELECT bulkcustomerinfo.bulkcustomerkey, registrants.firstname, registrants.lastname, registrants.user_level, registrants.email, registrants.company FROM bulkcustomerinfo, registrants WHERE bulkcustomerinfo.bulkcustomerkey = %s AND bulkcustomerinfo.bulkcustomerkey = registrants.userkey",
		SQLstr($userkey, "int"));
$rsBC = mysql_query($query_rsBC, $Assessment) or die(mysql_error());
$row_rsBC = mysql_fetch_assoc($rsBC);
$totalRows_rsBC = mysql_num_rows($rsBC);




//							GET THE LIST OF RECIPIENTS, PREPARE THE EMAIL (if previewing or sending)

if ($step == "preview" OR $step == "send") {
	
	// 									Get info about this assignment (if an assignment was selected) 
	
	if (isset($_POST['assignment']) AND $_POST['assignment'] <> "") {
		$query_rsThisAssignment = sprintf("SELECT a.*
			FROM la_assignments a
				LEFT JOIN la_dilemmas d ON a.assign_dilemmakey = d.dilemmakey 
				LEFT JOIN emails e ON a.assignmentkey = e.assignmentkey 
			WHERE a.assignmentkey = %s ", 
				SQLstr($_POST['assignment'], "int"));
		$rsThisAssignment = mysql_query($query_rsThisAssignment, $Assessment) or die("rsAssignments: ".mysql_error());
		$row_rsThisAssignment = mysql_fetch_assoc($rsThisAssignment);
		$totalRows_rsThisAssignment = mysql_num_rows($rsThisAssignment);
	}
	
	// Prepare boilerplate text for emails
	$rsBp = mysql_query("SELECT * FROM la_boilerplate WHERE type = 'admin'") or die("ERROR: ".mysql_error());
	$bp = array();
	while ($row = mysql_fetch_assoc($rsBp)) { $bp[$row['name']] = $row['la_boilerplate_text']; }
	
	
	// 									Query for the list of recipients 
	
	// The basic query depends on whether a group or an assignment was specified. 
	if (isset($_POST['assignment']) AND $_POST['assignment'] <> "") {
		// Assignment email: fetch list of user info for this assignment, 
		// WHERE user has not yet started the assignment.
		$query = sprintf("SELECT r.userkey, r.firstname, r.lastname, r.email, 
				r.register_date, r.group, r.reset, r.last_login, man.man_level  
			FROM la_assignments a 
				JOIN students_assignments sa ON a.assignmentkey = sa.assignmentkey
				JOIN registrants r ON sa.userkey = r.userkey
				LEFT JOIN demogs_man_level man ON r.manlevelkey = man.manlevelkey
				LEFT JOIN la_data d ON r.userkey = d.userkey AND a.assignmentkey = d.assignmentkey
			WHERE a.bulkcustomerkey = %s AND a.assignmentkey = %s AND d.lakey IS NULL ", 
				SQLstr($userkey, 'int'),
				SQLstr($_POST['assignment'], "int"));
	} else if (isset($_POST['group']) AND $_POST['group'] <> "") {
		$query = sprintf("SELECT 
				r.userkey, r.firstname, r.lastname, r.email, r.register_date, r.reset, r.group, 
				r.user_name, r.password, man.man_level, r.last_login 
			FROM registrants r 
				LEFT JOIN demogs_man_level man ON r.manlevelkey = man.manlevelkey
			WHERE r.bulkuserkey = %s AND r.group = %s", 
				SQLstr($userkey, 'int'),
				SQLstr($_POST['group'], "text"));
	} else {
		// if neither an assignment nor a group was chosen, then reset the page 
		error_log("ERROR - neither assignment nor group was specified for emailing, from user ".$userkey);
		die("ERROR - neither assignment nor group was specified for emailing. 
				Please contact our web admin and do not attempt to re-send this email.");
	}
	// If we're emailing people their account info, then narrow the query to just those people who we bulk-registered, rather than registered themselves.
	if ($mode == "account") {
		$query .= " AND r.reset = 1 ";
	}
	// 	For assignments and generic modes, get # of recipients who have not logged in yet or reset=1.
	if ($mode == "assignment" OR $mode == "generic") {
		$rsNoReset = mysql_query($query." AND r.reset = 1") or die(mysql_error()." Query: ".$query);
		$totalRows_rsNoReset = mysql_num_rows($rsNoReset);
		$rsNoLogin = mysql_query($query." AND r.last_login IS NULL") or die(mysql_error()." Query: ".$query);
		$totalRows_rsNoLogin = mysql_num_rows($rsNoLogin);
	}
	if ($mode == "assignment") {
		// Fetch the information about this assignment 
		$query_rsThisAssign = sprintf("SELECT * FROM la_assignments a WHERE a.assignmentkey = %s", 
				SQLstr($_POST['assignment'], "int"));
		$rsThisAssign = mysql_query($query_rsThisAssign, $Assessment) or 
				die("rsThisAssign: ".mysql_error());
		$row_rsThisAssign = mysql_fetch_assoc($rsThisAssign);
	}
	
	// Run the query for recipients.
	// echo str_replace("\n", "<br>", $query);
	$rsRecipients = mysql_query($query, $Assessment) or die(mysql_error()." Query: ".$query);
	$row_rsRecipients = mysql_fetch_assoc($rsRecipients);
	$totalRows_rsRecipients = mysql_num_rows($rsRecipients);
	
	
	// List of all intended email recipients: 
	$stringEmails = " \n ";
	do {
		$stringEmails .= $row_rsRecipients['email'].", \n";
	} while ($row_rsRecipients = mysql_fetch_assoc($rsRecipients));
	// (reset recipients recordset)
	if (mysql_num_rows($rsRecipients) > 0) {
		mysql_data_seek($rsRecipients, 0);
		$row_rsRecipients = mysql_fetch_assoc($rsRecipients); }
	// Number of intended recipients: 
	$numRecipients = $totalRows_rsRecipients;
	
	
	// 									Generate a preview of the email
	
	$email_subject = "";
	$email_body = "";
	
	if ($mode == "generic") { 
		$email_subject .= $bp['email_custommessage_title']; 
		$email_subject = str_replace("[CLIENT]", ucfirst($row_rsBC['company']), $email_subject);
		$email_body .= str_replace("<br>", "\n", $_POST['email_message']);
	}

	if ($mode == "account") {
		$email_subject .= $bp['email_accountinfo_title'];
		$email_subject = str_replace("[CLIENT]", ucfirst($row_rsBC['company']), $email_subject);
		
		$email_body .= $bp['email_accountinfo']; 
		$email_body = str_replace("[CLIENT]", ucfirst($row_rsBC['company']), $email_body);
		
		if ($_POST['email_message'] <> "") {
			$email_body .= " \n\n ".str_replace("<br>", "\n", $_POST['email_message']); 
		}
	}

	if ($mode == "assignment") {
		// Subject: something like "Your LDMA JOURNAL assignment for ClearImpact"
		$instrument_id_name = str_replace("_JOURNAL", " Journal", $row_rsThisAssign['instrument_id']);
		$instrument_id_base = str_replace("_JOURNAL", "", $row_rsThisAssign['instrument_id']);
		$duedate = date('F jS', strtotime($row_rsThisAssignment['date_end']));
		
		$email_subject .= $bp['email_assignment_title'];
		$email_subject = str_replace("[CLIENT]", ucfirst($row_rsBC['company']), $email_subject);
		$email_subject = str_replace("[INSTRUMENT_NAME]", $instrument_id_name, $email_subject);
		
		$email_body .= $bp['email_assignment'];
		$email_body = str_replace("[CLIENT]", ucfirst($row_rsBC['company']), $email_body);
		$email_body = str_replace("[INSTRUMENT_NAME]", $instrument_id_name, $email_body);
		$email_body = str_replace("[INSTRUMENT_BASE]", $instrument_id_base, $email_body);
		$email_body = str_replace("[DUEDATE]", $duedate, $email_body);
		
		if ($_POST['email_message'] <> "") {
			$email_body .= " \n\n ".str_replace("<br>", "\n", $_POST['email_message']);
		}	
	}
	
	// attach the signature onto the end of the body.
	$email_body .= $bp['email_signature'];
	
}	// End section: getting the list of participants and preparing the mail message






//		SAVE THIS EMAIL IN A TABLE			
// Every email is saved after it has been created. It is initially inserted as a draft, then upgraded to "sent" status when it has been sent successfully.

// If this email hasn't been entered into the table yet, create a table entry.
if ( (isset($_POST['DRAFT']) OR $step == "preview") AND $emailkey == 0) {
	$insertSQL = sprintf("INSERT INTO emails (userkey, instrument_id, email_type, email_message, subject, body, `group`, assignmentkey, recipient_list, status, date_created) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)",
			 SQLstr($userkey, "int"),
			 SQLstr($instrument_id, "text"),
			 SQLstr($mode, "text"), 
			 SQLstr($_POST['email_message'], "text"),
			 SQLstr($email_subject, "text"),
			 SQLstr($email_body, "text"),
			 // if an assignment was specified, don't refer to the POST group value; refer to the recordset of recipients to guess at the group.
			 SQLstr(($_POST['group'] <> "" ? $_POST['group'] : "none"), "text"),
			 SQLstr($_POST['assignment'], "text"),
			 SQLstr($stringEmails, "text"),
			 SQLstr(1, "int"), 
			 SQLstr(date('Y-m-d H:i'), "date"));
	$Result1 = mysql_query($insertSQL, $Assessment) or die(mysql_error());
	
	$emailkey = mysql_insert_id(); 
	$editFormAction .= (strpos($editFormAction, '?')) ? "&" : "?";
	$editFormAction .= "emailkey=".$emailkey;
}

// If this email already has been saved, then just update it.
if ($emailkey <> 0 AND (isset($_POST['DRAFT']) OR $step == "preview")) {
	$updateSQL = sprintf("UPDATE emails SET email_message=%s, subject=%s, body=%s, `group`=%s, assignmentkey=%s, recipient_list=%s WHERE emailkey = %s",
			 SQLstr($_POST['email_message'], "text"),
			 SQLstr($email_subject, "text"),
			 SQLstr($email_body, "text"),// if an assignment was specified, don't refer to the POST group value; refer to the recordset of recipients to guess at the group.
			 SQLstr(($_POST['group'] <> "" ? $_POST['group'] : $row_rsRecipients['group']), "text"),
			 SQLstr($_POST['assignment'], "text"),
			 SQLstr($stringEmails, "text"),
			 SQLstr($emailkey, "int"));
	$Result1 = mysql_query($updateSQL, $Assessment) or die(mysql_error());
}


if (isset($_POST['DRAFT'])) {
	header("Location: email_test_takers.php?message=draftsaved");
	exit();
}






//							SEND THE BATCH EMAILS				

if ($step == "send" AND !isset($_POST['DRAFT'])) {
	
	
	// 									Prepare all the information to be sent.
	
	// die("The message about to be sent: ".$email_body);
	
	// Predefined email addresses
	$dts = "service@lectica.org";
	$bulkc = $row_rsBC['email'];
	// List of recipients? Ready. That was fetched in the above IF statement.
	// Email content? ready, except that UN / PW information needs to be entered for each individual user in the case of account emails.
	
	// Send DTS a receipt that the batch email script is starting
	$result = sendEmail($dts, $dts, "", 
		"Starting ".$row_rsBC['company']." bulk email to group ".$row_rsRecipients['group'], 
		"This is a notice that email_test_takers.php is beginning a batch email script to test takers. Bulk customer ".$row_rsBC['firstname']." ".$row_rsBC['lastname']." will now send an email containing ".strtoupper($mode)." information to the following ".$numRecipients." addresses: ".$stringEmails);
	if ($result < 1) { die("ERROR - failed to send email to DTS service account."); }
	
	// 									Send an email for each recipient row 
	// **** Do NOT put multiple addresses in the "to" field unless you're OK with every recipient seeing every other recipient's email address.
	
	if (1) {
		$numEmailsSent = 0;
		do {
			$this_recipient = array($row_rsRecipients['email'] => 
															$row_rsRecipients['firstname']." ".$row_rsRecipients['lastname']);
			$this_body = str_replace("<br>", "\n", $email_body);
			// If this is an account email, then plug in each username and password
			if ($mode == "account") {
				$this_body = str_replace("[USERNAME]", $row_rsRecipients['user_name'], $this_body);
				$this_body = str_replace("[PASSWORD]", $row_rsRecipients['password'], $this_body);
			}
			//	SEND THE ACTUAL EMAIL ITSELF. This line sends one email to a test taker (then loop).
			$result = sendEmail($this_recipient, $dts, "", $email_subject, $this_body);
			// echo htmlspecialchars($this_recipient.", ");
			if ($result >= 1) { $numEmailsSent ++; }	// $numEmailsSent tracks # of SUCCESSES
		} while ($row_rsRecipients = mysql_fetch_assoc($rsRecipients));
		if (mysql_num_rows($rsRecipients) > 0) {
			mysql_data_seek($rsRecipients, 0);
			$row_rsRecipients = mysql_fetch_assoc($rsRecipients); }
	} 
		
	
	// 									Gather statistics / result message
	
	// Send BC a receipt that the email was sent, who to, how many people to
	if ($numEmailsSent == $numRecipients) {
		$result = sendEmail($bulkc, $dts, $dts, 
			"Your ".$mode." email was sent successfully to group ".$row_rsRecipients['group'], 
			"You have successfully sent an email containing ".strtoupper($mode)." information to ".$numRecipients." test takers in group ".$row_rsRecipients['group'].". The email is copied to you below. \n\n Subject: ".$email_subject."\n Body: ".$email_body."\n\n The email was sent to the following email addresses: ".$stringEmails);
	} else {
		$result = sendEmail($bulkc, $dts, $dts, 
			"Your ".$mode." email to group ".$row_rsRecipients['group']." had problems sending ", 
			"We had trouble sending your ".strtoupper($mode)." information to group".$row_rsRecipients['group'].".
			".$numEmailsSent." out of ".$numRecipients." test takers received the email. The email is copied to you below. \n\n Subject: ".$email_subject."\n Body: ".$email_body."\n\n The email was sent to the following email addresses: ".$stringEmails);
	}
	
	// Send DTS a receipt / log of results
	$result = sendEmail($dts, $dts, "", 
		"Finished ".$row_rsBC['company']." bulk email to group ".$row_rsRecipients['group'], 
		"This is a notice that email_test_takers.php has completed a batch email script to test takers. Bulk customer ".$row_rsBC['firstname']." ".$row_rsBC['lastname']." sent an email containing ".strtoupper($mode)." information to ".$numEmailsSent." out of ".$numRecipients." addresses: ".$stringEmails);
	
	
	
	$updateSQL = sprintf("UPDATE emails SET status=%s WHERE emailkey = %s",
			 SQLstr(($numEmailsSent == $numRecipients ? 3 : 5), "int"),
			 SQLstr($emailkey, "int"));
	$Result2 = mysql_query($updateSQL, $Assessment) or die(mysql_error());
	
	
	
	// 									Redirect user to results message.
	if ($numEmailsSent <> $numRecipients) { 
		error_log("ERROR - $ numRecipients = ".$numRecipients.
							", but $ numEmailsSent = {$numEmailsSent}. Emailkey = ".$emailkey);
	}
	header("Location: email_test_takers.php?message=".
				 ($numEmailsSent == $numRecipients ? "success" : "error"));
	exit();
	
}













// Fetch all groups associated with this bulk customer
$query_rsGroups = sprintf("SELECT g.groupkey, g.clientkey, g.group, COUNT(r.userkey) AS numpeople 
	FROM groups g
	LEFT JOIN registrants r ON r.group = g.group
	WHERE g.clientkey = %s AND (NOW() < g.date_end OR g.date_end IS NULL)
		".($mode == "account" ? "AND r.reset = 1 " : "")."
	GROUP BY g.groupkey ", 
		SQLstr($userkey, "int"));
$rsGroups = mysql_query($query_rsGroups, $Assessment) or die("rsGroups: ".mysql_error());
$row_rsGroups = mysql_fetch_assoc($rsGroups);
$totalRows_rsGroups = mysql_num_rows($rsGroups);


// Fetch a list of assignments
// This shows assignments if: 1) they are not over yet, 2) they are already started or coming up soon, 
//   and 3) some people haven't yet started that assn.
// Join emails table to check whether this assignment has been emailed out
// Join to students_assignments table: require that this assignment be assigned to some people
// Join to la_data table: ensure that there are some assigned people who do NOT yet have a la_data record
$query_rsAssignments = sprintf("SELECT a.*, di.dilemma_name, COUNT(DISTINCT sa.userkey) AS n, 
		IF(e.status = 3, 1, 0) AS emailed
	FROM la_assignments a
		LEFT JOIN la_dilemmas di ON a.assign_dilemmakey = di.dilemmakey 
		LEFT JOIN emails e ON a.assignmentkey = e.assignmentkey AND e.status = 3
		JOIN students_assignments sa ON a.assignmentkey = sa.assignmentkey
		LEFT JOIN la_data d ON sa.userkey = d.userkey AND a.assignmentkey = d.assignmentkey
	WHERE a.bulkcustomerkey = %s AND d.lakey IS NULL
		AND a.date_release >= NOW() AND a.date_start <= (NOW() + INTERVAL 1 WEEK)
	GROUP BY a.assignmentkey
	ORDER BY a.instrument_id, a.date_start ASC ", 
		SQLstr($userkey, "int"));
$rsAssignments = mysql_query($query_rsAssignments, $Assessment) or die("rsAssignments: ".mysql_error());
$row_rsAssignments = mysql_fetch_assoc($rsAssignments);
$totalRows_rsAssignments = mysql_num_rows($rsAssignments);
// die($query_rsAssignments);

// Fetch saved emails
$query_rsEmails = sprintf("SELECT e.*, a.assign_group, a.instrument_id
FROM emails e 
LEFT JOIN la_assignments a ON e.assignmentkey = a.assignmentkey
WHERE e.userkey = %s AND e.email_type = %s ORDER BY e.date_created DESC", 
		SQLstr($userkey, "int"),
		SQLstr($mode, "text"));
$rsEmails = mysql_query($query_rsEmails, $Assessment) or die("rsEmails: ".mysql_error());
$row_rsEmails = mysql_fetch_assoc($rsEmails);
$totalRows_rsEmails = mysql_num_rows($rsEmails);
//die($query_rsEmails);


// Fetch THIS email, if an emailkey is specified
if ($emailkey <> 0) {
	$query_rsThisEmail = sprintf("SELECT e.* FROM emails e WHERE e.emailkey = %s AND e.userkey = %s", 
			SQLstr($emailkey, "int"),
			SQLstr($userkey, "int"));
	$rsThisEmail = mysql_query($query_rsThisEmail, $Assessment) or die("rsEmails: ".mysql_error());
	$row_rsThisEmail = mysql_fetch_assoc($rsThisEmail);
	$totalRows_rsThisEmail = mysql_num_rows($rsThisEmail);
	
	// Set the POST values based on this query so that the form pre-fills
	$mode = $row_rsThisEmail['email_type'];
	$group = $row_rsThisEmail['group'];
	$assignment = $row_rsThisEmail['assignmentkey']; 
	$message = $row_rsThisEmail['email_message'];
	
}


// If the user has selected to delete an email, allow it IF: 1) it's this user's email and 2) it's just a draft.
if (isset($_GET['delete'])) {
	$delete = sprintf("DELETE FROM emails 
		WHERE emailkey = %s AND userkey = %s AND status = 1 ", 
			SQLstr($_GET['delete'], "int"),
			SQLstr($userkey, "int"));
	$result = mysql_query($delete, $Assessment) or die("rsAssignments: ".mysql_error());
	
	header("Location: ".$currentPage."?mode=".$mode);
}



?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- InstanceBegin template="/Templates/assess3.dwt.php" codeOutsideHTMLIsLocked="false" -->

<head>

<link href='https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic' rel='stylesheet' type='text/css'>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- InstanceBeginEditable name="doctitle" -->
<title>DTS: Send an email to test takers - <?php echo ucfirst($step); ?></title>
<!-- InstanceEndEditable -->
<!-- InstanceBeginEditable name="head" -->


<script src="../includes/date.js"></script>
<script src="../SpryAssets/SpryValidationSelect.js" type="text/javascript"></script>
<script src="../SpryAssets/SpryValidationTextarea.js" type="text/javascript"></script>
<script src="../SpryAssets/SpryCollapsiblePanel.js" type="text/javascript"></script>
<link href="../SpryAssets/SpryTabbedPanelsVertical.css" rel="stylesheet" type="text/css" />
<style type="text/css">
.twoColFixRtHdr #container #mainContent #CollapsiblePanel1 .CollapsiblePanelContent #TabbedPanels1 .TabbedPanelsTabGroup .TabbedPanelsTab {
	padding-top: 0px;
	padding-bottom: 0px;

}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table {
	margin-top: 0px;
	margin-left: 10px;
}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td h3 {
	margin-top: 0px;
}
.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td #CollapsiblePanel1 {
	margin-right: 0px;
	margin-left: 0px;
}


.twoColFixRtHdr #container #mainContent #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible table tr td .CollapsiblePanel {
	margin-top: 30px;
	margin-bottom: 20px;
	margin-right: 0px;
	margin-left: 0px;
}
</style>
<link href="../SpryAssets/SpryValidationSelect.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssets/SpryValidationTextarea.css" rel="stylesheet" type="text/css" />
<link href="../SpryAssets/SpryCollapsiblePanel.css" rel="stylesheet" type="text/css" />
<!-- InstanceEndEditable -->

<?php
$img_header = "DTSheader880.jpg";
if (isset($_SESSION['instrument_id'])) { $img_header = $_SESSION['instrument_id']."header880.jpg"; }
?>

<style type="text/css"> 
<!-- 
body  {
	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0; /* this centers the container in IE 5* browsers. The text is then set to the left aligned default in the #container selector */
	color: #333333;
	background-color: #FFF;
}
.twoColFixRtHdr #header {
	background-image: url(/_images/skin/backgrounds/<?php echo $_SESSION['instrument_id']; ?>_background.png);
	background-repeat: repeat;
	background-color: #93CCCB;
	height: 74px;
} 
--> 
--> 
</style>
<!--[if IE 5]>
<style type="text/css"> 
/* place css box model fixes for IE 5* in this conditional comment */
.twoColFixRtHdr #sidebar1 { width: 220px; }
</style>
<![endif]--><!--[if IE]>

<style type="text/css"> 
/* place css fixes for all versions of IE in this conditional comment */
.twoColFixRtHdr #sidebar1 { padding-top: 30px; }
.twoColFixRtHdr #mainContent { zoom: 1; }
/* the above proprietary zoom property gives IE the hasLayout it needs to avoid several bugs */
</style>
<![endif]-->

<link href="/_css/template.css" rel="stylesheet" type="text/css" />
<link href="/_css/template_assess3.css" rel="stylesheet" type="text/css" />

</head>

<body class="twoColFixRtHdr">

<div id="header">
	<?php if (isset($_SESSION['instrument_id'])) { ?>
    <div id="header_logo">
      <p class="uppercase"><?php echo str_replace("_", " ", $_SESSION['instrument_id']); ?></p>
    </div>
	<?php } else { ?>
  	<div class="header1_column1"></div>
  <?php } ?>
</div>

<div id="menu1">
  <h3>
				<?php include("../_includes/navigation/header_1a.html"); ?>
				<!-- InstanceBeginEditable name="ExtraMenuItem1" -->&nbsp;<!-- InstanceEndEditable -->&nbsp;
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
					<?php if (isset($_SESSION['log_firstname'])) {  ?>
  					You are logged in as <?php echo $_SESSION['log_firstname']." ".$_SESSION['log_lastname'];  } ?></h3>
</div>
	
<div id="container">
<p><!-- InstanceBeginEditable name="menu3" -->
  <?php include 'bc_links.php'; ?>
	<!-- InstanceEndEditable --></p>
<div id="mainContent"> <!-- InstanceBeginEditable name="main" -->
    <h1>SEND  
    <?php if ($mode == "generic") { ?>A MESSAGE <?php } else if ($mode == "account") { ?>
    LOGIN INFORMATION
<?php } else if ($mode == "assignment") { ?>
ASSIGNMENTS
<?php } ?></h1>
	
  

    <?php if ($step == "preview") { ?>
    	<span class="red">To edit this email, click the BACK button on your browser.</span>
		<?php } else if ($mode == "generic") { ?>
    <p>Use this page to send an email to a group of test takers. Choose the group from the menu below, then enter your message. Click "PREVIEW" to view the email and the list of recipients.</p>
    <?php } else if ($mode == "account") { ?>
    <p>Use this page to send login information to test takers who have never logged in to their accounts. Choose a group from the menu below, then add your own message if you wish. Click &quot;PREVIEW&quot; to view the email and the list of recipients.</p>
    <?php } else if ($mode == "assignment") { ?>
    <p>Use this page to send assignment information to test takers. Choose an assignment from the menu, then add your own message if you wish. Click &quot;PREVIEW&quot; to view the email and the list of recipients.</p>
    <?php } ?>
    
    
    <div id="CollapsiblePanel1" class="CollapsiblePanel">
    	<?php if ($totalRows_rsEmails > 0 AND $step == "create") { ?>
      <div class="CollapsiblePanelTab">SAVED EMAILS (click to view)</div>
      <div class="CollapsiblePanelContent">
      
      <ol><?php do { ?>
				<li>Email for <?php 
				if ($row_rsEmails['assignmentkey'] == "") { echo "group ".$row_rsEmails['group']; } 
				else if ($row_rsEmails['assign_group'] <> "") 
				{ echo $row_rsEmails['instrument_id']." assignment to ".$row_rsEmails['assign_group']; }
				else { echo "unknown group"; }
				?>,  
        <?php if ($row_rsEmails['status'] == 1) { 
					echo "created on ".date('M jS', strtotime($row_rsEmails['date_created'])).", not yet sent"; }
				else if ($row_rsEmails['status'] == 3) { 
					echo "sent on ".date('M jS', strtotime($row_rsEmails['date_created'])); }
				else if ($row_rsEmails['status'] == 5) { echo "ERROR ON SEND"; }
				else { echo "STATUS UNKNOWN"; } 
				if ($row_rsEmails['status'] == 1) { ?> 
        	(<a href="email_test_takers.php?emailkey=<?php echo $row_rsEmails['emailkey']; ?>">edit</a> or 
          <a href="email_test_takers.php?delete=<?php echo $row_rsEmails['emailkey']; ?>&mode=<?php echo $mode; ?>">delete</a>)
        <?php } ?>
        </li>
				
				<?php } while ($row_rsEmails = mysql_fetch_assoc($rsEmails)); ?>
    	</ol>
      
      </div>
      <?php } ?>
    </div>
    
    
    
    <?php if (isset($_GET['message']) AND $_GET['message'] == "error") { ?>
    <div class="box"><strong>There was an error</strong> and your email was not sent. Please <a href="../contactus.php">contact us</a> for help.</div>
    <?php } ?>
    
    <?php if (isset($_GET['message']) AND $_GET['message'] == "success") { ?>
    <div class="boxgreen"><strong>Your email has been sent successfully</strong>. Confirmation  has been sent to your email address. Please check your inbox.</div>
    <?php } ?>
    
    <?php if (isset($_GET['message']) AND $_GET['message'] == "draftsaved") { ?>
    <div class="boxgreen">Your draft has been saved.</div>
    <?php } ?>
    
    <?php if ($totalRows_rsAssignments == 0 AND $mode == "assignment") { ?>
    <div class="box"><strong>You have no saved assignments </strong> which haven't already been mailed out to test takers. To create an assignment and see your existing assignments, <a href="assignments.php">click here</a>.</div>
    <?php } ?>
    
    <?php if ($row_rsBC['company'] == "") { ?>
    	<div class="box red">You do not have a company name set for your account. Emails that you send using this page will not say who they are coming from. <a href="../security/profile_bulkcustomer.php">Click here</a> to set a company name.</div>
    <?php } ?>
    
    
<form id="form1" name="form1" method="post" action="<?php echo $editFormAction; ?>">
  
  
  <?php if ($step == "create") { ?>
  <div>
  
  <table border="0">
    
    <?php 
		// First check if a specified list of recipients exists.
		if (isset($list_testtakers) AND $list_testtakers <> "") { ?>
		 <tr>
     	<td>This email will go to </td>
      <td><?php echo $list_testtakers; ?></td>
     </tr>
      <?php
		}
		else if ($mode == "generic" OR $mode == "account") { 
		 // For generic or account-based emails, BC chooses a group to email to.?>
     <tr>
      <td width="170">Choose a group</td>
      <td><span id="spryselect2">
        <select name="group" id="group">
          <option value="" <?php if (!(strcmp("", $group))) 
									{ echo "selected=\"selected\""; } ?>> - select one - </option>
          <?php 
								// List groups available to me (based on the test takers already in our system) 
								do {   
      	if ($row_rsGroups['group'] <> "") { ?>
          <option value="<?php echo $row_rsGroups['group']?>"<?php if (!(strcmp($row_rsGroups['group'], $group))) {echo "selected=\"selected\"";} ?>> <?php echo $row_rsGroups['group']." &nbsp; (".$row_rsGroups['numpeople']; ?>) </option>
          <?php } } while ($row_rsGroups = mysql_fetch_assoc($rsGroups));
						$rows = mysql_num_rows($rsGroups);
						if($rows > 0) {
								mysql_data_seek($rsGroups, 0);
							$row_rsGroups = mysql_fetch_assoc($rsGroups);
						} ?>
        </select>
        <span class="selectRequiredMsg">Please select an item.</span></span><span class="selectRequiredMsg">Please select an item.</span>
        
        <!-- Create a blank POST variable for assignment to avoid errors -->
        <input name="assignment" type="hidden" id="assignment" value="" />
        </td>
   	  </tr> 
			<?php 
		}  
		else if ($mode == "assignment") { 
			// when emailing out an assignment, the BC chooses the assignment, which determines what group will receive the email. ?>
    <tr>
      <td width="170">Choose an assignment</td>
      <td>
      	<span id="spryselect1">
        <select name="assignment" class="pulldown_width_400" id="assignment">
          <option value="" <?php if (!(strcmp("", $assignment))) 
									{ echo "selected=\"selected\""; } ?>> - select one - </option>
          <?php 
								// List groups available to me (based on the test takers already in our system) 
								do {   
      	if ($row_rsAssignments['assignmentkey'] <> "") { ?>
          <option value="<?php echo $row_rsAssignments['assignmentkey']?>" 
					<?php if ($row_rsAssignments['assignmentkey'] == $assignment) 
					{ echo "selected='selected'"; } ?>>
						<?php echo str_replace("_", " ", $row_rsAssignments['instrument_id']); ?>, 
            group <?php echo $row_rsAssignments['assign_group']; ?>: 
            <?php echo $row_rsAssignments['dilemma_name']; ?> - 
            start <?php echo date('M jS', strtotime($row_rsAssignments['date_start'])); ?> - 
            due <?php echo date('M jS Y', strtotime($row_rsAssignments['date_end'])); ?>
            <?php if ($row_rsAssignments['emailed'] == 1) { ?>(emailed) <?php } ?>
            (<?php echo $row_rsAssignments['n']; ?> haven't started)
          </option>
          <?php } } while ($row_rsAssignments = mysql_fetch_assoc($rsAssignments));
						$rows = mysql_num_rows($rsAssignments);
						if($rows > 0) {
								mysql_data_seek($rsAssignments, 0);
							$row_rsAssignments = mysql_fetch_assoc($rsAssignments);
						} ?>
        </select>
        <span class="selectRequiredMsg"><br />Please select an item.</span></span><span class="selectRequiredMsg"><br />Please select an item.</span>
        
        <!-- Create a blank POST variable for group to avoid errors -->
        <input name="group" type="hidden" id="group" value="" />
        </td>
    </tr>
    <?php } ?>
    <tr>
      <td width="170">Add your own message to the email</td>
      <td><span id="sprytextarea1">
        <textarea name="email_message" class="textarea080_500" id="email_message"><?php echo $message; ?></textarea>
        <span class="textareaRequiredMsg">Please enter a message.</span>
</span></td>
    </tr>
  	</table>
  
  	<!-- Close div for CREATE EMAIL section -->
  </div>
  <?php } // ENDIF: if we are in the "create" step. ?>
  
  
  
  
  <?php if ($step == "preview") { ?>
  <div>
  	<h3>Email content</h3>
    
    <table width="670" border="0">
      <tr>
        <td width="72"><div align="right">Subject:</div></td>
        <td width="588"><?php echo $email_subject; ?></td>
      </tr>
      <tr>
        <td><div align="right">Body:</div></td>
        <td><?php echo str_replace("\n", "<br />", $email_body); ?></td>
      </tr>
    </table>
    
    <h3>Recipient list  (<?php echo $totalRows_rsRecipients; ?> test takers)</h3>
    
    <?php if (isset($totalRows_rsNoReset) AND $totalRows_rsNoReset > 0) { ?>
    <div class="box red"><strong>Warning</strong>: The recipient list includes <?php echo $totalRows_rsNoReset; ?> test taker<?php echo ($totalRows_rsNoReset > 1 ? "s whose accounts were" : " whose account was"); ?> created automatically and who <strong>may not yet have their login information</strong>. If you would like to send this  information prior to sending this <?php if ($mode == "assignment") { ?>assignment<?php } else { ?>message<?php } ?>, <a href="email_test_takers.php?mode=account">click here</a>.
    </div>
    <?php } ?>
    
    <?php if (isset($row_rsThisAssignment) AND $row_rsThisAssignment['date_start'] > date('Y-m-d')) { ?>
    	<div class="box red"><strong>Warning</strong>: This assignment does not start until 
				<?php echo date('F jS', strtotime($row_rsThisAssignment['date_start'])); ?>. 
        Test takers will not be able to start the assignment until then.</div>
    <?php } ?>
  	
    <table width="670" border="0">
      <tr class="tablehead_knockout">
        <td align="center">Name</td>
        <td align="center">Email</td>
        <td align="center">Man. level</td>
        <td align="center">Group</td>
        <td align="center">Registered</td>
        <td align="center">Last log-in</td>
      </tr>
      <?php 
			do { 
				if ($row_rsRecipients['userkey'] <> "") { ?>
        <tr>
          <td><?php echo $row_rsRecipients['firstname']." ".$row_rsRecipients['lastname']; ?></td>
          <td><?php echo $row_rsRecipients['email']; ?></td>
          <td><?php echo $row_rsRecipients['man_level']; ?></td>
          <td><div align="center"><?php echo $row_rsRecipients['group']; ?></div></td>
          <td><div align="center"><?php 
            echo date('Y-m-d', strtotime($row_rsRecipients['register_date'])); ?></div></td>
          <td><div align="center"><?php echo ($row_rsRecipients['last_login'] > 0 ? 
            $row_rsRecipients['last_login'] : "never"); ?></div></td>
        </tr>
      	<?php 
				}
			} while ($row_rsRecipients = mysql_fetch_assoc($rsRecipients)); ?>
    </table>
  
  	<?php // Hidden variables to pass on the group / assignment and custom message in question, as well as the mode (what kind of message is being sent) too, though this shouldn't really be necessary.
		// These hidden inputs are contained in the big IF statement: IF the page is in preview mode only.
		?>
    <input name="group" type="hidden" id="group" value="<?php 
			if (isset($_POST['group'])) { echo $_POST['group']; } ?>" />
  	<input name="assignment" type="hidden" id="assignment" value="<?php 
			if (isset($_POST['assignment'])) { echo $_POST['assignment']; } ?>" />
    <input name="email_message" type="hidden" id="email_message" value="<?php 
			if (isset($_POST['email_message'])) { echo htmlspecialchars($_POST['email_message']); } ?>" />
  
  	<!-- Close div for PREVIEW section -->
  </div>
  <?php } ?>
  
  
  
  <table width="670" border="0">
    <tr>
      <td colspan="2">
      	<?php // Pass the mode as a POST variable too, just for kicks and redundancy's sake. ?>
    		<input name="mode" type="hidden" id="mode" value="<?php echo $mode; ?>" />
      
        <input name="bulkcustomerkey" type="hidden" id="bulkcustomerkey" 
        value="<?php echo $_SESSION['log_userkey']; ?>" />
        
        <?php if ($step == "create") { ?>
        Click on PREVIEW to see the recipient list and email content.
        <input name="step" type="hidden" id="step" value="preview" />
        <?php } else if ($step == "preview") { ?>
        <span>Click on SEND to email all recipients on the list.</span> 
        <span class="red">Do not click the SEND button twice.</span>
        <input name="step" type="hidden" id="step" value="send" />
				<?php } ?> 
      </td>
      </tr>
      <tr>
      <td><input type="submit" name="DRAFT" id="DRAFT" value="SAVE AS DRAFT" />
      </td>
      <td align="right">
				<?php $button_text = "";
				if ($step == "create") { $button_text = "PREVIEW EMAIL"; } 
        else if ($step == "preview") { $button_text = "SEND EMAIL"; } ?>
        <input type="submit" name="SUBMIT" id="SUBMIT" value="<?php echo $button_text; ?>" />
      </td>
    </tr>
</table>

    <input type="hidden" name="MM_insert" value="form1" />
  </form>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    
    
<script type="text/javascript">

<?php if ($step == "create") { ?>
	// Either group or assignment selection is present + required, depending on type of email ($mode). 
	<?php if ($mode == "generic" OR $mode == "account") { ?>
		var spryselect2 = new Spry.Widget.ValidationSelect("spryselect2", {validateOn:["blur", "change"]});
	<?php } ?>
	<?php if ($mode == "assignment") { ?>
		var spryselect1 = new Spry.Widget.ValidationSelect("spryselect1", {validateOn:["change", "blur"]});
	<?php } ?>

	// sprytextarea1 is required for generic emails, since no other email content is sent.
	// otherwise it's optional.
	var sprytextarea1 = new Spry.Widget.ValidationTextarea("sprytextarea1", 
		{validateOn:["blur", "change"]<?php if ($mode <> "generic") { ?>, isRequired:false<?php } ?>});
	
<?php } ?>

var CollapsiblePanel1 = new Spry.Widget.CollapsiblePanel("CollapsiblePanel1");

</script> 
<!-- InstanceEndEditable -->
  <!-- end #mainContent --></div>
  <!-- This clearing element should immediately follow the #mainContent div in order to force the #container div to contain all child floats --><br class="clearfloat" />
  <!-- end #container -->
</div>
</body>
<!-- InstanceEnd --></html>
<?php



?>
